(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    896089,      19908]
NotebookOptionsPosition[    872023,      19202]
NotebookOutlinePosition[    872369,      19217]
CellTagsIndexPosition[    872326,      19214]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 StyleBox[
  RowBox[{
  "Light", " ", "Scattering", " ", "by", " ", "a", " ", "Spherical", " ", 
   "Particle", " ", "for", " ", 
   StyleBox["Mathematica",
    FontSlant->"Italic"], " ", "8"}],
  FontFamily->"Courier New",
  FontSize->15,
  Background->RGBColor[0.87, 0.94, 1]]], "Input",
 CellChangeTimes->{{3.546253595517801*^9, 3.5462535955188007`*^9}}],

Cell[BoxData[
 RowBox[{"0.000021600000000000000000000000000000000000000001`30.", " ", "by", 
  " ", "for", " ", "Light", " ", "Mathematica", " ", "Particle", " ", 
  "Scattering", " ", "Spherical"}]], "Output",
 CellChangeTimes->{3.546364756410411*^9, 3.546768689017686*^9, 
  3.5478087933846464`*^9, 3.547808832368797*^9, 3.5478088641145935`*^9, 
  3.547811859235227*^9, 3.547815697118663*^9, 3.547815867402805*^9, 
  3.547853841709482*^9, 3.5522136321988697`*^9, 3.55221427993487*^9, 
  3.552216224820798*^9, 3.5522170881198597`*^9, 3.5522172009398594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Usage Notes", "Section",
 FontSize->15],

Cell[TextData[{
 "Date: \t\tLast Modification: 05/17/12\n\t\t",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Version 8.0.10\n\t\t\nAuthor:\tGuy Mongelli\n\t  \n\t  \tUniversity of \
Rochester\n\t  \tDept. of Chemical Engineering\n\t  \tRochester, NY 14627\n\t \
 \tmongelli@che.rochester.edu\n"
}], "Text",
 CellChangeTimes->{{3.546244208980792*^9, 3.546244272167406*^9}, 
   3.547816612809733*^9},
 FontSize->13],

Cell[TextData[{
 "Application:\n\tThis notebook calculates and plots the scattering, \
absorption, and extinction properties of a spherical particle of known \
refractive index in a suspending medium, also of known index.  The particle \
is illuminated by an unpolarized or linearly polarized  plane wave of unit \
amplitude.  The code derives from expositions of the problem in ",
 ButtonBox["Principles of Optics",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://books.cambridge.org/0521642221.htm"], None}],
 " by Born and Wolf, ",
 ButtonBox["Absorption and Scattering of Light by Small Particles",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://www.wiley.com/cda/product/0,,0471293407%7Cdesc%7C2654,00.\
html"], None}],
 " by Bohren and Huffman, and ",
 ButtonBox["Light Scattering by Small Particles",
  BaseStyle->"Hyperlink",
  ButtonData:>{
    URL["http://store.doverpublications.com/0486642283.html"], None}],
 "  by H.C. van de Hulst.  It is capable of calculating the spectral \
properties of such a particle if the dispersion of both the particle and \
suspending medium are known.  Similarly, absorptive suspending media are \
allowable when the complex refractive index is provided. "
}], "Text"],

Cell[TextData[StyleBox["Layout:\n\tParameters such as cross sections, phase \
functions, efficiency factors, etc. may be calculated and displayed.",
 FontSize->12]], "Text",
 CellChangeTimes->{{3.5462495383746157`*^9, 3.546249555649604*^9}},
 FontFamily->"Times New Roman",
 FontSize->13]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model Parameters", "Section",
 FontSize->15],

Cell["\<\
This section is devoted to entering the known parameters for the problem \
(i.e., complex indices of refraction, wavelength of the illuminating \
radiation, sphere radius, etc.).  Subscripts of 1 correspond to the embedding \
medium and subscripts of 2 represent the sphere.  It is assumed by H.C. van \
de Hulst that neither the medium nor the particle is magnetic (or at very \
least they have the same permeability).  Notice that the imaginary part of \
the refractive index is represented by a lower case k, and that capital K \
represents the wave number.  Finally, it would be more efficient to assign \
the parameter values (lambda of excitation, radius, real and imaginary index) \
using rewrite rules in the actual function calls but I've presented them as \
constants because this format is more readable.\
\>", "Text",
 CellChangeTimes->{{3.546244370409025*^9, 3.5462444262092166`*^9}, {
  3.5462444584710617`*^9, 3.54624445967113*^9}, {3.546249906528673*^9, 
  3.546250041833412*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vary", " ", "n2", " ", "from", " ", ".2", " ", "to", " ", ".1", " ",
   "and", " ", "k2", " ", "from", " ", "1.5", " ", "to", " ", 
  "5.5"}]], "Input",
 CellChangeTimes->{{3.546254341962495*^9, 3.5462543702211113`*^9}}],

Cell[BoxData[
 RowBox[{"0.16500000000000004`", " ", "and", " ", 
  SuperscriptBox["from", "2"], " ", "k2", " ", "n2", " ", 
  SuperscriptBox["to", "2"], " ", "Vary"}]], "Output",
 CellChangeTimes->{3.5462686542539015`*^9, 3.546351144837224*^9, 
  3.546353440383173*^9, 3.546364756426011*^9, 3.5463810366593027`*^9, 
  3.546768689058688*^9, 3.547293326160194*^9, 3.547808793431446*^9, 
  3.5478088323843966`*^9, 3.547808864130193*^9, 3.5478118592508273`*^9, 
  3.5478156971498613`*^9, 3.547815867434004*^9, 3.5478538417406816`*^9, 
  3.55221363224887*^9, 3.5522142799958696`*^9, 3.5522162248968287`*^9, 
  3.5522170881718597`*^9, 3.5522172009688597`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "1"], " ", "=", " ", "1.4"}], ";"}], 
  "                             ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Real", " ", "part", " ", "of", " ", "refractive", " ", "index", " ", 
     "of", " ", "medium"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "2"], " ", "=", ".2"}], ";"}], "            ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Real", " ", "part", " ", "of", " ", "refractive", " ", "index", " ", 
     "of", " ", "scatterer"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["k", "1"], " ", "=", " ", 
    RowBox[{"0", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "2"}]]}]}], " ", ";"}], "                ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Imag", "\"\<inary part of refractive index of medium \>"}], 
    "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["k", "2"], " ", "=", " ", "3.6"}], ";"}], 
  "                 ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Imaginary", " ", "part", " ", "of", " ", "refractive", " ", "index", " ",
      "of", " ", "scatterer"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "0"], " ", "=", " ", 
    RowBox[{"544543", " ", "*", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], ";"}], "   ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"V", "acuum"}], " ", "wavelength", " ", "in", " ", "\[Mu]m"}], 
    " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r", " ", "=", ".1"}], "             ", 
  RowBox[{"(*", 
   StyleBox[
    RowBox[{"Sphere", " ", "radius", " ", "in", " ", "\[Mu]m"}],
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}], 
  StyleBox[";",
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}]}], "Input",
 CellChangeTimes->{{3.5455642712180552`*^9, 3.545564318402754*^9}, 
   3.545564353267748*^9, {3.5455660617254667`*^9, 3.5455660618414726`*^9}, {
   3.5455776394526744`*^9, 3.545577639570681*^9}, {3.545578350680354*^9, 
   3.5455783507533584`*^9}, {3.5455807233170614`*^9, 
   3.5455807473964386`*^9}, {3.546250059056397*^9, 3.5462500768704157`*^9}, {
   3.546254315326971*^9, 3.5462543158069987`*^9}, {3.5463647528536043`*^9, 
   3.5463647529940047`*^9}, {3.546770502111679*^9, 3.546770510609165*^9}, {
   3.5472947361189566`*^9, 3.547294739973342*^9}, {3.547808749314929*^9, 
   3.547808764634031*^9}, {3.547808844942316*^9, 3.5478088498250847`*^9}, {
   3.54785382887066*^9, 3.547853836374273*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.546770503117737*^9, 3.5467705055908785`*^9}}],

Cell["Required derived quantities for given parameter set.", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["m", "1"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["n", "1"], " ", "+", " ", 
     RowBox[{"I", " ", 
      SubscriptBox["k", "1"]}]}]}], "  ", ";"}], "               ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Complex", " ", "refractive", " ", "index", " ", "of", " ", "medium"}], 
    " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["m", "2"], " ", "=", " ", 
    RowBox[{
     SubscriptBox["n", "2"], " ", "+", " ", 
     RowBox[{"I", " ", 
      SubscriptBox["k", "2"]}]}]}], "  ", ";"}], "             ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Complex", " ", "refractive", " ", "index", " ", "of", " ", "scatterer"}],
     " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["m", "Rel"], " ", "=", " ", 
    FractionBox[
     RowBox[{
      SubscriptBox["n", "2"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox["k", "2"]}]}], 
     RowBox[{
      SubscriptBox["n", "1"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox["k", "1"]}]}]]}], " ", ";"}], "          ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Relative", " ", "refractive", " ", "index", " ", "between", " ", 
     "scatterer", " ", "and", " ", "medium"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "1"], " ", "=", 
    FractionBox[
     SubscriptBox["\[Lambda]", 
      RowBox[{"0", " "}]], 
     RowBox[{
      SubscriptBox["n", "1"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox["k", "1"]}]}]]}], ";"}], "               ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"W", "avelength"}], " ", "in", " ", "external", " ", "medium", 
     " ", "in", " ", "\[Mu]m"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain",
   FontVariations->{"CompatibilityType"->0}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["\[Lambda]", "2"], " ", "=", 
    FractionBox[
     SubscriptBox["\[Lambda]", 
      RowBox[{"0", " "}]], 
     RowBox[{
      SubscriptBox["n", "2"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox["k", "2"]}]}]]}], " ", ";"}], "              ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"W", "avelength"}], " ", "inside", " ", "sphere", " ", "in", " ",
      "\[Mu]m"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["K", "0"], " ", "=", "  ", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     SubscriptBox["\[Lambda]", "0"]]}], ";"}], "                         ", 
  RowBox[{
   StyleBox["(*",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["Wave",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["number",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["vacuum",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    SuperscriptBox[
     StyleBox["\[Mu]m",
      FontFamily->"Times New Roman",
      FontWeight->"Plain"], 
     RowBox[{"-", "1"}]]}], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["K", "1"], " ", "=", "  ", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     SubscriptBox["\[Lambda]", "1"]]}], ";"}], "                         ", 
  RowBox[{
   StyleBox["(*",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["Wave",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["number",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["external",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["medium",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    SuperscriptBox[
     StyleBox["\[Mu]m",
      FontFamily->"Times New Roman",
      FontWeight->"Plain"], 
     RowBox[{"-", "1"}]]}], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["K", "2"], " ", "=", "  ", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], 
    SubscriptBox["\[Lambda]", "2"]]}], "                          ", 
  RowBox[{
   StyleBox[
    RowBox[{"(", 
     StyleBox["*",
      FontFamily->"Times New Roman",
      FontWeight->"Plain"]}]], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
    "Wave", " ", "number", " ", "inside", " ", "the", " ", "sphere", " ", 
     "in", " ", 
     SuperscriptBox["\[Mu]m", 
      RowBox[{"-", "1"}]]}],
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}], " ", ";"}]}], "Input",
 CellChangeTimes->{{3.5455643743589544`*^9, 3.5455643866836596`*^9}, {
  3.5455644875114264`*^9, 3.5455645064125075`*^9}, {3.5462500838618155`*^9, 
  3.5462501045439987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["m", "1"], "            ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Complex", " ", "refractive", " ", "index", " ", "of", " ", "medium"}], 
    " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "2"], "            ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Complex", " ", "refractive", " ", "index", " ", "of", " ", "scatterer"}],
     " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["m", "Rel"], "           ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Relative", " ", "refractive", " ", "index", " ", "between", " ", 
     "scatterer", " ", "and", " ", "medium"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  SubscriptBox["\[Lambda]", "1"], "               ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"W", "avelength"}], " ", "in", " ", "external", " ", "medium", 
     " ", "in", " ", "\[Mu]m"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain",
   FontVariations->{"CompatibilityType"->0}]}], "\n", 
 RowBox[{
  SubscriptBox["\[Lambda]", "2"], "               ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"W", "avelength"}], " ", "inside", " ", "sphere", " ", "in", " ",
      "\[Mu]m"}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  SubscriptBox["K", "0"], "                ", 
  RowBox[{
   StyleBox["(*",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["Wave",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["number",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["vacuum",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    SuperscriptBox[
     StyleBox["\[Mu]m",
      FontFamily->"Times New Roman",
      FontWeight->"Plain"], 
     RowBox[{"-", "1"}]]}], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["K", "1"], "                  ", 
  RowBox[{
   StyleBox["(*",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   RowBox[{
    StyleBox["Wave",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["number",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["external",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["medium",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox["in",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    StyleBox[" ",
     FontFamily->"Times New Roman",
     FontWeight->"Plain"], 
    SuperscriptBox[
     StyleBox["\[Mu]m",
      FontFamily->"Times New Roman",
      FontWeight->"Plain"], 
     RowBox[{"-", "1"}]]}], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}]}], "\n", 
 RowBox[{
  SubscriptBox["K", "2"], "              ", 
  RowBox[{
   StyleBox[
    RowBox[{"(", 
     StyleBox["*",
      FontFamily->"Times New Roman",
      FontWeight->"Plain"]}]], 
   StyleBox[" ",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox[
    RowBox[{
    "Wave", " ", "number", " ", "inside", " ", "the", " ", "sphere", " ", 
     "in", " ", 
     SuperscriptBox["\[Mu]m", 
      RowBox[{"-", "1"}]]}],
    FontFamily->"Times New Roman",
    FontWeight->"Plain"], 
   StyleBox["*)",
    FontFamily->"Times New Roman",
    FontWeight->"Plain"]}], " "}], "\n"}], "Input",
 CellChangeTimes->{{3.5455643910449085`*^9, 3.545564467898305*^9}, {
  3.545564530426881*^9, 3.545564532259986*^9}}],

Cell[BoxData["1.4`"], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010018597`*^9}],

Cell[BoxData[
 RowBox[{"0.2`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.6`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010048594`*^9}],

Cell[BoxData[
 RowBox[{"0.14285714285714288`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.5714285714285716`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010068593`*^9}],

Cell[BoxData["0.38895928571428573`"], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010088596`*^9}],

Cell[BoxData[
 RowBox[{"0.008377584615384615`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.1507965230769231`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010118594`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"2000000", " ", "\[Pi]"}], "544543"]], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010138597`*^9}],

Cell[BoxData["16.153838044105644`"], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010158596`*^9}],

Cell[BoxData[
 RowBox[{"2.307691149157949`", "\[VeryThinSpace]", "+", 
  RowBox[{"41.53844068484309`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.545564442100829*^9, 3.5455644728755894`*^9, 3.5455721834326077`*^9, 
   3.5455776949418483`*^9, 3.5455783550696054`*^9, 3.545580756054934*^9, 
   3.546254645318742*^9, 3.546268654306905*^9, 3.5463511448572245`*^9, 
   3.546353440398773*^9, 3.546364756441611*^9, 3.546381036711306*^9, 
   3.54676868908169*^9, 3.5467705188776383`*^9, 3.5472933262381945`*^9, 
   3.547808793462646*^9, {3.5478088324155965`*^9, 3.547808864145793*^9}, 
   3.5478118592820272`*^9, 3.547815697181061*^9, 3.547815867465203*^9, 
   3.5478194204067926`*^9, 3.547853841771882*^9, 3.5522136322788696`*^9, 
   3.5522142800328693`*^9, 3.5522162249248395`*^9, 3.5522170882028594`*^9, 
   3.5522172010178595`*^9}]
}, Open  ]],

Cell[TextData[{
 "Now create the size parameter.  Note there are actually three size \
parameters defined (as opposed to Bohren and Huffman's single size \
parameter), two of which are now complex and due to the fact that the \
external medium may be absorptive.  They come from the paper by Fu and Sun \
(Applied Optics, Vol. ",
 StyleBox["40",
  FontWeight->"Bold"],
 ", No. 9, 2001,pp. 1354-1361) which explains how to treat a particle in an \
absorbing medium.  They are used subsequently to determine how many terms are \
maintained in the series defining the scattered intensity, cross sections, \
efficiencies, asymmetry factor, etc., and also serve as arguments to the \
scattering coefficient equations.  They are set up as functions of particle \
radius so that this may be varied and plots vs. radius (or q parameter) can \
be examined."
}], "Text",
 CellChangeTimes->{{3.545564550767044*^9, 3.545564553746215*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"q", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{
   SubscriptBox["K", "0"], " ", "a"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["q", "1"], "[", "a_", "]"}], " ", ":=", 
   RowBox[{
    SubscriptBox["K", "1"], " ", "a"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["q", "2"], "[", "a_", "]"}], " ", ":=", 
   RowBox[{
    SubscriptBox["K", "2"], " ", "a"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The size parameter is \>\"", ",", 
   RowBox[{
    RowBox[{"q", "[", "r", "]"}], "//", "N"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The external size parameter is \>\"", ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["q", "1"], "[", "r", "]"}], "//", "N"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The internal size parameter is \>\"", ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["q", "2"], "[", "r", "]"}], "//", "N"}]}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The size parameter is \"\>", "\[InvisibleSpace]", 
   "1.1538455745789746`"}],
  SequenceForm["The size parameter is ", 1.1538455745789746`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5442687944375*^9, 3.544282330965432*^9, 3.544283147969162*^9, 
   3.54434996591493*^9, 3.5455645614306545`*^9, 3.545572186101761*^9, 
   3.5455776988960743`*^9, 3.545578359242844*^9, 3.545580758478072*^9, 
   3.546254647676877*^9, 3.546268654326906*^9, 3.5463511448772244`*^9, 
   3.5463534404299736`*^9, 3.5463647564572105`*^9, 3.5463810367463083`*^9, 
   3.546768689115692*^9, 3.546770520256717*^9, 3.547293326269395*^9, 
   3.5478087935406456`*^9, {3.5478088324467964`*^9, 3.547808864176993*^9}, 
   3.547811859313227*^9, 3.5478156972122593`*^9, 3.547815867496402*^9, 
   3.5478194219355826`*^9, 3.547853841849882*^9, 3.5522136323138695`*^9, 
   3.5522142800688696`*^9, 3.5522162249648557`*^9, 3.5522170882408595`*^9, 
   3.5522172010398593`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The external size parameter is \"\>", "\[InvisibleSpace]", 
   "1.6153838044105644`"}],
  SequenceForm["The external size parameter is ", 1.6153838044105644`],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5442687944375*^9, 3.544282330965432*^9, 3.544283147969162*^9, 
   3.54434996591493*^9, 3.5455645614306545`*^9, 3.545572186101761*^9, 
   3.5455776988960743`*^9, 3.545578359242844*^9, 3.545580758478072*^9, 
   3.546254647676877*^9, 3.546268654326906*^9, 3.5463511448772244`*^9, 
   3.5463534404299736`*^9, 3.5463647564572105`*^9, 3.5463810367463083`*^9, 
   3.546768689115692*^9, 3.546770520256717*^9, 3.547293326269395*^9, 
   3.5478087935406456`*^9, {3.5478088324467964`*^9, 3.547808864176993*^9}, 
   3.547811859313227*^9, 3.5478156972122593`*^9, 3.547815867496402*^9, 
   3.5478194219355826`*^9, 3.547853841849882*^9, 3.5522136323138695`*^9, 
   3.5522142800688696`*^9, 3.5522162249648557`*^9, 3.5522170882408595`*^9, 
   3.552217201042859*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"\<\"The internal size parameter is \"\>", "\[InvisibleSpace]", 
    "0.23076911491579488`"}], "\[VeryThinSpace]", "+", 
   RowBox[{"4.153844068484309`", " ", "\[ImaginaryI]"}]}],
  SequenceForm["The internal size parameter is ", 
   Complex[0.23076911491579488`, 4.153844068484309]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.5442687944375*^9, 3.544282330965432*^9, 3.544283147969162*^9, 
   3.54434996591493*^9, 3.5455645614306545`*^9, 3.545572186101761*^9, 
   3.5455776988960743`*^9, 3.545578359242844*^9, 3.545580758478072*^9, 
   3.546254647676877*^9, 3.546268654326906*^9, 3.5463511448772244`*^9, 
   3.5463534404299736`*^9, 3.5463647564572105`*^9, 3.5463810367463083`*^9, 
   3.546768689115692*^9, 3.546770520256717*^9, 3.547293326269395*^9, 
   3.5478087935406456`*^9, {3.5478088324467964`*^9, 3.547808864176993*^9}, 
   3.547811859313227*^9, 3.5478156972122593`*^9, 3.547815867496402*^9, 
   3.5478194219355826`*^9, 3.547853841849882*^9, 3.5522136323138695`*^9, 
   3.5522142800688696`*^9, 3.5522162249648557`*^9, 3.5522170882408595`*^9, 
   3.552217201047859*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "I use the equation suggested by Wiscombe [",
 StyleBox["Applied Optics, Vol. 19, (1980) page 1505]",
  FontColor->RGBColor[1, 0, 0]],
 " for obtaining the series solution termination point for a given size \
parameter.  Since there are now three (two possibly complex) size parameters, \
I choose the largest of the absolute values of the three as the argument to \
the equation.  The equation was found to be valid for the range 8 < q < 4200. \
 For smaller q values, the suggestion is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"LastTerm", " ", "=", " ", 
    RowBox[{"q", " ", "+", " ", 
     RowBox[{"4", " ", 
      SuperscriptBox["q", 
       FractionBox["1", "3"]]}], " ", "+", "1."}]}], TraditionalForm]]],
 "  I don't suggest trying to run the program for very large size parameters \
due to the resulting long computation times (in fact, anything over q=100 \
becomes tediously long)."
}], "Text",
 CellChangeTimes->{{3.546252061791947*^9, 3.546252091413641*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Largest", "[", "a_", "]"}], " ", ":=", 
  RowBox[{"Max", "[", 
   RowBox[{
    RowBox[{"q", "[", "a", "]"}], ",", 
    RowBox[{"Abs", "[", 
     RowBox[{
      SubscriptBox["q", "1"], "[", "a", "]"}], "]"}], ",", 
    RowBox[{"Abs", "[", 
     RowBox[{
      SubscriptBox["q", "2"], "[", "a", "]"}], "]"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LastTerm", "[", "a_", "]"}], ":=", " ", 
   RowBox[{"Ceiling", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"Largest", "[", "a", "]"}], " ", "+", " ", 
      RowBox[{"4.05", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Largest", "[", "a", "]"}], ")"}], 
        FractionBox["1", "3"]]}], " ", "+", "2"}], "]"}], "]"}]}], " ", 
  ";"}], "\n", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The series termination value is \>\"", ",", 
   RowBox[{"LastTerm", "[", "r", "]"}], ",", " ", "\"\<.\>\""}], 
  "]"}]}], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The series termination value is \"\>", "\[InvisibleSpace]", 
   "13", "\[InvisibleSpace]", "\<\".\"\>"}],
  SequenceForm["The series termination value is ", 13, "."],
  Editable->False]], "Print",
 CellChangeTimes->{3.544268796734375*^9, 3.5442823310424366`*^9, 
  3.544283148071168*^9, 3.544349969099112*^9, 3.5455645662829323`*^9, 
  3.545572189151935*^9, 3.5455777009281907`*^9, 3.545578365884224*^9, 
  3.5455807609522142`*^9, 3.5462546509780655`*^9, 3.546268654343907*^9, 
  3.5463511449172244`*^9, 3.546353440445574*^9, 3.546364756488411*^9, 
  3.546381036768309*^9, 3.5467686891466937`*^9, 3.5467705218688097`*^9, 
  3.547293326284995*^9, 3.5478087935874453`*^9, 3.547808832477996*^9, 
  3.547808864208193*^9, 3.547811859328827*^9, 3.5478156972434587`*^9, 
  3.547815867527601*^9, 3.5478194234643726`*^9, 3.5478538418810825`*^9, 
  3.5522136323388696`*^9, 3.5522142800938697`*^9, 3.5522162249928665`*^9, 
  3.5522170882698593`*^9, 3.5522172010708594`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Required function definitions", "Section",
 FontSize->15],

Cell["\<\
The following defines a \"complex conjugate\" function.  This allows the \
familiar  *  notation to be used later when the complex conjugates of certain \
functions are required.\
\>", "Text",
 CellChangeTimes->{{3.5462484972110643`*^9, 3.546248505448536*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Phi]_", "*"], " ", ":=", " ", 
  RowBox[{"\[Phi]", "/.", 
   RowBox[{
    RowBox[{"Complex", "[", 
     RowBox[{"u_", ",", " ", "v_"}], "]"}], " ", "\[Rule]", " ", 
    RowBox[{"Complex", "[", 
     RowBox[{"u", ",", " ", 
      RowBox[{"-", "v"}]}], "]"}]}]}]}]], "Input"],

Cell["\<\
The spherical Bessel, Neumann and Hankel functions are used to represent the \
radial field dependence.   Boundary conditions at r = 0 and r = \[Infinity]  \
require finite fields and hence the need for all three types of Bessel \
functions.  We go straight to the Ricatti-Bessel functions here by simply \
multiplying through by \[Rho].\
\>", "Text",
 CellChangeTimes->{{3.54625235696383*^9, 3.5462523619061127`*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"l_", ",", "\[Rho]_"}], "]"}], ":=", " ", 
   RowBox[{"\[Rho]", 
    SqrtBox[
     FractionBox[
      RowBox[{"\[Pi]", " "}], 
      RowBox[{"2", " ", "\[Rho]"}]]], "  ", 
    RowBox[{"BesselJ", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"l", " ", "+", " ", 
        FractionBox["1", "2"]}], ")"}], ",", "\[Rho]"}], " ", "]"}]}]}], 
  "                                  ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Ricatti", "-", 
     RowBox[{"Bessel", " ", "function", " ", "of", " ", "1", "st", " ", 
      RowBox[{"kind", "."}]}]}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]Prime", "[", 
     RowBox[{"l_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", "\[Rho]"}], "]"}], ",", "\[Rho]"}], "]"}], "]"}]}], 
   " ", ";"}], "                                ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Partial", " ", "derivative", " ", "of", " ", "Ricatti"}], "-", 
     RowBox[{"Bessel", " ", "function", " ", 
      RowBox[{
       RowBox[{"w", "/", "r"}], "/", "t"}], " ", 
      RowBox[{"\[Rho]", "."}]}]}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Zeta]", "[", 
     RowBox[{"l_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"l", ",", " ", "\[Rho]"}], "]"}], " ", "+", " ", 
     RowBox[{"I", " ", "\[Rho]", 
      SqrtBox[
       FractionBox[
        RowBox[{"\[Pi]", " "}], 
        RowBox[{"2", " ", "\[Rho]"}]]], " ", 
      RowBox[{"BesselY", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"l", " ", "+", " ", 
          FractionBox["1", "2"]}], ")"}], ",", "\[Rho]"}], " ", "]"}]}]}]}], 
   " ", ";"}], "      ", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Ricatti", "-", 
     RowBox[{"Hankel", " ", "function"}]}], " ", "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Zeta]Prime", "[", 
     RowBox[{"l_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"D", "[", " ", 
      RowBox[{
       RowBox[{"\[Zeta]", "[", 
        RowBox[{"l", ",", "\[Rho]"}], "]"}], ",", "\[Rho]"}], "]"}], "]"}]}], 
   ";"}], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Partial", " ", "derivative", " ", "of", " ", "Ricatti"}], "-", 
     RowBox[{"Hankel", " ", "function", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{"w", "/", "r"}], "/", "t"}], "/", " ", "\[Rho]"}]}]}], " ", 
    "*)"}],
   FontFamily->"Times New Roman",
   FontWeight->"Plain"]}]}], "Input",
 CellChangeTimes->{{3.5462523758219085`*^9, 3.5462524832620535`*^9}}],

Cell[TextData[{
 "The associated Legendre functions are used for the azimuthal components of \
the field.  These are built into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".  Note that the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " version has a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "m"], TraditionalForm]]],
 "in front of the function definition, which Born and Wolf do not have (but \
make mention of).  Here, m is the separation constant that arises from the \
separation of variables technique used to solve the wave equation and must \
equal one for this problem.  Since m = 1, we get a negative sign out front so \
another one is multiplied out to conform to the actual field.  Then, these \
are used to construct the \"angle function\" coefficients ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Pi]", "n"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "n"], TraditionalForm]]],
 ". They are derived from the Legendre functions as shown below.  Note the \
final argument to the Legendre polynomial is actually cos(\[Theta]). "
}], "Text",
 CellChangeTimes->{{3.5462524910625*^9, 3.5462524965628147`*^9}, {
  3.5462525297127104`*^9, 3.546252608941242*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pi", "[", 
     RowBox[{"i_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", "  ", 
    FractionBox[
     RowBox[{"LegendreP", "[", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]", "[", 
    RowBox[{"i_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
   RowBox[{"D", "[", " ", 
    RowBox[{
     RowBox[{"LegendreP", "[", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "]"}], ",", "\[Theta]"}], 
    "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"pi", "[", 
        RowBox[{"l", ",", " ", "\[Theta]"}], "]"}], "]"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<pi[l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5462485631758375`*^9, 3.546248654811079*^9}, {
   3.5462494634693317`*^9, 3.5462494669145284`*^9}, {3.546684036279503*^9, 
   3.5466840436429243`*^9}, {3.5466844046265717`*^9, 3.546684412389015*^9}, {
   3.5466844811979513`*^9, 3.5466844915715446`*^9}, 3.5467071153995533`*^9}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"pi[l, q]\"\>",
       HoldForm]},
     {"1", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}]}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"2", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"3", 
      RowBox[{
       FractionBox["3", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "5"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"Csc", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"4", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["5", "2"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"7", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"5", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["15", "8"]}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"14", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "+", 
         RowBox[{"21", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "4"]}]}], ")"}], " ", 
       RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"pi[l, q]"}}]]]], "Output",
 CellChangeTimes->{{3.546248592185497*^9, 3.54624865500809*^9}, 
   3.546249467313551*^9, 3.546254659687564*^9, 3.5462686543879094`*^9, 
   3.5463511450272245`*^9, 3.5463534404767733`*^9, 3.546364756519611*^9, 
   3.5463810367993107`*^9, 3.546684044968*^9, 3.5466844129220457`*^9, {
   3.546684487487311*^9, 3.546684492820616*^9}, {3.546707116499616*^9, 
   3.5467071235380187`*^9}, 3.546768690341762*^9, 3.546770528921213*^9, 
   3.5472933270962*^9, 3.54780879444544*^9, 3.5478088328523936`*^9, 
   3.5478088642393923`*^9, 3.547811859703227*^9, 3.5478156976802444`*^9, 
   3.547815867901989*^9, 3.54785384652989*^9, 3.55221363314987*^9, 
   3.5522142807128696`*^9, 3.5522162255781007`*^9, 3.5522170888198595`*^9, 
   3.5522172014088593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"pi", "[", 
          RowBox[{"l", ",", " ", "\[Theta]"}], "]"}], ",", "\[Theta]"}], 
        "]"}], "]"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<pi'[l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.546684500904078*^9, 3.546684541776416*^9}, {
  3.5466850884936867`*^9, 3.5466850921148934`*^9}, {3.5467072028225536`*^9, 
  3.5467072030195646`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"pi'[l, q]\"\>",
       HoldForm]},
     {"1", "0"},
     {"2", 
      RowBox[{"3", " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"3", 
      RowBox[{"15", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"4", 
      RowBox[{
       FractionBox["15", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"7", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"5", 
      RowBox[{
       FractionBox["105", "8"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"5", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"pi'[l, q]"}}]]]], "Output",
 CellChangeTimes->{{3.5466845020801454`*^9, 3.546684542427453*^9}, 
   3.546707203556596*^9, 3.5467686905627747`*^9, 3.5467705313623524`*^9, 
   3.5472933272678013`*^9, 3.5478087946638384`*^9, 3.5478088330395927`*^9, 
   3.5478088642549925`*^9, 3.5478118598748274`*^9, 3.547815697851839*^9, 
   3.547815868073583*^9, 3.5478538467950907`*^9, 3.5522136333048697`*^9, 
   3.5522142808898697`*^9, 3.5522162257351637`*^9, 3.5522170889758596`*^9, 
   3.5522172015698595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"\[Tau]", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}], "]"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<\[Tau][l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5466840669722586`*^9, 3.5466840738506517`*^9}, {
  3.5466843953200393`*^9, 3.5466844003213253`*^9}, {3.546684447379017*^9, 
  3.546684471289384*^9}, {3.5467705322224016`*^9, 3.5467705336674843`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Tau][l, q]\"\>",
       HoldForm]},
     {"1", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cot", "[", "\[Theta]", "]"}]}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"2", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
       RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"3", 
      RowBox[{
       FractionBox["3", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"11", "-", 
         RowBox[{"15", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
       RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"4", 
      FractionBox[
       RowBox[{"5", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "+", 
          RowBox[{"6", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "-", 
          RowBox[{"7", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"5", " ", "\[Theta]"}], "]"}]}]}], ")"}]}], 
       RowBox[{"8", " ", 
        SqrtBox[
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"\[Tau][l, q]"}}]]]], "Output",
 CellChangeTimes->{3.546684077558864*^9, 3.546684400997364*^9, 
  3.5466844721094313`*^9, 3.546768690878793*^9, 3.5467705346335397`*^9, 
  3.547293327626603*^9, 3.5478087949914365`*^9, 3.5478088333671904`*^9, 
  3.547808864270592*^9, 3.547811860186827*^9, 3.547815698179429*^9, 
  3.5478158684011726`*^9, 3.547853847107092*^9, 3.5522136336178694`*^9, 
  3.5522142811908693`*^9, 3.552216226016276*^9, 3.5522170892568593`*^9, 
  3.552217201858859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Tau]", "[", 
          RowBox[{"l", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], "]"}], 
       "]"}], " ", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<\[Tau]'[l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.546684554927168*^9, 3.546684564819734*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Tau]'[l, q]\"\>",
       HoldForm]},
     {"1", 
      SqrtBox[
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]},
     {"2", 
      RowBox[{"12", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"3", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"23", "+", 
         RowBox[{"45", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]},
     {"4", 
      RowBox[{"5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"15", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{"14", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"3", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
       SqrtBox[
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"\[Tau]'[l, q]"}}]]]], "Output",
 CellChangeTimes->{3.5467686910368013`*^9, 3.5467705367216587`*^9, 
  3.547293327767004*^9, 3.547808795147435*^9, 3.5478088335231895`*^9, 
  3.547808864286192*^9, 3.547811860342827*^9, 3.547815698382222*^9, 
  3.5478158685571675`*^9, 3.547853847263092*^9, 3.5522136337528696`*^9, 
  3.55221428139287*^9, 3.5522162262173567`*^9, 3.5522170894658594`*^9, 
  3.5522172061098595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"\[Zeta]", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}], " ", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Zeta][l, q]\>\"", ",", "\"\<\[Zeta]'[l, q]\>\""}], 
       "}"}]}], " ", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.546684362139141*^9, 3.5466843880016203`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Zeta][l, q]\"\>",
       HoldForm]},
     {"1", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
         SqrtBox[
          FractionBox["1", "\[Theta]"]], " ", 
         RowBox[{"(", 
          RowBox[{"\[ImaginaryI]", "+", "\[Theta]"}], ")"}]}], 
        SqrtBox["\[Theta]"]]}]},
     {"2", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "+", 
          RowBox[{"\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "\[ImaginaryI]"}], "+", "\[Theta]"}], 
            ")"}]}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"3", "/", "2"}]]]},
     {"3", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "15"}], " ", "\[ImaginaryI]"}], "+", 
          RowBox[{"\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "15"}], "+", 
             RowBox[{"\[Theta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"6", " ", "\[ImaginaryI]"}], "+", "\[Theta]"}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"5", "/", "2"}]]]},
     {"4", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{"105", "+", 
          RowBox[{"\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "105"}], " ", "\[ImaginaryI]"}], "+", 
             RowBox[{"\[Theta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "45"}], "+", 
                RowBox[{"\[Theta]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"10", " ", "\[ImaginaryI]"}], "+", "\[Theta]"}], 
                  ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"7", "/", "2"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     Automatic, {"\[Zeta][l, q]", "\[Zeta]'[l, q]"}}]]]], "Output",
 CellChangeTimes->{{3.546684372046708*^9, 3.5466843893436975`*^9}, 
   3.546768691544831*^9, 3.5467705473302655`*^9, 3.5472933282662077`*^9, 
   3.547808795646632*^9, 3.547808834037986*^9, 3.547808864301792*^9, 
   3.547811860873227*^9, 3.5478156988658066`*^9, 3.5478158690251527`*^9, 
   3.5478538477310925`*^9, 3.55221363423687*^9, 3.5522142818348694`*^9, 
   3.5522162266475286`*^9, 3.552217089889859*^9, 3.5522172065578594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"\[Zeta]Prime", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}], " ", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<\[Zeta]Prime[l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.546684594789448*^9, 3.5466846042469893`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Zeta]Prime[l, q]\"\>",
       HoldForm]},
     {"1", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{"\[ImaginaryI]", "+", "\[Theta]", "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[Theta]", "2"]}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"3", "/", "2"}]]]},
     {"2", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "\[ImaginaryI]"}], "-", 
          RowBox[{"\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"\[Theta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", "\[ImaginaryI]"}], "+", "\[Theta]"}], 
               ")"}]}]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"5", "/", "2"}]]]},
     {"3", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"45", " ", "\[ImaginaryI]"}], "+", 
          RowBox[{"\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{"45", "+", 
             RowBox[{"\[ImaginaryI]", " ", "\[Theta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "21"}], "+", 
                RowBox[{"\[Theta]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"6", " ", "\[ImaginaryI]"}], "+", "\[Theta]"}], 
                  ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"7", "/", "2"}]]]},
     {"4", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]], " ", 
        SqrtBox[
         FractionBox["1", "\[Theta]"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"420", " ", "\[ImaginaryI]"}], "+", 
          RowBox[{"\[Theta]", " ", 
           RowBox[{"(", 
            RowBox[{"420", "+", 
             RowBox[{"\[Theta]", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "195"}], " ", "\[ImaginaryI]"}], "+", 
                RowBox[{"\[Theta]", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "55"}], "+", 
                   RowBox[{"\[Theta]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10", " ", "\[ImaginaryI]"}], "+", "\[Theta]"}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox["\[Theta]", 
        RowBox[{"9", "/", "2"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {Automatic, {"\[Zeta]Prime[l, q]"}}]]]], "Output",
 CellChangeTimes->{
  3.5466846072881627`*^9, 3.546768692153866*^9, 3.547293328890211*^9, 
   3.547808796286228*^9, {3.547808834693182*^9, 3.5478088643329916`*^9}, 
   3.547811861512827*^9, 3.5478156995053864`*^9, 3.5478158696179333`*^9, 
   3.547853848417494*^9, 3.5522136349708695`*^9, 3.5522142823898697`*^9, 
   3.55221622722676*^9, 3.552217090424859*^9, 3.5522172071198597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", "q"}], "]"}], " ", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<\[Psi][l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5466846452683353`*^9, 3.5466846741019845`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Psi][l, q]\"\>",
       HoldForm]},
     {"1", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "q"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q"}], " ", 
           RowBox[{"Cos", "[", "q", "]"}]}], "+", 
          RowBox[{"Sin", "[", "q", "]"}]}], ")"}]}], 
       SqrtBox["q"]]},
     {"2", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox[
          FractionBox["1", "q"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "q", " ", 
            RowBox[{"Cos", "[", "q", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              SuperscriptBox["q", "2"]}], ")"}], " ", 
            RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
        SuperscriptBox["q", 
         RowBox[{"3", "/", "2"}]]]}]},
     {"3", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "q"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "15"}], "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"Cos", "[", "q", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
       SuperscriptBox["q", 
        RowBox[{"5", "/", "2"}]]]},
     {"4", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "q"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"5", " ", "q", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "21"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "2"]}]}], ")"}], " ", 
           RowBox[{"Cos", "[", "q", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"105", "-", 
             RowBox[{"45", " ", 
              SuperscriptBox["q", "2"]}], "+", 
             SuperscriptBox["q", "4"]}], ")"}], " ", 
           RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
       SuperscriptBox["q", 
        RowBox[{"7", "/", "2"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"\[Psi][l, q]"}}]]]], "Output",
 CellChangeTimes->{
  3.5466846753260546`*^9, 3.5467686928238993`*^9, 3.547293329592216*^9, 
   3.5478087971754227`*^9, {3.5478088354263773`*^9, 3.5478088650193872`*^9}, 
   3.5478118621992273`*^9, 3.547815700191764*^9, 3.547815870319911*^9, 
   3.5478538491974955`*^9, 3.5522136362868695`*^9, 3.55221428303187*^9, 
   3.5522162278610134`*^9, 3.5522170910128593`*^9, 3.5522172078458595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{"\[Psi]Prime", "[", 
        RowBox[{"l", ",", "q"}], "]"}], " ", "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", "\"\<\[Psi][l, q]\>\"", "}"}]}], " ", "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.546685036869734*^9, 3.5466850374367657`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Psi][l, q]\"\>",
       HoldForm]},
     {"1", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "q"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q", " ", 
           RowBox[{"Cos", "[", "q", "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
       SuperscriptBox["q", 
        RowBox[{"3", "/", "2"}]]]},
     {"2", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "q"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "q"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"Cos", "[", "q", "]"}]}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             SuperscriptBox["q", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
       SuperscriptBox["q", 
        RowBox[{"5", "/", "2"}]]]},
     {"3", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SqrtBox[
          FractionBox["1", "q"]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "q", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "15"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["q", "2"]}]}], ")"}], " ", 
            RowBox[{"Cos", "[", "q", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"45", "-", 
              RowBox[{"21", " ", 
               SuperscriptBox["q", "2"]}], "+", 
              SuperscriptBox["q", "4"]}], ")"}], " ", 
            RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
        SuperscriptBox["q", 
         RowBox[{"7", "/", "2"}]]]}]},
     {"4", 
      FractionBox[
       RowBox[{
        SqrtBox[
         FractionBox["1", "q"]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"q", " ", 
           RowBox[{"(", 
            RowBox[{"420", "-", 
             RowBox[{"55", " ", 
              SuperscriptBox["q", "2"]}], "+", 
             SuperscriptBox["q", "4"]}], ")"}], " ", 
           RowBox[{"Cos", "[", "q", "]"}]}], "-", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{"84", "-", 
             RowBox[{"39", " ", 
              SuperscriptBox["q", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["q", "4"]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "q", "]"}]}]}], ")"}]}], 
       SuperscriptBox["q", 
        RowBox[{"9", "/", "2"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"\[Psi][l, q]"}}]]]], "Output",
 CellChangeTimes->{
  3.54668503907286*^9, 3.546768693751931*^9, 3.547293330575022*^9, 
   3.5478087982206154`*^9, {3.5478088364403706`*^9, 3.5478088660177813`*^9}, 
   3.547811863182027*^9, 3.547815701158933*^9, 3.5478158713182793`*^9, 
   3.5478538501646967`*^9, 3.5522136376148696`*^9, 3.5522142839028697`*^9, 
   3.5522162287513695`*^9, 3.5522170918388596`*^9, 3.5522172088648596`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"pi", "[", 
       RowBox[{"l", ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5466850447801857`*^9, 3.5466851439938607`*^9}, {
  3.5466852413474293`*^9, 3.546685247416776*^9}, {3.5478088053965693`*^9, 
  3.5478088055837684`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"pi", "[", 
         RowBox[{"l", ",", "\[Theta]"}], "]"}], ",", "\[Theta]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", ".1", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "2", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546685169050294*^9, 3.5466851843671703`*^9}, {
  3.546685225504523*^9, 3.546685253275111*^9}, {3.5478088076117554`*^9, 
  3.5478088077833543`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Psi]Prime", "[", 
       RowBox[{"l", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", ".1", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "2", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5478088104509373`*^9, 3.5478088116209297`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{"q", "[", "r", "]"}]}], "]"}], ",", 
         RowBox[{"\[Psi]Prime", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{"q", "[", "r", "]"}]}], "]"}], " ", ",", " ", 
         RowBox[{"\[Zeta]", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{"q", "[", "r", "]"}]}], "]"}], ",", 
         RowBox[{"\[Zeta]Prime", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{"q", "[", "r", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "6"}], "]"}], 
   ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Psi][l, q]\>\"", ",", "\"\<\[Psi]'[l, q]\>\"", ",", 
        "\"\<\[Zeta][l, q]\>\"", ",", "\"\<\[Zeta]'[l, q]\>\""}], "}"}]}], 
     " ", "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Psi][l, q]\"\>",
       HoldForm], 
      TagBox["\<\"\[Psi]'[l, q]\"\>",
       HoldForm], 
      TagBox["\<\"\[Zeta][l, q]\"\>",
       HoldForm], 
      TagBox["\<\"\[Zeta]'[l, q]\"\>",
       HoldForm]},
     {"1", "0.3874437191831212`", "0.578543330936516`", 
      RowBox[{"0.3874437191831212`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.2653059826540727`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.578543330936516`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6916247415402292`", " ", "\[ImaginaryI]"}]}]},
     {"2", "0.09302611946328304`", "0.22619836449650765`", 
      RowBox[{"0.09302611946328304`", "\[VeryThinSpace]", "-", 
       RowBox[{"2.884822879195294`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.22619836449650765`", "\[VeryThinSpace]", "+", 
       RowBox[{"3.735056184957365`", " ", "\[ImaginaryI]"}]}]},
     {"3", "0.015669667533412607`", "0.05228496342306435`", 
      RowBox[{"0.015669667533412607`", "\[VeryThinSpace]", "-", 
       RowBox[{"11.235599436374526`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05228496342306435`", "\[VeryThinSpace]", "+", 
       RowBox[{"26.32775032101203`", " ", "\[ImaginaryI]"}]}]},
     {"4", "0.0020365779638939125`", "0.008609527047500398`", 
      RowBox[{"0.0020365779638939125`", "\[VeryThinSpace]", "-", 
       RowBox[{"65.27784792128847`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.008609527047500398`", "\[VeryThinSpace]", "+", 
       RowBox[{"215.0610536321528`", " ", "\[ImaginaryI]"}]}]},
     {"5", "0.00021564855988985923`", "0.0011021004019006319`", 
      RowBox[{"0.00021564855988985923`", "\[VeryThinSpace]", "-", 
       RowBox[{"497.9318699678121`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0011021004019006319`", "\[VeryThinSpace]", "+", 
       RowBox[{"2092.4280051756555`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     Automatic, {
      "\[Psi][l, q]", "\[Psi]'[l, q]", "\[Zeta][l, q]", 
       "\[Zeta]'[l, q]"}}]]]], "Output",
 CellChangeTimes->{
  3.544268807125*^9, 3.544282331208446*^9, 3.544283148161173*^9, 
   3.544349976797552*^9, 3.545564592489431*^9, 3.545572202452696*^9, 
   3.545577707889589*^9, 3.545578378461943*^9, 3.5455807692496886`*^9, 
   3.546254661106645*^9, 3.5462686544109106`*^9, 3.546351145047224*^9, 
   3.5463534405079737`*^9, 3.5463647565352106`*^9, 3.5463810368253126`*^9, 
   3.546768695842408*^9, 3.547293330996225*^9, 3.5472933629296293`*^9, 
   3.5478087990474105`*^9, {3.54780883661197*^9, 3.547808866064581*^9}, 
   3.5478118632288275`*^9, 3.547815701221331*^9, 3.5478158713494782`*^9, 
   3.547853850804298*^9, 3.5522136377428694`*^9, 3.5522142839808693`*^9, 
   3.552216228831402*^9, 3.5522170918868594`*^9, 3.5522172089198594`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", ".1", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "2", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5466852781505337`*^9, 3.546685292961381*^9}, {
  3.5478088158953023`*^9, 3.547808816051301*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Psi]Prime", "[", 
       RowBox[{"l", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", ".1", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "2", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546685302957953*^9, 3.5466853035649877`*^9}, {
  3.547808818640885*^9, 3.5478088188436832`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"These", " ", "are", " ", "complex", " ", "functions", " ", "so", 
  " ", "they", " ", "are", " ", "not", " ", "represented", " ", "well", " ", 
  "in", " ", "the", " ", "real", " ", "plane", " ", 
  RowBox[{"here", ".", "  ", "I"}], " ", "will", " ", "need", " ", "to", " ", 
  "plot", " ", "them", " ", "in", " ", "the", " ", "complex", " ", 
  RowBox[{"plane", "."}]}]], "Input",
 CellChangeTimes->{{3.5466853940951653`*^9, 3.5466854117271743`*^9}, {
  3.546685697887542*^9, 3.5466857006837015`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Through", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Re", ",", "Im"}], "}"}], 
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"l", ",", "q"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", ".1", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546685359867208*^9, 3.546685385291662*^9}, {
  3.5466857651973915`*^9, 3.546685795920149*^9}, {3.5466859565583367`*^9, 
  3.5466860700618286`*^9}, {3.547808822104062*^9, 3.5478088222600613`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"\[Zeta]Prime", "[", 
       RowBox[{"l", ",", "q"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"q", ",", ".1", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "2", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.546685379146311*^9, 3.546685390424956*^9}, {
  3.547808827626427*^9, 3.5478088278292255`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "1"], "[", "r", "]"}]}], "]"}], ",", 
         RowBox[{"\[Psi]Prime", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "1"], "[", "r", "]"}]}], "]"}], " ", ",", " ", 
         RowBox[{"\[Zeta]", "[", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["q", "1"], "[", "r", "]"}]}], "]"}], ",", 
         RowBox[{"\[Zeta]Prime", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "1"], "[", "r", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "6"}], "]"}], 
   ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Psi][l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]\>\"", ",", 
        "\"\<\[Psi]'[l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]\>\"", ",", 
        "\"\<\[Zeta][l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]\>\"", ",", 
        "\"\<\[Zeta]'[l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]\>\""}], "}"}]}], 
     " ", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.546685343838291*^9, 3.5466853455363884`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Psi][l, \\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)]\"\>",
       HoldForm], 
      TagBox["\<\"\[Psi]'[l, \\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)]\"\>",
       HoldForm], 
      TagBox["\<\"\[Zeta][l, \\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)]\"\>",
       HoldForm], 
      TagBox["\<\"\[Zeta]'[l, \\!\\(\\*SubscriptBox[\\(q\\), \\(1\\)]\\)]\"\>",
       HoldForm]},
     {"1", "0.6630053902116272`", "0.5885740288127221`", 
      RowBox[{"0.6630053902116272`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.9714135020557226`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5885740288127221`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6459242229015552`", " ", "\[ImaginaryI]"}]}]},
     {"2", "0.2322901997395141`", "0.37540785567490564`", 
      RowBox[{"0.2322901997395141`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.8486272578130396`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.37540785567490564`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.3173642518943152`", " ", "\[ImaginaryI]"}]}]},
     {"3", "0.05598844613017677`", "0.12831160472579287`", 
      RowBox[{"0.05598844613017677`", "\[VeryThinSpace]", "-", 
       RowBox[{"4.750530882819372`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12831160472579287`", "\[VeryThinSpace]", "+", 
       RowBox[{"6.9737916679842025`", " ", "\[ImaginaryI]"}]}]},
     {"4", "0.010326521959168762`", "0.03041799796553939`", 
      RowBox[{"0.010326521959168762`", "\[VeryThinSpace]", "-", 
       RowBox[{"18.737016902380528`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03041799796553939`", "\[VeryThinSpace]", "+", 
       RowBox[{"41.64591521555527`", " ", "\[ImaginaryI]"}]}]},
     {"5", "0.0015450622402573156`", "0.005544184052725867`", 
      RowBox[{"0.0015450622402573156`", "\[VeryThinSpace]", "-", 
       RowBox[{"99.64147283852355`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.005544184052725867`", "\[VeryThinSpace]", "+", 
       RowBox[{"289.67722052672883`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     Automatic, {
      "\[Psi][l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]", 
       "\[Psi]'[l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]", 
       "\[Zeta][l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]", 
       "\[Zeta]'[l, \!\(\*SubscriptBox[\(q\), \(1\)]\)]"}}]]]], "Output",
 CellChangeTimes->{
  3.54426880909375*^9, 3.5442823312394476`*^9, 3.544283148215176*^9, 
   3.5443499794457035`*^9, 3.5455645948425655`*^9, 3.545572203788772*^9, 
   3.5455777101307173`*^9, 3.5455783809160833`*^9, 3.5455807706367683`*^9, 
   3.546254662721738*^9, 3.546268654430912*^9, 3.5463511450672245`*^9, 
   3.546353440523574*^9, 3.546364756550811*^9, 3.5463810368393135`*^9, 
   3.546768696379431*^9, 3.5472933315422287`*^9, 3.5472933764393163`*^9, 
   3.5478087997338057`*^9, {3.5478088368147683`*^9, 3.5478088660957804`*^9}, 
   3.547811863260027*^9, 3.5478157012681293`*^9, 3.5478158713962765`*^9, 
   3.547853850851098*^9, 3.5522136377828693`*^9, 3.5522142840238695`*^9, 
   3.552216228887424*^9, 3.5522170919208593`*^9, 3.5522172089778595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "2"], "[", "r", "]"}]}], "]"}], ",", 
         RowBox[{"\[Psi]Prime", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "2"], "[", "r", "]"}]}], "]"}], " ", ",", " ", 
         RowBox[{"\[Zeta]", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "2"], "[", "r", "]"}]}], "]"}], ",", 
         RowBox[{"\[Zeta]Prime", "[", 
          RowBox[{"l", ",", " ", 
           RowBox[{
            SubscriptBox["q", "2"], "[", "r", "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "6"}], "]"}], 
   ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Psi][l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]\>\"", ",", 
        "\"\<\[Psi]'[l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]\>\"", ",", 
        "\"\<\[Zeta][l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]\>\"", ",", 
        "\"\<\[Zeta]'[l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]\>\""}], "}"}]}], 
     " ", "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\[Psi][l, \\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)]\"\>",
       HoldForm], 
      TagBox["\<\"\[Psi]'[l, \\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)]\"\>",
       HoldForm], 
      TagBox["\<\"\[Zeta][l, \\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)]\"\>",
       HoldForm], 
      TagBox["\<\"\[Zeta]'[l, \\!\\(\\*SubscriptBox[\\(q\\), \\(2\\)]\\)]\"\>",
       HoldForm]},
     {"1", 
      RowBox[{
       RowBox[{"-", "23.468646569156853`"}], "+", 
       RowBox[{"5.945603168831395`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"6.170219073279774`", "\[VeryThinSpace]", "+", 
       RowBox[{"25.275728877080972`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.01890877603010921`"}], "-", 
       RowBox[{"0.004657795171699952`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.004961891377894823`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.019763638631268066`", " ", "\[ImaginaryI]"}]}]},
     {"2", 
      RowBox[{
       RowBox[{"-", "3.9421590088617635`"}], "-", 
       RowBox[{"13.85222337108994`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "16.714451719978417`"}], "+", 
       RowBox[{"4.422758703290842`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.0077018684633367585`"}], "+", 
       RowBox[{"0.0287156477486743`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.03248691060709774`"}], "-", 
       RowBox[{"0.00912044488111885`", " ", "\[ImaginaryI]"}]}]},
     {"3", 
      RowBox[{"6.583159446210764`", "\[VeryThinSpace]", "-", 
       RowBox[{"2.1384920049800127`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "2.665770502337275`"}], "-", 
       RowBox[{"9.026806467107434`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.052854112472576986`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.01581441944525075`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.02120242174052267`"}], "+", 
       RowBox[{"0.06613805073834733`", " ", "\[ImaginaryI]"}]}]},
     {"4", 
      RowBox[{"0.9639191603046261`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.592917261797429`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"4.042548577535493`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.3514181365808522`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03920315944343655`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.11603458805791211`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.16215653671112218`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05963798587484881`", " ", "\[ImaginaryI]"}]}]},
     {"5", 
      RowBox[{
       RowBox[{"-", "0.8667849916914047`"}], "+", 
       RowBox[{"0.36757580108190147`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5806136726876551`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.5282696838756038`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.2987845670093032`"}], "-", 
       RowBox[{"0.11441744391184694`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.1964231422009996`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.46694841504476714`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     Automatic, {
      "\[Psi][l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]", 
       "\[Psi]'[l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]", 
       "\[Zeta][l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]", 
       "\[Zeta]'[l, \!\(\*SubscriptBox[\(q\), \(2\)]\)]"}}]]]], "Output",
 CellChangeTimes->{
  3.54426881090625*^9, 3.5442823313964567`*^9, 3.544283148388186*^9, 
   3.544349980921788*^9, 3.5455645968046775`*^9, 3.54557220532386*^9, 
   3.545577711841815*^9, 3.5455783828551946`*^9, 3.54558077224386*^9, 
   3.546254663785798*^9, 3.5462686544489126`*^9, 3.5463511450872245`*^9, 
   3.5463534405391736`*^9, 3.546364756566411*^9, 3.546381036854314*^9, 
   3.5467686963994308`*^9, 3.5472933315578284`*^9, 3.5472933773285217`*^9, 
   3.547808799827405*^9, {3.547808836892768*^9, 3.5478088661269803`*^9}, 
   3.5478118632912273`*^9, 3.5478157012837296`*^9, 3.547815871411876*^9, 
   3.5478538508822985`*^9, 3.55221363780287*^9, 3.5522142840478697`*^9, 
   3.5522162289164357`*^9, 3.5522170919378595`*^9, 3.552217209007859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We now have enough information to construct the Mie coefficients. \
\>", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"an", "[", 
    RowBox[{"l_", ",", " ", "a_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "2"], " ", 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], "  ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        SubscriptBox["m", "1"], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], "  ", 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "2"], " ", 
        RowBox[{"\[Zeta]Prime", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], "  ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        SubscriptBox["m", "1"], " ", 
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], "  ", 
        RowBox[{"\[Psi]Prime", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}]}], " ", ")"}]}],
     "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bn", "[", 
    RowBox[{"l_", ",", " ", "a_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "2"], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        SubscriptBox["m", "1"], " ", 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}]}], " ", ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "2"], " ", 
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]Prime", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        SubscriptBox["m", "1"], "  ", 
        RowBox[{"\[Zeta]Prime", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}]}], ")"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cn", "[", 
    RowBox[{"l_", ",", " ", "a_"}], "]"}], ":=", 
   RowBox[{"Evaluate", "[", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "2"], "  ", 
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}]}], "  ", "-", " ", 
       RowBox[{
        SubscriptBox["m", "2"], "  ", 
        RowBox[{"\[Zeta]Prime", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}]}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SubscriptBox["m", "2"], " ", 
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]Prime", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
       RowBox[{
        SubscriptBox["m", "1"], "  ", 
        RowBox[{"\[Zeta]Prime", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}]}], ")"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"dn", "[", 
   RowBox[{"l_", ",", " ", "a_"}], "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["m", "2"], " ", 
       RowBox[{"\[Zeta]Prime", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["m", "2"], " ", 
       RowBox[{"\[Zeta]", " ", "[", " ", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
       RowBox[{"\[Psi]Prime", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}]}]}], " ", ")"}], 
    "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["m", "2"], " ", 
       RowBox[{"\[Zeta]Prime", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["m", "1"], " ", 
       RowBox[{"\[Zeta]", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
       RowBox[{"\[Psi]Prime", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}]}]}], "  ", ")"}]}],
    "]"}]}]}], "Input"],

Cell["Again, display the first few coefficients.", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"an", "[", 
         RowBox[{"l", ",", "r"}], "]"}], ",", 
        RowBox[{"bn", "[", 
         RowBox[{"l", ",", "r"}], "]"}], ",", 
        RowBox[{"cn", "[", 
         RowBox[{"l", ",", "r"}], "]"}], ",", 
        RowBox[{"dn", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(a\), \(n\)]\)[l]\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(b\), \(n\)]\)[l]\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(c\), \(n\)]\)[l]\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(d\), \(n\)]\)[l]\>\""}], " ", "}"}]}], 
     "}"}]}]}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(a\\), \\(n\\)]\\)[l]\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(b\\), \\(n\\)]\\)[l]\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(c\\), \\(n\\)]\\)[l]\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(d\\), \\(n\\)]\\)[l]\"\>",
       HoldForm]},
     {"1", 
      RowBox[{"5.63772640107655`*^-15", "-", 
       RowBox[{"9.054878911314969`*^-14", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"2.5768639011853417`*^-24", "+", 
       RowBox[{"2.6627586143682496`*^-23", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.021538461576925596`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.3876923067541185`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.6370254816561997`"}], "-", 
       RowBox[{"0.10192407725770132`", " ", "\[ImaginaryI]"}]}]},
     {"2", 
      RowBox[{"3.651109438973897`*^-25", "-", 
       RowBox[{"7.791517214585957`*^-24", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.4005514978663252`*^-34", "+", 
       RowBox[{"1.4472418478623681`*^-33", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.14984141989960875`"}], "-", 
       RowBox[{"0.016700591712799383`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.03726449996143918`"}], "+", 
       RowBox[{"0.18497308883168326`", " ", "\[ImaginaryI]"}]}]},
     {"3", 
      RowBox[{"1.545601638868413`*^-35", "-", 
       RowBox[{"3.648010398164539`*^-34", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"4.229060400873149`*^-45", "+", 
       RowBox[{"4.369971784128922`*^-44", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.009702044602036356`"}], "+", 
       RowBox[{"0.05773266084070505`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0641999293218008`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.016380200939208337`", " ", "\[ImaginaryI]"}]}]},
     {"4", 
      RowBox[{"4.090850378881374`*^-46", "-", 
       RowBox[{"1.016961285708723`*^-44", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"8.125947160513612`*^-56", "+", 
       RowBox[{"8.397151323907695`*^-55", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02217354140123893`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.005004880756783155`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0072930635303488835`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.02331413781689982`", " ", "\[ImaginaryI]"}]}]},
     {"5", 
      RowBox[{"7.244783212621292`*^-57", "-", 
       RowBox[{"1.858956711554834`*^-55", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.0809757455069409`*^-66", "+", 
       RowBox[{"1.1170229457546243`*^-65", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0024179377391970475`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.00848871400514515`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.008609236114551213`"}], "-", 
       RowBox[{"0.0032152106200444143`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     Automatic, {
      "\!\(\*SubscriptBox[\(a\), \(n\)]\)[l]", 
       "\!\(\*SubscriptBox[\(b\), \(n\)]\)[l]", 
       "\!\(\*SubscriptBox[\(c\), \(n\)]\)[l]", 
       "\!\(\*SubscriptBox[\(d\), \(n\)]\)[l]"}}]]]], "Output",
 CellChangeTimes->{
  3.544268819109375*^9, 3.544282331596468*^9, 3.544283148617199*^9, 
   3.5443501176306076`*^9, 3.54556464527745*^9, 3.545572208482041*^9, 
   3.5455777150009956`*^9, 3.545578388225502*^9, 3.5455807752070293`*^9, 
   3.5462546666449623`*^9, 3.5462686544929156`*^9, 3.546351145127225*^9, 
   3.5463534405859737`*^9, 3.5463647565976114`*^9, 3.5463810368913164`*^9, 
   3.5467686964394307`*^9, 3.547293331620229*^9, 3.5472933808073444`*^9, 
   3.5478088001394033`*^9, {3.5478088372203655`*^9, 3.5478088661893797`*^9}, 
   3.547811863338027*^9, 3.5478157013461275`*^9, 3.547815871474274*^9, 
   3.547853850929098*^9, 3.5522136378468695`*^9, 3.5522142840938697`*^9, 
   3.552216228972458*^9, 3.552217091976859*^9, 3.5522172090678596`*^9}]
}, Open  ]],

Cell["\<\
Now we create a pair of intermediate functions to simplify the cross section \
and phase function equations below.  They also prove helpful when calculating \
the scattering matrix elements.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "[", 
    RowBox[{"l_", ",", " ", "a_"}], "]"}], " ", ":=", 
   RowBox[{
    FractionBox["1", 
     SubscriptBox["K", "2"]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Abs", "[", 
          RowBox[{"cn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], "  ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Psi]Prime", "[", 
         RowBox[{"l", ",", "  ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}], "*"]}], " ", "-",
       "  ", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Abs", "[", 
          RowBox[{"dn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], " ", 
       RowBox[{"\[Psi]Prime", "[", 
        RowBox[{"l", ",", "  ", 
         RowBox[{
          SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", "  ", 
          RowBox[{
           SubscriptBox["q", "2"], "[", "a", "]"}]}], "]"}], "*"]}]}], 
     ")"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B", "[", 
   RowBox[{"l_", ",", " ", "a_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SubscriptBox["K", "1"]], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Abs", "[", 
         RowBox[{"an", "[", 
          RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], "  ", 
      RowBox[{"\[Zeta]Prime", "[", 
       RowBox[{"l", ",", " ", 
        RowBox[{
         SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Zeta]", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], "*"]}], " ", "-", 
     "  ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Abs", "[", 
         RowBox[{"bn", "[", 
          RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], " ", 
      RowBox[{"\[Zeta]", "[", 
       RowBox[{"l", ",", " ", 
        RowBox[{
         SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"\[Zeta]Prime", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          SubscriptBox["q", "1"], "[", "a", "]"}]}], "]"}], "*"]}]}], 
    ")"}]}]}]}], "Input"],

Cell["Tabulate some of these coefficients.", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A", "[", 
         RowBox[{"l", ",", "r"}], "]"}], " ", ",", 
        RowBox[{"B", "[", 
         RowBox[{"l", ",", "r"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}], ",", " ", 
   RowBox[{"TableHeadings", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<A[l]\>\"", ",", "\"\<B[l]\>\""}], "}"}]}], " ", "}"}]}]}],
   "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"A[l]\"\>",
       HoldForm], 
      TagBox["\<\"B[l]\"\>",
       HoldForm]},
     {"1", 
      RowBox[{"8.568760289573264`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5110118917510948`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.208767279495157`*^-28"}], "+", 
       RowBox[{"5.095301281564106`*^-28", " ", "\[ImaginaryI]"}]}]},
     {"2", 
      RowBox[{"0.34848557235618255`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.020793853633632065`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "8.843816859117628`*^-48"}], "+", 
       RowBox[{"3.7663523888518364`*^-48", " ", "\[ImaginaryI]"}]}]},
     {"3", 
      RowBox[{"0.0122160498758763`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0007193355643253498`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "2.7335827999561202`*^-67"}], "+", 
       RowBox[{"8.253065725294912`*^-69", " ", "\[ImaginaryI]"}]}]},
     {"4", 
      RowBox[{"0.0003148778913161368`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.000018249503830897586`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "5.003892665779687`*^-87"}], "+", 
       RowBox[{"6.412616986032993`*^-90", " ", "\[ImaginaryI]"}]}]},
     {"5", 
      RowBox[{"5.992961842912102`*^-6", "+", 
       RowBox[{"3.4216756587749893`*^-7", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "6.184099032429923`*^-107"}], "+", 
       RowBox[{"2.1425055360620125`*^-111", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, "ColumnsIndexed" -> {}, 
      "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {Automatic, {"A[l]", "B[l]"}}]]]], "Output",
 CellChangeTimes->{
  3.544268826640625*^9, 3.5442823321765013`*^9, 3.5442831492402344`*^9, 
   3.544350124619007*^9, 3.5455646518868284`*^9, 3.545572211690224*^9, 
   3.545577718312185*^9, 3.545578392581751*^9, 3.545580777792177*^9, 
   3.5462546703471737`*^9, 3.5462686545319176`*^9, 3.546351145167225*^9, 
   3.546353440632774*^9, 3.546364756628811*^9, 3.5463810369193177`*^9, 
   3.5467686964994307`*^9, 3.547293331651429*^9, 3.54729338480097*^9, 
   3.547808800482601*^9, {3.547808837532364*^9, 3.5478088662205796`*^9}, 
   3.5478118633692274`*^9, 3.547815701377326*^9, 3.547815871505473*^9, 
   3.5478538509758987`*^9, 3.5522136378798695`*^9, 3.55221428414287*^9, 
   3.5522162290234785`*^9, 3.5522170920088596`*^9, 3.5522172091148596`*^9}]
}, Open  ]],

Cell[TextData[{
 "Finally, create an equation to determine the average intensity incident on \
the sphere. The function for the average intensity comes from the ",
 StyleBox["Fu and Sun paper and",
  FontColor->RGBColor[0, 0, 1]],
 " is set up as a conditional since the general form will crash when ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox[
     StyleBox["k",
      FontWeight->"Plain",
      FontSlant->"Plain",
      FontTracking->"Plain",
      FontVariations->{"CompatibilityType"->0,
      "Masked"->False,
      "Outline"->False,
      "RotationAngle"->0,
      "Shadow"->False,
      "StrikeThrough"->False,
      "Underline"->False}], "1"], "=", " ", "0"}], TraditionalForm]]],
 " (nonabsorbing external medium).  In that case, the limit of the function \
as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["k",
     FontSlant->"Plain"], "1"], TraditionalForm]]],
 "\[Rule] 0 is used."
}], "Text",
 CellChangeTimes->{{3.5462526471614285`*^9, 3.546252647810465*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ILimit", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         SubscriptBox["\[Lambda]", "0"], ")"}], "2"], " "}], 
      RowBox[{"8", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", "k", ")"}], "2"]}]], " ", 
     FractionBox[
      SubscriptBox["n", "1"], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"3", "*", 
         SuperscriptBox["10", "8"]}], ")"}]}]], 
     RowBox[{"(", 
      RowBox[{"1", " ", "+", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Pi]", " ", "a", " ", "k"}], 
           SubscriptBox["\[Lambda]", "0"]], " ", "-", " ", "1"}], ")"}], 
        RowBox[{"Exp", "[", 
         FractionBox[
          RowBox[{"4", " ", "\[Pi]", " ", "a", " ", "k"}], 
          SubscriptBox["\[Lambda]", "0"]], "]"}]}]}], ")"}]}], ",", " ", 
    RowBox[{"k", " ", "\[Rule]", " ", "0"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     SubscriptBox["k", "1"], " ", "\[NotEqual]", " ", "0"}], ",", " ", 
    RowBox[{"N", "[", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["\[Lambda]", "0"], ")"}], "2"], " "}], 
        RowBox[{"8", " ", "\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           SubscriptBox["k", "1"], ")"}], "2"], " "}]], 
       FractionBox[
        SubscriptBox["n", "1"], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"3", "*", 
           SuperscriptBox["10", "8"]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"4", " ", "\[Pi]", " ", "a", " ", 
              SubscriptBox["k", "1"]}], 
             SubscriptBox["\[Lambda]", "0"]], " ", "-", " ", "1"}], ")"}], 
          RowBox[{"Exp", "[", 
           FractionBox[
            RowBox[{"4", " ", "\[Pi]", " ", "a", " ", 
             SubscriptBox["k", "1"]}], 
            SubscriptBox["\[Lambda]", "0"]], "]"}]}]}], ")"}]}], ")"}], "]"}],
     ",", " ", 
    RowBox[{"ILimit", "[", "a", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5443501303413343`*^9, 3.5443501314813995`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate and plot the cross sections ", "Section",
 FontSize->15],

Cell["\<\
Here are the actual cross section equations.  Note that the Fu and Sun \
technique allows direct analytical determination of the absorption cross \
section.\
\>", "Text",
 CellChangeTimes->{{3.5462526738299537`*^9, 3.54625269160497*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CScat", "[", "a_", "]"}], ":=", "  ", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["a", "2"]}], 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], " "}]], " ", "*", " ", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SubscriptBox["\[Lambda]", "0"]}], 
    RowBox[{"2", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"3", "*", " ", 
       SuperscriptBox["10", "8"]}], ")"}]}]], "  ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], 
     RowBox[{
      RowBox[{"LastTerm", "[", "a", "]"}], "*", "2"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], "  ", 
     RowBox[{"Im", "[", 
      RowBox[{"B", "[", 
       RowBox[{"l", ",", "a"}], "]"}], "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"CAbs", "[", "a_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["a", "2"]}], 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], " "}]], " ", "*", " ", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SubscriptBox["\[Lambda]", "0"]}], 
    RowBox[{"2", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"3", "*", " ", 
       SuperscriptBox["10", "8"]}], ")"}]}]], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], 
     RowBox[{
      RowBox[{"LastTerm", "[", "a", "]"}], "*", "2"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"A", "[", 
       RowBox[{"l", ",", "a"}], "]"}], "]"}]}]}]}]}], "\n", 
 RowBox[{
  RowBox[{"CExt", "[", "a_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["a", "2"]}], 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], " "}]], " ", "*", " ", 
   FractionBox[
    RowBox[{"\[Pi]", " ", 
     SubscriptBox["\[Lambda]", "0"]}], 
    RowBox[{"2", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"3", "*", " ", 
       SuperscriptBox["10", "8"]}], ")"}]}]], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], 
     RowBox[{
      RowBox[{"LastTerm", "[", "a", "]"}], "*", "2"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{
       RowBox[{"A", "[", 
        RowBox[{"l", ",", "a"}], "]"}], " ", "+", " ", 
       RowBox[{"B", "[", 
        RowBox[{"l", ",", "a"}], "]"}]}], "]"}], " "}]}]}]}]}], "Input",
 CellChangeTimes->{{3.5462546767325387`*^9, 3.546254684772999*^9}, {
  3.5462550891246867`*^9, 3.5462551422459307`*^9}}],

Cell["Print out cross sections for the default parameters.", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(Scat\)]\) = \>\"", ",", " ", 
   RowBox[{
    RowBox[{"CScat", "[", "r", "]"}], "//", "N"}], ",", " ", 
   "\"\< \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)\>\"", ",", "  ", 
   "\[IndentingNewLine]", "\t  ", 
   "\"\<\\n\!\(\*SubscriptBox[\(C\), \(\(Abs\)\(\\\ \)\)]\) = \>\"", ",", " ", 
   RowBox[{
    RowBox[{"CAbs", "[", "r", "]"}], "//", "N"}], ",", 
   "\"\< \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)\>\"", ",", 
   "\[IndentingNewLine]", "           ", 
   "\"\<\\n\!\(\*SubscriptBox[\(C\), \(\(Ext\)\(\\\ \)\)]\) = \>\"", ",", " ", 
   RowBox[{
    RowBox[{"CExt", "[", "r", "]"}], "//", "N"}], ",", 
   "\"\< \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)\>\""}], " ", 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(Scat\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "5.94559424092878`*^-28", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Abs\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.6387521929524903`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Ext\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.6387521929524903`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(C\), \(Scat\)]\) = ", 5.94559424092878*^-28, 
   " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Abs\)\(\\ \)\)]\) = ", 0.6387521929524903,
    " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Ext\)\(\\ \)\)]\) = ", 0.6387521929524903,
    " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)"],
  Editable->False]], "Print",
 CellChangeTimes->{3.5478088664233785`*^9, 3.547811863603227*^9, 
  3.5478157016113186`*^9, 3.5478158717082667`*^9, 3.5478538533783026`*^9, 
  3.5522136381298695`*^9, 3.5522142843968697`*^9, 3.552216229286584*^9, 
  3.5522170922428594`*^9, 3.5522172093038597`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(Scat\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "1.625619594976126`*^-6", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Abs\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.000022188646973223454`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Ext\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.000023814266568199585`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(C\), \(Scat\)]\) = ", 1.625619594976126*^-6, 
   " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Abs\)\(\\ \)\)]\) = ", 
   0.000022188646973223454`, " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Ext\)\(\\ \)\)]\) = ", 
   0.000023814266568199585`, " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)"],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.54426884675*^9, 3.544282335765706*^9, 3.5442831523264112`*^9, 
   3.5443504161106796`*^9, 3.5455646592922516`*^9, 3.5455722179015794`*^9, {
   3.545577723772497*^9, 3.545577724605545*^9}, 3.545578400644212*^9, 
   3.5455807839855313`*^9, {3.5462546875551577`*^9, 3.5462546942055387`*^9}, 
   3.546255094287862*^9, 3.546255145257098*^9, 3.5462686547169285`*^9, 
   3.5463511454372253`*^9, 3.5463534408043737`*^9, 3.546364756722411*^9, 
   3.546381037047325*^9, 3.546768696709431*^9, {3.546770562043107*^9, 
   3.54677060020829*^9}, 3.5472933318386307`*^9, 3.5472933889973965`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(Scat\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "1.625619594976126`*^-6", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Abs\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.000022188646973223454`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Ext\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.000023814266568199585`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(C\), \(Scat\)]\) = ", 1.625619594976126*^-6, 
   " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Abs\)\(\\ \)\)]\) = ", 
   0.000022188646973223454`, " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Ext\)\(\\ \)\)]\) = ", 
   0.000023814266568199585`, " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)"],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.54426884675*^9, 3.544282335765706*^9, 3.5442831523264112`*^9, 
   3.5443504161106796`*^9, 3.5455646592922516`*^9, 3.5455722179015794`*^9, {
   3.545577723772497*^9, 3.545577724605545*^9}, 3.545578400644212*^9, 
   3.5455807839855313`*^9, {3.5462546875551577`*^9, 3.5462546942055387`*^9}, 
   3.546255094287862*^9, 3.546255145257098*^9, 3.5462686547169285`*^9, 
   3.5463511454372253`*^9, 3.5463534408043737`*^9, 3.546364756722411*^9, 
   3.546381037047325*^9, 3.546768696709431*^9, {3.546770562043107*^9, 
   3.54677060020829*^9}, 3.5472933318386307`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(C\\), \\(Scat\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "1.6256195949761261`*^-6", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Abs\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.000022188646973223474`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(C\\), \
\\(\\(Ext\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.000023814266568199605`", 
   "\[InvisibleSpace]", "\<\" \\!\\(\\*SuperscriptBox[\\(\[Mu]m\\), \
\\(2\\)]\\)\"\>"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(C\), \(Scat\)]\) = ", 1.6256195949761261`*^-6, 
   " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Abs\)\(\\ \)\)]\) = ", 
   0.000022188646973223474`, " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)", 
   "\n\!\(\*SubscriptBox[\(C\), \(\(Ext\)\(\\ \)\)]\) = ", 
   0.000023814266568199605`, " \!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\)"],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.54426884675*^9, 3.544282335765706*^9, 3.5442831523264112`*^9, 
   3.5443504161106796`*^9, 3.5455646592922516`*^9, 3.5455722179015794`*^9, {
   3.545577723772497*^9, 3.545577724605545*^9}, 3.545578400644212*^9, 
   3.5455807839855313`*^9, {3.5462546875551577`*^9, 3.5462546942055387`*^9}, 
   3.546255094287862*^9, 3.546255145257098*^9, 3.5462686547169285`*^9, 
   3.5463511454372253`*^9, 3.5463534408043737`*^9, 3.546364756722411*^9, 
   3.546381037047325*^9, 3.546768696709431*^9, {3.546770562043107*^9, 
   3.54677060020829*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linear plots of size parameter vs. cross section.", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
These plots take longer to generate as the size parameter increases.  Also, \
the multiplicative factor in the argument converts the range variable to q \
values rather than radius values.  This first cell sets up some default \
plotting parameters.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", " ", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", " ", "40"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"CScatPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"CScat", "[", 
      RowBox[{"i", " ", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".2", ",", "4"}], "}"}], ",", "  ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(C\), \(Scat\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], " ", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.546768671637886*^9, 3.5467686717478867`*^9}, {
  3.5522135286198697`*^9, 3.55221352878887*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "So", " ", "by", " ", "decreasing", " ", "the", " ", "wavelegnth", " ", 
   RowBox[{"(", "bluer", ")"}], "for", " ", "a", " ", "given", " ", 
   "particle", " ", "size"}], ",", " ", 
  RowBox[{
  "we", " ", "increase", " ", "the", " ", "size", " ", "paramater", " ", 
   "and", " ", "therefore", " ", "increase", " ", "the", " ", "scattering", 
   " ", 
   RowBox[{"crossection", "."}]}]}]], "Input",
 CellChangeTimes->{{3.546770053547023*^9, 3.5467700974375334`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", "*", "Pi", "*", 
    RowBox[{"size", "/", "565"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"size", ",", "50", ",", "600"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5467687734182787`*^9, 3.5467688089259734`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzn881HcAx3E/L4ddTvlxn9YPZU0oj2Ii2vfdj6kTknP9MC4zubr8tuhU
5HOMWMSk/MjlYVJ+LTJkMzKVlJhF5eFho0szeqzo8mPXbu2P1+P179MiKMLn
kJaGhsa29/3/QpZnrIYGH5G3ThzQuz/CWPey1los4UO8ic3dNzzCNOW3Pdvi
yEfAjbzOstcjzCNbhz2yUD74ZbUbt5mPMhzBElvWUz5WnnlhknBolKHy8RGD
Onf0ewv6ptWjzGGnrz3Ngj3g/If1rt8dFIyDpNVyXeduaKmfujYUjzGbpQ86
NmQL8OcBxVHfwQkGYZ8NvVLvRfcTW4c80StGWfvYOjrADyvtT8lafpliNM5c
8p3VFsGiqHR2yF/JKO82Rhk1BCJFluibf2+GycttXl2eGYTz0vUDnpJ5Jovt
HicXBWP5srmrLf+qGGnewfnDC0NgtCU2qCtEzWROcibqFWIIbyouizU1keO3
ndNXcARC7rjMyVkLf0eyur13HkUOji98IdGG1Dtobg8Jw8dxU9XZDTqY3rF9
v2V3OF6G3m3Vn9SFh05gjqtPJPQlqYpElwXocgq+c8E5CkGf9tX2JesB0spv
P+dG4+WvcVPTjWx4FLdeCPwnGj2hem5cXQN495h+8rA/BiN3pg3fuRhiXLGJ
far9K+yy6hpTfPMBvvf6qHKo4hheB9ocqXjMQViHz9h3slgcqoqxW84yQtsy
z/014XFQ2dy1F1cbwSAl/csV7sex1qAzKo/PhYzJdN1mIYVKyEmuH+Uie1jk
Ua4fjzjLLnlvmjEunIlWxijikeFjr/xt1SJs4An6k3pPgK9j7Nt/fxHmVXMU
TSdRbuGYejtyMZonn90TnzuF4uIFb4r0TbDwVsGO3vgEMHIvSXStCfxLckUl
wkRI1VuJnacpJiQVJVzT0xDcP1k8+NwUMTORdjHpp/GE2NomZ5hhhv2UzZ45
DeW9tOnFq81xO7M8sTU0CS0qv47SbnNk5ZttrRhMwrKswYc8CQ+RDyVHw9wo
lp+VVydoE7zJkv8g2EnRWjU8uoFFIN3zSO3sTvHFg6XmL/QI6KPNuSwvilKD
IrqbQ3B+0KhFLqSwSb+4bwWPoHmsgdMXTOGYmq3Zvo5AW61V5yij2JUkE+r6
EaS1bVR9mELx8nJ7+k1/AkMa6qadSnG2TbMt7CCBqe7AYE86RZ860XogmMDK
4Jr2kRyKvQkn1VciCDzMdgsLS957Thy7tjOFoPeJTJ5USqFZWD+sSiUQFjSN
i8ve+5qnF9WmE4iWrkxwuEbxfC4qgXeOIGqV8kr3dYrQ4+GCvwoI3irWvL5R
R8G5WJ1WfIkg/orIpaCeoqZxssXnMkHyms6ekCaKqbcSqx/LCPQmVDzPZooc
04qAiKsEZ6vWB9v/ROHgOJ6zqpLAODykhvczxYDQqvNxNUGeXeGsupUi9pj4
XcZ1gv8A0DXmUg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{40., 0.6000000000000001},
  Frame->True,
  GridLines->Automatic,
  ImageSize->700,
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.5467704832255993`*^9, 3.5478089137066755`*^9, 
  3.5478119106684275`*^9, 3.547815748831005*^9, 3.5478159102864695`*^9, 
  3.5478538931147733`*^9, 3.5522136383428698`*^9, 3.55221428443487*^9, 
  3.5522162293276*^9, 3.5522170922758594`*^9, 3.5522172093508596`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"CAbsPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"CAbs", "[", 
      RowBox[{"i", " ", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", ".2", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(C\), \(Abs\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.54426890215625*^9, 3.544268903453125*^9}, {
  3.5467699990919085`*^9, 3.5467699992089148`*^9}, {3.5522135323588696`*^9, 
  3.5522135325638695`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"CExtPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"CExt", "[", 
      RowBox[{"i", " ", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".2", ",", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(C\), \(Ext\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5522135354058695`*^9, 3.5522135355958695`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"CScatPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"CScat", "[", 
      RowBox[{"i", " ", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".2", ",", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(C\), \(Scat\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544268905984375*^9, 3.544268907109375*^9}, 
   3.54426903546875*^9, {3.546770689733411*^9, 3.546770691904535*^9}, {
   3.5472934151587644`*^9, 3.5472934190899897`*^9}, {3.5472938728344984`*^9, 
   3.5472938732713013`*^9}, {3.547293906624315*^9, 3.547293906686715*^9}, {
   3.5522135382948694`*^9, 3.55221353849187*^9}},
 EmphasizeSyntaxErrors->True],

Cell["\<\
All three on the same plot.  The first cell creates a legend for the plot.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CExt", "[", 
        RowBox[{"i", " ", 
         FractionBox[
          SubscriptBox["\[Lambda]", "0"], 
          RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", 
       RowBox[{"CAbs", "[", 
        RowBox[{"i", " ", 
         FractionBox[
          SubscriptBox["\[Lambda]", "0"], 
          RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", 
       RowBox[{"CScat", "[", 
        RowBox[{"i", " ", 
         FractionBox[
          SubscriptBox["\[Lambda]", "0"], 
          RowBox[{"2", "\[Pi]"}]]}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", ".8", ",", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(C\), \(Ext\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5442689670625*^9, 3.544269000875*^9}, 
   3.54677088738806*^9, {3.5467709478693657`*^9, 3.546770949585369*^9}, {
   3.5522135408258696`*^9, 3.55221354101287*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"CLegend", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(C\), \(scat\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(C\), \(abs\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(C\), \(ext\)]\)\>\""}], "}"}]}], "}"}], 
      ",", " ", 
      RowBox[{"LegendPosition", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".55"}], ",", "0.3"}], "}"}]}], ",", " ", 
      RowBox[{"LegendSize", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "0.25"}], "}"}]}], ",", " ", 
      RowBox[{"LegendShadow", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.544269937875*^9, 3.544269938015625*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"ShowLegend", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"CScatPlot", ",", "CAbsPlot", ",", "CExtPlot", ",", " ", 
       RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}]}], "]"}], ",", 
     " ", "CLegend", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], " ", 
    "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.544269940765625*^9, 3.544269940890625*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.544268943890625*^9, 3.544268946234375*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate and plot the efficiencies ", "Section",
 FontSize->15],

Cell["\<\
The efficiencies are defined simply as the ratio of the cross sections to the \
geometrical cross sectional area of the scatterer.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"QScat", "[", "a_", "]"}], ":=", "  ", 
  FractionBox[
   RowBox[{"CScat", "[", "a", "]"}], 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox["a", "2"]}]]}], "\n", 
 RowBox[{
  RowBox[{"QAbs", "[", "a_", "]"}], ":=", " ", 
  FractionBox[
   RowBox[{"CAbs", "[", "a", "]"}], 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox["a", "2"]}]]}], "\n", 
 RowBox[{
  RowBox[{"QExt", "[", "a_", "]"}], ":=", 
  FractionBox[
   RowBox[{"CExt", "[", "a", "]"}], 
   RowBox[{"\[Pi]", " ", 
    SuperscriptBox["a", "2"]}]]}]}], "Input"],

Cell["Print out efficiencies for the default parameters.", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<\!\(\*SubscriptBox[\(Q\), \(Scat\)]\) = \>\"", ",", 
   RowBox[{
    RowBox[{"QScat", "[", "r", "]"}], "//", "N"}], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(Q\), \(\(Abs\)\(\\\ \)\)]\) = \>\"", ",", 
   RowBox[{
    RowBox[{"QAbs", "[", "r", "]"}], "//", "N"}], ",", 
   "\"\<\\n\!\(\*SubscriptBox[\(Q\), \(\(Ext\)\(\\\ \)\)]\) = \>\"", ",", 
   RowBox[{
    RowBox[{"QExt", "[", "r", "]"}], "//", "N"}]}], " ", "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(Q\\), \\(Scat\\)]\\) = \"\>", 
   "\[InvisibleSpace]", "1.8925414261250412`*^-26", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(Q\\), \
\\(\\(Abs\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "20.33211378383539`", 
   "\[InvisibleSpace]", "\<\"\\n\\!\\(\\*SubscriptBox[\\(Q\\), \
\\(\\(Ext\\)\\(\\\\ \\)\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "20.33211378383539`"}],
  SequenceForm[
  "\!\(\*SubscriptBox[\(Q\), \(Scat\)]\) = ", 1.8925414261250412`*^-26, 
   "\n\!\(\*SubscriptBox[\(Q\), \(\(Abs\)\(\\ \)\)]\) = ", 20.33211378383539, 
   "\n\!\(\*SubscriptBox[\(Q\), \(\(Ext\)\(\\ \)\)]\) = ", 20.33211378383539],
  Editable->False]], "Print",
 CellChangeTimes->{3.544269275171875*^9, 3.5442823579339743`*^9, 
  3.544283174557683*^9, 3.5443504411141095`*^9, 3.5455722715946503`*^9, 
  3.5455779456411877`*^9, 3.545578515631789*^9, 3.5462553438213005`*^9, 
  3.546268707061922*^9, 3.546351198753537*^9, 3.5463534952272215`*^9, 
  3.5463649225849075`*^9, 3.5463811987904468`*^9, 3.5467688538988543`*^9, 
  3.5467710009250593`*^9, 3.546771161057717*^9, 3.54729398237459*^9, 
  3.547809343234322*^9, 3.5478123362676272`*^9, 3.547816328424509*^9, 
  3.547854154635417*^9, 3.5522136385278697`*^9, 3.5522142846668696`*^9, 
  3.552216229564695*^9, 3.552217092462859*^9, 3.5522172095728593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Linear", "Text"],
 " plots of size parameter vs. efficiency."
}], "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Note that these plots take longer to generate as the size parameter \
increases.  The multiplicative factor in the argument converts the abscissa \
variable to q values (rather than radius values).\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", " ", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", " ", "40"}]}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"QScatPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"QScat", "[", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        FractionBox[
         SubscriptBox["\[Lambda]", "0"], 
         RowBox[{"2", "\[Pi]"}]], " ", ")"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".8", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", "  ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(Scat\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544269289484375*^9, 3.54426929209375*^9}, {
  3.5467709100080996`*^9, 3.5467709554197793`*^9}, {3.5522135462168694`*^9, 
  3.5522135463608694`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"QAbsPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"QAbs", "[", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        FractionBox[
         SubscriptBox["\[Lambda]", "0"], 
         RowBox[{"2", "\[Pi]"}]], ")"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", ".8", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(Abs\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.54426929721875*^9, 3.544269299015625*^9}, 
   3.546770917106112*^9, 3.5467709591949863`*^9, {3.5522135490478697`*^9, 
   3.5522135492428694`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"QExtPlot", " ", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"QExt", "[", 
      RowBox[{"i", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", ".8", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(Ext\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5442693053125*^9, 3.544269306296875*^9}, {
   3.544350451557707*^9, 3.5443504537378316`*^9}, 3.54677092153652*^9, 
   3.5467709634693937`*^9, {3.5522135515658693`*^9, 3.5522135517068696`*^9}},
 EmphasizeSyntaxErrors->True],

Cell["\<\
All three on the same plot.  The first cell creates a legend for the plot.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"QLegend", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(scat\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(abs\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
          "\"\<\!\(\*SubscriptBox[\(Q\), \(ext\)]\)\>\""}], "}"}]}], "}"}], 
      ",", " ", 
      RowBox[{"LegendPosition", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".55"}], ",", "0.3"}], "}"}]}], ",", " ", 
      RowBox[{"LegendSize", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0.25", ",", "0.25"}], "}"}]}], ",", " ", 
      RowBox[{"LegendShadow", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.544269927296875*^9, 3.544269927453125*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"ShowLegend", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"QScatPlot", ",", "QAbsPlot", ",", "QExtPlot", ",", " ", 
       RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
       RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}]}], "]"}], ",", 
     " ", "QLegend", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], " ", 
    "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.544269930078125*^9, 3.54426993034375*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Log-linear", "Text"],
 " plots of size parameter vs. efficiency."
}], "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
These plots are useful when plotting over a large range of q values, but take \
longer to generate as the size parameter increases.  The multiplicative \
factor in the argument converts the abscissa variable to q values (rather \
than radius values).\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"LogLinearPlot", ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", " ", "40"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.544269923375*^9, 3.54426992375*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"Note", " ", "from", " ", 
  RowBox[{"Guy", ":", " ", 
   RowBox[{
   "These", " ", "scattering", " ", "efficiencies", " ", "should", " ", "be", 
    " ", "dimensionless", " ", "but", " ", "were", " ", "not", " ", "coded", 
    " ", "so", " ", "by", " ", "Art", " ", 
    RowBox[{"Lampado", ".", "  ", "I"}], " ", "will", " ", "go", " ", 
    "through", " ", "and", " ", "alter", " ", 
    RowBox[{"this", "."}]}]}]}]], "Input",
 CellChangeTimes->{{3.546381596558091*^9, 3.5463816339401817`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"QScatLogPlot", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"QScat", "[", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        FractionBox[
         SubscriptBox["\[Lambda]", "0"], 
         RowBox[{"2", "\[Pi]"}]], " ", ")"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".8", ",", " ", "6"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", "  ", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(Scat\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544269319703125*^9, 3.544269321015625*^9}, {
  3.5462565416588125`*^9, 3.546256542766876*^9}, {3.5467731594485426`*^9, 
  3.5467731613906536`*^9}, {3.5522135554168696`*^9, 3.5522135559768696`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"QAbsLogPlot", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"QAbs", "[", 
      RowBox[{"i", " ", 
       RowBox[{"(", 
        FractionBox[
         SubscriptBox["\[Lambda]", "0"], 
         RowBox[{"2", "\[Pi]"}]], ")"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", ".8", ",", " ", "6"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(Abs\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.54426932303125*^9, 3.544269325671875*^9}, {
  3.544350462183315*^9, 3.544350464493447*^9}, {3.5462564906398945`*^9, 
  3.546256492326991*^9}, {3.5467731684000545`*^9, 3.5467731690500917`*^9}, {
  3.5522135580638695`*^9, 3.5522135582248697`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"QExtLogPlot", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"QExt", "[", 
      RowBox[{"i", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", ".8", ",", " ", "6"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(Ext\)]\)  (\!\(\*SuperscriptBox[\(\
\[Mu]m\), \(2\)]\))\>\""}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544269327609375*^9, 3.5442693290625*^9}, {
  3.546256559952859*^9, 3.5462565606438985`*^9}, {3.5467731726913*^9, 
  3.5467731747314167`*^9}, {3.5522135603168697`*^9, 3.5522135604568696`*^9}},
 EmphasizeSyntaxErrors->True],

Cell["\<\
All three on the same plot.  The first cell creates a legend for the plot.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"QLegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(Q\), \(scat\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(Q\), \(abs\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(Q\), \(ext\)]\)\>\""}], "}"}]}], "}"}], 
     ",", " ", 
     RowBox[{"LegendPosition", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", ".55"}], ",", "0.3"}], "}"}]}], ",", " ", 
     RowBox[{"LegendSize", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.25"}], "}"}]}], ",", " ", 
     RowBox[{"LegendShadow", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.544269908296875*^9, 3.544269908546875*^9}, {
  3.5442825376532536`*^9, 3.544282538367295*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowLegend", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"QScatLogPlot", ",", "QAbsLogPlot", ",", "QExtLogPlot", ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}]}], "]"}], ",", 
    " ", "QLegend", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], " ", 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.544269911484375*^9, 3.5442699120625*^9}, {
  3.5442825412504597`*^9, 3.5442825418434935`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(QScatLogPlot, QAbsLogPlot, QExtLogPlot, \
\\(\\(PlotRange \[Rule] All\\)\\), \\(\\(DisplayFunction \[Rule] \
Identity\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522136386318693`*^9, 3.5522142847838697`*^9, 
  3.552216229669737*^9, 3.552217092535859*^9, 3.5522172096698594`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate and plot the asymmetry factor", "Section",
 FontSize->15],

Cell[TextData[{
 StyleBox["The equation for the asymmetry factor comes from Fu and Sun \
(Applied Optics, Vol. ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["40",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", No. 9, 2001, pp. 1354-1361).",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "a_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"l", 
           RowBox[{"(", 
            RowBox[{"l", "+", "2"}], ")"}]}], 
          RowBox[{"l", " ", "+", " ", "1"}]], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"an", "[", 
              RowBox[{"l", ",", "a"}], "]"}], "*", "  ", 
             SuperscriptBox[
              RowBox[{"an", "[", 
               RowBox[{
                RowBox[{"l", "+", "1"}], ",", "a"}], "]"}], "*"]}], "+", " ", 
            RowBox[{
             RowBox[{"bn", "[", 
              RowBox[{"l", ",", "a"}], "]"}], "*", 
             SuperscriptBox[
              RowBox[{"bn", "[", 
               RowBox[{
                RowBox[{"l", "+", "1"}], ",", "a"}], "]"}], "*"]}]}], ")"}], 
          "]"}]}], " ", "+", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "l"}], "+", "1"}], ")"}], 
          RowBox[{"l", 
           RowBox[{"(", 
            RowBox[{"l", " ", "+", " ", "1"}], ")"}]}]], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"an", "[", 
             RowBox[{"l", ",", "a"}], "]"}], " ", "*", 
            SuperscriptBox[
             RowBox[{"bn", "[", 
              RowBox[{"l", ",", "a"}], "]"}], "*"]}], ")"}], "]"}]}]}], 
       ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"l", "=", "1"}], 
      RowBox[{"LastTerm", "[", "a", "]"}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Abs", "[", 
           RowBox[{"an", "[", 
            RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], " ", "+", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"Abs", "[", 
           RowBox[{"bn", "[", 
            RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5462528541892695`*^9, 3.5462528853430514`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<The anisotropy value is g = \>\"", ",", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"g", "[", "r", "]"}]}], "//", "N"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5462575793391647`*^9, 3.546257594789048*^9}}],

Cell[BoxData["\<\"The anisotropy value is g =           -10\\n2.05203 \
10\"\>"], "Output",
 CellChangeTimes->{
  3.5455806414753804`*^9, 3.5462571517107058`*^9, 3.5462574507838116`*^9, {
   3.546257581258274*^9, 3.546257595270076*^9}, 3.546269664355231*^9, 
   3.5463521561392126`*^9, 3.546354463799374*^9, 3.546365240232665*^9, 
   3.546382492607045*^9, 3.5467698871985083`*^9, 3.5472940920115523`*^9, 
   3.547810740852642*^9, 3.547813724366954*^9, 3.5478177250024652`*^9, 
   3.5478551305107317`*^9, 3.55221363874187*^9, 3.55221428485987*^9, 
   3.552216229750769*^9, 3.552217092608859*^9, 3.5522172097608595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create plot of size parameter vs. asymmetry factor.", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"The", " ", "assummetry", " ", "factor", " ", "denotes", " ", "the", 
  " ", "symmetry", " ", "of", " ", "the", " ", "phase", " ", "function", " ", 
  "and", " ", "related", " ", "whether", " ", "forward", " ", "scattering", 
  " ", "or", " ", "back", " ", "scattering", " ", "is", " ", "dominant", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"greater", " ", "than", " ", "1", " ", "is", " ", "forward"}], 
     ",", " ", 
     RowBox[{
     "less", " ", "than", " ", "1", " ", "is", " ", "backscattering"}]}], 
    ")"}], "."}]}]], "Input",
 CellChangeTimes->{{3.5462573738504114`*^9, 3.546257407153316*^9}, {
  3.547294100313382*^9, 3.54729410128948*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"gPlot", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"i", " ", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".8", ",", " ", "4"}], "}"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", "\"\<Asymmetry Factor\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544270858609375*^9, 3.544270863421875*^9}, {
  3.546773817122159*^9, 3.5467738172351656`*^9}, {3.5522135637738695`*^9, 
  3.5522135638888693`*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate and plot the albedo ", "Section",
 FontSize->15],

Cell[TextData[StyleBox["The albedo is simply the ratio of the scattering to \
extinction cross sections.",
 FontColor->RGBColor[0, 0, 1]]], "Text",
 CellChangeTimes->{3.54625291102252*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"albedo", "[", "a_", "]"}], " ", ":=", " ", 
   FractionBox[
    RowBox[{"CScat", "[", "a", "]"}], 
    RowBox[{"CExt", "[", "a", "]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<The albedo is \>\"", ",", " ", 
   RowBox[{"ToString", "[", 
    RowBox[{
     RowBox[{"albedo", "[", "r", "]"}], "//", "N"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5462649754811993`*^9, 3.546264985193755*^9}}],

Cell[BoxData["\<\"The albedo is           -28\\n9.30814 10\"\>"], "Output",
 CellChangeTimes->{3.547855220288889*^9, 3.55221363886187*^9, 
  3.5522142849808693`*^9, 3.552216229934843*^9, 3.5522170927288594`*^9, 
  3.5522172098888597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"albedo", "[", "r", "]"}]], "Input",
 CellChangeTimes->{{3.546264987134866*^9, 3.546264987954913*^9}}],

Cell[BoxData["9.308139066335866`*^-28"], "Output",
 CellChangeTimes->{
  3.54427090303125*^9, 3.5442826266133423`*^9, 3.5442834551467314`*^9, 
   3.5443507194630303`*^9, 3.545565937755376*^9, {3.5455752061975*^9, 
   3.545575209150669*^9}, 3.545580649196822*^9, 3.5462579824732227`*^9, {
   3.5462649710219445`*^9, 3.546264988398938*^9}, 3.5462697461241703`*^9, 
   3.546352236958129*^9, 3.546354548134157*^9, 3.5463652432902703`*^9, 
   3.5463826145706167`*^9, 3.546769980794862*^9, 3.5467740081400847`*^9, 
   3.5472943132576747`*^9, 3.5478108654976654`*^9, 3.5478138487328377`*^9, 
   3.54781784905287*^9, 3.5478552203980894`*^9, 3.5522136389758697`*^9, 
   3.5522142851388693`*^9, 3.5522162300738983`*^9, 3.5522170928418593`*^9, 
   3.552217210007859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"albedo", "[", 
      RowBox[{"i", "*", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", "3"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.546264995525346*^9, 3.546265012109295*^9}, {
  3.546265321336982*^9, 3.546265346228405*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 6}}, Typeset`size$$ = {90., {0., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`i$15673$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$15673$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> N[
        $CellContext`albedo[$CellContext`i$$ (
          Subscript[$CellContext`\[Lambda], 0]/(2 Pi))], 3], 
      "Specifications" :> {{$CellContext`i$$, 1, 6}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{252., {51., 56.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.54626532236304*^9, 3.5462653471574583`*^9}, 
   3.5462697461461716`*^9, 3.546352237051729*^9, 3.546354548167159*^9, 
   3.54636524330587*^9, 3.546382616446724*^9, 3.546769980812863*^9, 
   3.546774008163086*^9, 3.5472943143047795`*^9, 3.5478108655444655`*^9, 
   3.547813848764037*^9, 3.5478178490996695`*^9, 3.5478552222544923`*^9, 
   3.5522136392648697`*^9, 3.5522142852218695`*^9, 3.552216230139925*^9, 
   3.5522170929448595`*^9, 3.5522172100368595`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.546265324573167*^9, 3.546265332401614*^9}}],

Cell[CellGroupData[{

Cell["Create plot of albedo vs. size parameter.", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"LogLinearPlot", ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", " ", "40"}]}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.54427090759375*^9, 3.54427090778125*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "In", " ", "the", " ", "next", " ", "section", " ", "of", " ", "code"}], 
   ",", " ", 
   RowBox[{"i", " ", "is", " ", "the", " ", "size", " ", 
    RowBox[{"paramater", "."}]}]}], "  ", "*)"}]], "Input",
 CellChangeTimes->{{3.5466813846428385`*^9, 3.546681415654612*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"AlbedoPlot", " ", "=", " ", 
   RowBox[{"LogLinearPlot", "[", 
    RowBox[{
     RowBox[{"albedo", "[", 
      RowBox[{"i", " ", 
       FractionBox[
        SubscriptBox["\[Lambda]", "0"], 
        RowBox[{"2", "\[Pi]"}]]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", ".2", ",", " ", "6"}], "}"}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<q = \!\(\*FractionBox[\(2  \[Pi]\\\ a\), SubscriptBox[\(\[Lambda]\
\), \(0\)]]\)\>\"", ",", " ", "\"\<Albedo\>\""}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.544270909921875*^9, 3.54427091084375*^9}, {
   3.5467738288808317`*^9, 3.546773829683878*^9}, 3.5472944132106695`*^9, {
   3.5522135676618695`*^9, 3.55221356777687*^9}},
 EmphasizeSyntaxErrors->True]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate and plot the scattering phase functions", "Section",
 FontSize->15],

Cell["\<\
Next, we construct the formulae for intensity as a function of angular \
position for incident radiation polarized in either of the two linear \
orthogonal polarization states.  Begin by defining the amplitude matrix \
elements, S1(r, \[Theta]) and S2(r, \[Theta]) which simplify the form of the \
resulting phase function equations a little \
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S1", "[", 
    RowBox[{"a_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], 
     RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
       RowBox[{"l", " ", 
        RowBox[{"(", 
         RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"an", "[", 
         RowBox[{"l", ",", "a"}], "]"}], 
        RowBox[{"pi", "[", 
         RowBox[{"l", ",", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"bn", "[", 
         RowBox[{"l", ",", "a"}], "]"}], "  ", 
        RowBox[{"\[Tau]", "[", 
         RowBox[{"l", ",", "\[Theta]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"S2", "[", 
    RowBox[{"a_", ",", "\[Theta]_"}], "]"}], ":=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], 
     RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
       RowBox[{"l", " ", 
        RowBox[{"(", 
         RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"an", "[", 
         RowBox[{"l", ",", "a"}], "]"}], " ", 
        RowBox[{"\[Tau]", "[", 
         RowBox[{"l", ",", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"bn", "[", 
         RowBox[{"l", ",", "a"}], "]"}], "  ", 
        RowBox[{"pi", "[", 
         RowBox[{"l", ",", "\[Theta]"}], "]"}]}]}], " ", ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.544353505575387*^9, 3.5443535223243446`*^9}, {
  3.546252933955832*^9, 3.5462529738111115`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Added", " ", "by", " ", "Guy"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.544350150599493*^9, 3.5443501534336553`*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Look", " ", "at", " ", "the", " ", "phase", " ", "difference", " ", 
   "between", " ", "the", " ", "scattered", " ", "beams", " ", "A", " ", 
   "and", " ", "B"}]}]], "Input",
 CellChangeTimes->{{3.544350160929084*^9, 3.544350172472744*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"N", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], 
       RowBox[{"Im", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], 
       RowBox[{"Im", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}]}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], 
       RowBox[{"Re", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"Im", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], 
       RowBox[{"Im", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}]}]}]], ",", "3"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5443515911338873`*^9, 3.5443515932420073`*^9}, {
  3.5462529915111237`*^9, 3.5462530010166674`*^9}, {3.546265573411399*^9, 
  3.5462655943996*^9}, {3.5463507941152525`*^9, 3.5463508004236135`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"(*", "  ", 
  RowBox[{"\[Theta]1", "=", 
   RowBox[{"ContourPlot", "[", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"S1", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}], 
          RowBox[{"Im", "[", 
           RowBox[{"S2", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"S2", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}], 
          RowBox[{"Im", "[", 
           RowBox[{"S1", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"S1", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}], 
          RowBox[{"Re", "[", 
           RowBox[{"S2", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"S1", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}], 
          RowBox[{"Im", "[", 
           RowBox[{"S2", "[", 
            RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], "]"}]}]}]], ",", 
       "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{".9", "\[Pi]"}]}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5443501826253247`*^9, 3.5443502324671755`*^9}, {
  3.5443502849491777`*^9, 3.544350345610647*^9}, {3.544350508181946*^9, 
  3.5443505847373247`*^9}, {3.5443536485685654`*^9, 3.5443536796043406`*^9}, {
  3.546253012457322*^9, 3.546253019454722*^9}, {3.546350802537734*^9, 
  3.546350802945758*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"Look", " ", "at", " ", "the", " ", "scattering", " ", "amplitude", 
  " ", "in", " ", "the", " ", "forward", " ", 
  RowBox[{"direction", ":"}]}]], "Input",
 CellChangeTimes->{{3.5443516679872828`*^9, 3.5443516838171883`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cextfor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["\[Lambda]", "0"], "^", "2"}], "/", "Pi"}], ")"}], "*", 
   RowBox[{"Re", "[", 
    RowBox[{"S", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5443516903995647`*^9, 3.54435169714095*^9}, {
  3.5443517690230618`*^9, 3.544351785129983*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"296527078849", " ", 
   RowBox[{"Re", "[", 
    RowBox[{"S", "[", 
     RowBox[{"1", ",", "0"}], "]"}], "]"}]}], 
  RowBox[{"1000000000000", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.5443502632329354`*^9, {3.5443503141348467`*^9, 3.544350338739254*^9}, 
   3.544351587099656*^9, 3.545575239328395*^9, 3.5455806777394543`*^9, 
   3.546352521128228*^9, 3.546354858835506*^9, 3.546365256394294*^9, 
   3.5463830475515337`*^9, 3.546770329956833*^9, 3.5467743418211703`*^9, 
   3.5478111907264657`*^9, 3.5478141725108376`*^9, 3.547818174919181*^9, 
   3.5478554677209234`*^9, 3.5522136396058693`*^9, 3.5522142855488696`*^9, 
   3.55221623050307*^9, 3.5522170932638597`*^9, 3.5522172102428594`*^9}]
}, Open  ]],

Cell[TextData[{
 "Here are the phase function equations.  The normalization factor (to insure \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"P", "(", 
       RowBox[{"cos", "(", "\[Theta]", ")"}], ")"}], 
      RowBox[{"\[DifferentialD]", "\[CapitalOmega]"}]}]}], " ", "=", "  ", 
    "1"}], TraditionalForm]]],
 ") is sometime used in the literature (e.g., Fu and Sun) and sometimes \
neglected (e.g Bohren and Huffman).  Therefore, two separate functions for \
the unpolarized scattering phase function are created and either one may be \
used.\n"
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Iperp", "[", 
     RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Abs", "[", 
       RowBox[{"S1", "[", 
        RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ipar", "[", 
     RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"Abs", "[", 
       RowBox[{"S2", "[", 
        RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Iunpol", "[", 
     RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
    FractionBox[
     RowBox[{
      RowBox[{"Iperp", "[", 
       RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], " ", "+", " ", 
      RowBox[{"Ipar", "[", 
       RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}], "2"]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Norma", "[", "a_", "]"}], ":=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"l", "=", "1"}], 
     RowBox[{"LastTerm", "[", "a", "]"}]], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"l", " ", "+", " ", "1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Abs", "[", 
          RowBox[{"an", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], " ", "+", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Abs", "[", 
          RowBox[{"bn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"]}], ")"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IunpolNorm", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"Iperp", "[", 
      RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], " ", "+", " ", 
     RowBox[{"Ipar", "[", 
      RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}], 
    RowBox[{"Norma", "[", "a", "]"}]]}], ";"}]}], "Input",
 CellChangeTimes->{{3.54427105996875*^9, 3.54427106178125*^9}}],

Cell[CellGroupData[{

Cell["Create plots of the phase functions.", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["Log-linear plots of scattered intensity vs. angle.", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IPerpPlot", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Iperp", "[", 
      RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", "  ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", "  ", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (deg)\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(perp\)]\) Phase Function\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5442710763125*^9, 3.544271077*^9}, {
  3.5462656769903235`*^9, 3.546265678971437*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJw11GtMk2cUB/BeoH1fIwso4AjhIiAuYqzJljEC5jw0m26gwHBqVq4W2bCd
XN0Q5ua2gGyArHQoiJeChoJZ6EQudSimAzsBO+1oKUJRGQHpvKAV7Uq5bXLe
fTg5+eV8ODn/D2etOCs+ncNiseL/q1d9PXcwyPenWBDtrHb41e3QrPv7Wvgr
J3edXLbjomDfsDwF0lbXLrvFBoNuqk/BugI96Z5h75BnQbQLWvlGooKlyocL
zHxka1F3g/wICCl0faTEyd5cAvtp9GCKfP0Z+Y/wFzP3jbF2zDRXQxvj+M+8
RmrkCjAzTjK+JbM2N4KKceXzxNYT8l+gmvF9doB6as9lWMc4XBu1QpingVI+
2qTQtTtyroOeh84ujNnbmt0LT5zRDS9XQmKCDixO6AOX0ys4gXro4qLr9EM3
jcIBiOWgjZYP6EaxEdpYaMFK/+JNySZwWcL8SgU2VsfHdyByAZ0T0ntc0zAK
o3Ym3zSp6m7mGFhm0OKu3XGyT8bhyjQ6zWrUaL6fgB8s6PLN6izl0QcQPo7m
aNShRYUWOG5Gu22IvnW/5iGMGdDvK4Tnn8kfA9Gh1zzVbT2inobyHnTtjU42
d/8zqOlER/hELvnvs8KjFnTImOvEVwefg6AJ3dy0KqM9dwZMZ9GH7yUZQo6+
gPwq5r6Id6LPVr0E91LmPsW74kcyG8A3aH12bWr+uX+g8HN02LaAxbv1dkiQ
ovveC2sip2dBuhfd0HIybPxnBzTtRnsEbpQkX5gD1Xb0AJv6zuvqPMxGotup
PKW+bwEUoeiNHq4SsXYRgjehn1bY3N80LYFPEDqwpESQJWERrjd6XGQeEU6x
SMoqJr9Jw2x7JpuIaPSh3PQMzydssp2Njuk4FeX5BYewZ2uWPT0vOcy1cUir
FV0/9G1bZh6XzD1EOzK2pBbMcUnoBNpnoTIhp9CJSO+hH2wr66ecnMmvd9A9
wTrwLXMm3Qa0hFI6raV55NJttOyjSf/cHTxy9Q+0ui5oS08lj1hvooWZm9ll
f/KItB99KzxCG+/GJy596DSDtHw4lk/MN9B2yamdqRV8cvt39FjSGePbA3wy
rEX3xil2uXhS5DXGHtoDX4t2UeTQdbQ4LKKxsYoiroxNBXtk82qKjPagozpz
Cz40U+Q3xkUi1vTcY4pcYnzNcUysXKTIRcbmfuPpL/k0OcHYXus9FOdKEy1j
HhcOXnGniYDZ5y4VuwV70cS1G+3t9yIlwZsmuYwDDMUqmQ9NpjToDSVrFrR+
NFldjPaNf33Z///DfwHNEJk0
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -59.250975918991365`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameLabel->{
    FormBox["\"\[Theta] (deg)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(perp\\)]\\) Phase Function\"", 
     TraditionalForm]},
  FrameTicks->{{{{-59.25097591893943, 
       FormBox["1.8519451124999997`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591866945, 
       FormBox["1.8519451129999998`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975918399455`, 
       FormBox["1.8519451135`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591812947, 
       FormBox["1.8519451139999997`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975917859485`, 
       FormBox["1.8519451144999998`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591888543, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918831436`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591877744, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591872344, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918615445`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591856145, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591850745, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918453456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591834546, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918291466`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918237465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591818347, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918075476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918021474`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591796748, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975917913486`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591780549, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591775149, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}, {{-59.25097591893943, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591866945, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975918399455`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591812947, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975917859485`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591888543, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918831436`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591877744, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591872344, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918615445`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591856145, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591850745, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918453456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591834546, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918291466`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918237465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591818347, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918075476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918021474`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591796748, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975917913486`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591780549, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591775149, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->
   NCache[{{0, Pi}, {-59.250975918991365`, -59.25097591771073}}, {{
     0, 3.141592653589793}, {-59.250975918991365`, -59.25097591771073}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-59.25097591893943, 
      FormBox["1.8519451124999997`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.25097591866945, 
      FormBox["1.8519451129999998`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.250975918399455`, 
      FormBox["1.8519451135`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.25097591812947, 
      FormBox["1.8519451139999997`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.250975917859485`, 
      FormBox["1.8519451144999998`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.25097591888543, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918831436`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591877744, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591872344, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918615445`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591856145, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591850745, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918453456`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591834546, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918291466`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918237465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591818347, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918075476`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918021474`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591796748, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975917913486`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591780549, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591775149, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}}}]], "Output",
 CellChangeTimes->{3.544271099609375*^9, 3.544282646256466*^9, 
  3.544283474337829*^9, 3.545575248108897*^9, 3.5455806871079903`*^9, 
  3.546265679969494*^9, 3.546266465193406*^9, 3.5463525213778286`*^9, 
  3.546354858959513*^9, 3.546365256472294*^9, 3.5463830476451344`*^9, 
  3.546770330106841*^9, 3.5467743419441776`*^9, 3.5478111909448657`*^9, 
  3.5478141727292376`*^9, 3.54781817513758*^9, 3.5478194165068173`*^9, 
  3.5478194858483725`*^9, 3.547855467892524*^9, 3.5522136398828697`*^9, 
  3.55221428578187*^9, 3.5522162307391644`*^9, 3.5522170934848595`*^9, 
  3.5522172104458594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IParPlot", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Ipar", "[", 
      RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", "  ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", "  ", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (deg)\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(par\)]\) Phase Function\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.544271271359375*^9, 3.54427127240625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
3w==
     "]], LineBox[CompressedData["
1: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
H1vBf9bQTTPjytMhbaoi6CL+H/4PsnrmtA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -65.95511200472488},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameLabel->{
    FormBox["\"\[Theta] (deg)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(par\\)]\\) Phase Function\"", 
     TraditionalForm]},
  FrameTicks->{{{{-66.77496769682732, 
       FormBox[
        TemplateBox[{"1", 
          TemplateBox[{"10", 
            RowBox[{"-", "29"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-65.16552978439323, 
       FormBox[
        TemplateBox[{"5", 
          TemplateBox[{"10", 
            RowBox[{"-", "29"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-64.47238260383328, 
       FormBox[
        TemplateBox[{"1", 
          TemplateBox[{"10", 
            RowBox[{"-", "28"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-62.86294469139918, 
       FormBox[
        TemplateBox[{"5", 
          TemplateBox[{"10", 
            RowBox[{"-", "28"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-62.16979751083923, 
       FormBox[
        TemplateBox[{"1", 
          TemplateBox[{"10", 
            RowBox[{"-", "27"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-60.560359598405135`, 
       FormBox[
        TemplateBox[{"5", 
          TemplateBox[{"10", 
            RowBox[{"-", "27"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-59.86721241784519, 
       FormBox[
        TemplateBox[{"1", 
          TemplateBox[{"10", 
            RowBox[{"-", "26"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-58.257774505411085`, 
       FormBox[
        TemplateBox[{"5", 
          TemplateBox[{"10", 
            RowBox[{"-", "26"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox]}, "Row", 
         DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )],
         TraditionalForm]}, {-66.08182051626738, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-65.67635540815921, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-65.38867333570744, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.98320822759926, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.82905754777201, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.69552615514749, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.5777431194911, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-63.779235423273335`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-63.37377031516517, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-63.08608824271339, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.68062313460523, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.52647245477797, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.39294106215344, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.27515802649706, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-61.47665033027929, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-61.071185222171124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.783503149719344`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.33721604709093, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.15489449029697, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.00074381046971, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.01991455745799, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.56792943371493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-66.77496769682732, 
       FormBox["\"\"", TraditionalForm]}, {-65.16552978439323, 
       FormBox["\"\"", TraditionalForm]}, {-64.47238260383328, 
       FormBox["\"\"", TraditionalForm]}, {-62.86294469139918, 
       FormBox["\"\"", TraditionalForm]}, {-62.16979751083923, 
       FormBox["\"\"", TraditionalForm]}, {-60.560359598405135`, 
       FormBox["\"\"", TraditionalForm]}, {-59.86721241784519, 
       FormBox["\"\"", TraditionalForm]}, {-58.257774505411085`, 
       FormBox["\"\"", TraditionalForm]}, {-66.08182051626738, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-65.67635540815921, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-65.38867333570744, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.98320822759926, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.82905754777201, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.69552615514749, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-64.5777431194911, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-63.779235423273335`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-63.37377031516517, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-63.08608824271339, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.68062313460523, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.52647245477797, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.39294106215344, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-62.27515802649706, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-61.47665033027929, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-61.071185222171124`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.783503149719344`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.33721604709093, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.15489449029697, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-60.00074381046971, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.01991455745799, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.56792943371493, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->600,
  Method->{},
  PlotRange->
   NCache[{{0, Pi}, {-65.95511200472488, -59.250976847601514`}}, {{
     0, 3.141592653589793}, {-65.95511200472488, -59.250976847601514`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-66.77496769682732, 
      FormBox[
       TemplateBox[{"1", 
         TemplateBox[{"10", 
           RowBox[{"-", "29"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-65.16552978439323, 
      FormBox[
       TemplateBox[{"5", 
         TemplateBox[{"10", 
           RowBox[{"-", "29"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-64.47238260383328, 
      FormBox[
       TemplateBox[{"1", 
         TemplateBox[{"10", 
           RowBox[{"-", "28"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-62.86294469139918, 
      FormBox[
       TemplateBox[{"5", 
         TemplateBox[{"10", 
           RowBox[{"-", "28"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-62.16979751083923, 
      FormBox[
       TemplateBox[{"1", 
         TemplateBox[{"10", 
           RowBox[{"-", "27"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-60.560359598405135`, 
      FormBox[
       TemplateBox[{"5", 
         TemplateBox[{"10", 
           RowBox[{"-", "27"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-59.86721241784519, 
      FormBox[
       TemplateBox[{"1", 
         TemplateBox[{"10", 
           RowBox[{"-", "26"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-58.257774505411085`, 
      FormBox[
       TemplateBox[{"5", 
         TemplateBox[{"10", 
           RowBox[{"-", "26"}]}, "Superscript", SyntaxForm -> 
          SuperscriptBox]}, "Row", 
        DisplayFunction -> (RowBox[{#, "\[Times]", #2}]& ), 
        InterpretationFunction -> (RowBox[{"Row", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{#, ",", #2}], "}"}], ",", "\"\[Times]\""}], "]"}]& )], 
       TraditionalForm]}, {-66.08182051626738, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-65.67635540815921, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-65.38867333570744, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-64.98320822759926, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-64.82905754777201, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-64.69552615514749, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-64.5777431194911, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-63.779235423273335`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-63.37377031516517, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-63.08608824271339, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-62.68062313460523, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-62.52647245477797, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-62.39294106215344, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-62.27515802649706, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-61.47665033027929, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-61.071185222171124`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-60.783503149719344`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-60.33721604709093, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-60.15489449029697, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-60.00074381046971, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.01991455745799, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-58.56792943371493, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.544271290953125*^9, 3.5442826548259554`*^9, 
  3.54428348292032*^9, 3.545575251098068*^9, 3.545580690459182*^9, 
  3.5462656831646767`*^9, 3.5463525215182285`*^9, 3.5463548591255226`*^9, 
  3.546365256612694*^9, 3.5463830477699347`*^9, 3.5467703302718506`*^9, 
  3.546774342135188*^9, 3.547811191210066*^9, 3.547814172994437*^9, 
  3.5478181754027777`*^9, 3.5478195013078737`*^9, 3.5478554681109247`*^9, 
  3.5522136401208696`*^9, 3.55221428602687*^9, 3.552216231015275*^9, 
  3.5522170937178593`*^9, 3.5522172107288594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IUnpolPlot", " ", "=", " ", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Iunpol", "[", 
      RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", "  ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", "  ", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (deg)\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(I\), \(unpol\)]\) Phase Function\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.54427129478125*^9, 3.544271298265625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 0], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -59.94412304077272},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameLabel->{
    FormBox["\"\[Theta] (deg)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(I\\), \\(unpol\\)]\\) Phase Function\"", 
     TraditionalForm]},
  FrameTicks->{{{{-59.86721241784519, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-26\""]}], 1.*^-26, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-57.564627324851145`, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-25\""]}], 1.*^-25, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-58.257774505411085`, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-26\""]}], 5.*^-26, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-55.95518941241704, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-25\""]}], 5.0000000000000005`*^-25, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-59.17406523728524, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"2.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-26\""]}], 2.*^-26, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-56.8714801442912, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"2.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-25\""]}], 2.*^-25, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-58.76860012917708, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"3.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-26\""]}], 3.*^-26, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-56.46601503618303, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"3.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-25\""]}], 3.0000000000000002`*^-25, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-59.46174730973702, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.5\"", "\[Times]", 
            SuperscriptBox["10", "\"-26\""]}], 1.5*^-26, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-57.15916221674298, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.5\"", "\[Times]", 
            SuperscriptBox["10", "\"-25\""]}], 1.5000000000000001`*^-25, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-57.92130226878987, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"7.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-26\""]}], 7.000000000000001*^-26, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-55.61871717579583, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"7.0\"", "\[Times]", 
            SuperscriptBox["10", "\"-25\""]}], 7.*^-25, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
        TraditionalForm]}, {-59.74942938218881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.64406886653098, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.54875868672665, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.39720878859945, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.33658416678302, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.27942575294307, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.225358531672796`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.11999801601497, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.06870472162742, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.01991455745799, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.97339454182309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.92894277925226, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.88638316483346, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.8455611703132, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.806340457159926`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.787770876165354`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.669987840508966`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.469317145046816`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.382305768057186`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.30226306038365, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.228155088229926`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.09462369560541, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.03399907378897, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-56.976840659949026`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-56.922773438678746`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-56.17833296373125, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-55.77286785562309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{-59.86721241784519, 
       FormBox["\"\"", TraditionalForm]}, {-57.564627324851145`, 
       FormBox["\"\"", TraditionalForm]}, {-58.257774505411085`, 
       FormBox["\"\"", TraditionalForm]}, {-55.95518941241704, 
       FormBox["\"\"", TraditionalForm]}, {-59.17406523728524, 
       FormBox["\"\"", TraditionalForm]}, {-56.8714801442912, 
       FormBox["\"\"", TraditionalForm]}, {-58.76860012917708, 
       FormBox["\"\"", TraditionalForm]}, {-56.46601503618303, 
       FormBox["\"\"", TraditionalForm]}, {-59.46174730973702, 
       FormBox["\"\"", TraditionalForm]}, {-57.15916221674298, 
       FormBox["\"\"", TraditionalForm]}, {-57.92130226878987, 
       FormBox["\"\"", TraditionalForm]}, {-55.61871717579583, 
       FormBox["\"\"", TraditionalForm]}, {-59.74942938218881, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.64406886653098, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.54875868672665, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.39720878859945, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.33658416678302, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.27942575294307, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.225358531672796`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.11999801601497, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.06870472162742, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-59.01991455745799, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.97339454182309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.92894277925226, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.88638316483346, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.8455611703132, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-58.806340457159926`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.787770876165354`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.669987840508966`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.469317145046816`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.382305768057186`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.30226306038365, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.228155088229926`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.09462369560541, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-57.03399907378897, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-56.976840659949026`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-56.922773438678746`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-56.17833296373125, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {-55.77286785562309, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->600,
  Method->{},
  PlotRange->
   NCache[{{0, Pi}, {-59.94412304077272, -59.25063828060332}}, {{
     0, 3.141592653589793}, {-59.94412304077272, -59.25063828060332}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-59.86721241784519, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-26\""]}], 1.*^-26, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-57.564627324851145`, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-25\""]}], 1.*^-25, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-58.257774505411085`, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"5.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-26\""]}], 5.*^-26, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-55.95518941241704, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"5.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-25\""]}], 5.0000000000000005`*^-25, 
         AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-59.17406523728524, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"2.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-26\""]}], 2.*^-26, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-56.8714801442912, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"2.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-25\""]}], 2.*^-25, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-58.76860012917708, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"3.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-26\""]}], 3.*^-26, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-56.46601503618303, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"3.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-25\""]}], 3.0000000000000002`*^-25, 
         AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-59.46174730973702, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.5\"", "\[Times]", 
           SuperscriptBox["10", "\"-26\""]}], 1.5*^-26, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-57.15916221674298, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"1.5\"", "\[Times]", 
           SuperscriptBox["10", "\"-25\""]}], 1.5000000000000001`*^-25, 
         AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-57.92130226878987, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"7.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-26\""]}], 7.000000000000001*^-26, 
         AutoDelete -> True], NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-55.61871717579583, 
      FormBox[
       TagBox[
        InterpretationBox[
         RowBox[{"\"7.0\"", "\[Times]", 
           SuperscriptBox["10", "\"-25\""]}], 7.*^-25, AutoDelete -> True], 
        NumberForm[#, {
          DirectedInfinity[1], 1}, NumberPadding -> {"", "0"}]& ], 
       TraditionalForm]}, {-59.74942938218881, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.64406886653098, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.54875868672665, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.39720878859945, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.33658416678302, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.27942575294307, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.225358531672796`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.11999801601497, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.06870472162742, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-59.01991455745799, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-58.97339454182309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-58.92894277925226, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-58.88638316483346, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-58.8455611703132, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-58.806340457159926`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.787770876165354`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.669987840508966`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.469317145046816`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.382305768057186`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.30226306038365, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.228155088229926`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.09462369560541, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-57.03399907378897, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-56.976840659949026`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-56.922773438678746`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-56.17833296373125, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {-55.77286785562309, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.544271333078125*^9, 3.5442826768842173`*^9, 
  3.5442835047815704`*^9, 3.545575252887171*^9, 3.545580693498356*^9, 
  3.546265685105788*^9, 3.546352521689829*^9, 3.5463548593035326`*^9, 
  3.546365256768694*^9, 3.546383047925935*^9, 3.546770330465862*^9, 
  3.5467743423301992`*^9, 3.547811191568866*^9, 3.547814173353237*^9, 
  3.5478181757615757`*^9, 3.547819512525797*^9, 3.547855468485325*^9, 
  3.55221364049187*^9, 3.5522142864778695`*^9, 3.5522162314864635`*^9, 
  3.5522170940958595`*^9, 3.5522172111188593`*^9}]
}, Open  ]],

Cell["\<\
All three on the same plot.  The first expression creates a legend for the \
plot.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ILegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(perp\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(par\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(unpol\)]\)\>\""}], "}"}]}], "}"}], 
     ",", " ", 
     RowBox[{"LegendPosition", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{".5", ",", "0.3"}], "}"}]}], ",", " ", 
     RowBox[{"LegendSize", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.25"}], "}"}]}], ",", " ", 
     RowBox[{"LegendShadow", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"IPerpPlot", ",", "IParPlot", ",", "IUnpolPlot", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta] (deg)\>\"", ",", " ", "\"\<Phase Functions\>\""}], 
     "}"}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.5442713776875*^9, 3.544271381578125*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJw11GtMk2cUB/BeoH1fIwso4AjhIiAuYqzJljEC5jw0m26gwHBqVq4W2bCd
XN0Q5ua2gGyArHQoiJeChoJZ6EQudSimAzsBO+1oKUJRGQHpvKAV7Uq5bXLe
fTg5+eV8ODn/D2etOCs+ncNiseL/q1d9PXcwyPenWBDtrHb41e3QrPv7Wvgr
J3edXLbjomDfsDwF0lbXLrvFBoNuqk/BugI96Z5h75BnQbQLWvlGooKlyocL
zHxka1F3g/wICCl0faTEyd5cAvtp9GCKfP0Z+Y/wFzP3jbF2zDRXQxvj+M+8
RmrkCjAzTjK+JbM2N4KKceXzxNYT8l+gmvF9doB6as9lWMc4XBu1QpingVI+
2qTQtTtyroOeh84ujNnbmt0LT5zRDS9XQmKCDixO6AOX0ys4gXro4qLr9EM3
jcIBiOWgjZYP6EaxEdpYaMFK/+JNySZwWcL8SgU2VsfHdyByAZ0T0ntc0zAK
o3Ym3zSp6m7mGFhm0OKu3XGyT8bhyjQ6zWrUaL6fgB8s6PLN6izl0QcQPo7m
aNShRYUWOG5Gu22IvnW/5iGMGdDvK4Tnn8kfA9Gh1zzVbT2inobyHnTtjU42
d/8zqOlER/hELvnvs8KjFnTImOvEVwefg6AJ3dy0KqM9dwZMZ9GH7yUZQo6+
gPwq5r6Id6LPVr0E91LmPsW74kcyG8A3aH12bWr+uX+g8HN02LaAxbv1dkiQ
ovveC2sip2dBuhfd0HIybPxnBzTtRnsEbpQkX5gD1Xb0AJv6zuvqPMxGotup
PKW+bwEUoeiNHq4SsXYRgjehn1bY3N80LYFPEDqwpESQJWERrjd6XGQeEU6x
SMoqJr9Jw2x7JpuIaPSh3PQMzydssp2Njuk4FeX5BYewZ2uWPT0vOcy1cUir
FV0/9G1bZh6XzD1EOzK2pBbMcUnoBNpnoTIhp9CJSO+hH2wr66ecnMmvd9A9
wTrwLXMm3Qa0hFI6raV55NJttOyjSf/cHTxy9Q+0ui5oS08lj1hvooWZm9ll
f/KItB99KzxCG+/GJy596DSDtHw4lk/MN9B2yamdqRV8cvt39FjSGePbA3wy
rEX3xil2uXhS5DXGHtoDX4t2UeTQdbQ4LKKxsYoiroxNBXtk82qKjPagozpz
Cz40U+Q3xkUi1vTcY4pcYnzNcUysXKTIRcbmfuPpL/k0OcHYXus9FOdKEy1j
HhcOXnGniYDZ5y4VuwV70cS1G+3t9yIlwZsmuYwDDMUqmQ9NpjToDSVrFrR+
NFldjPaNf33Z///DfwHNEJk0
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
3w==
      "]], LineBox[CompressedData["
1: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
H1vBf9bQTTPjytMhbaoi6CL+H/4PsnrmtA==
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 0], LineBox[CompressedData["
1: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
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, -59.250975918991365`},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{
    FormBox["\"\[Theta] (deg)\"", TraditionalForm], 
    FormBox["\"Phase Functions\"", TraditionalForm]},
  FrameTicks->{{{{-59.25097591893943, 
       FormBox["1.8519451124999997`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591866945, 
       FormBox["1.8519451129999998`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975918399455`, 
       FormBox["1.8519451135`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591812947, 
       FormBox["1.8519451139999997`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975917859485`, 
       FormBox["1.8519451144999998`*^-26", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591888543, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918831436`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591877744, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591872344, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918615445`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591856145, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591850745, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918453456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591834546, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918291466`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918237465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591818347, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918075476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918021474`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591796748, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975917913486`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591780549, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591775149, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}, {{-59.25097591893943, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591866945, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975918399455`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591812947, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.250975917859485`, 
       FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.25]}}, {-59.25097591888543, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918831436`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591877744, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591872344, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918615445`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591856145, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591850745, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918453456`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591834546, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918291466`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918237465`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591818347, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918075476`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975918021474`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591796748, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.250975917913486`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591780549, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}, {-59.25097591775149, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        GrayLevel[0.], 
        AbsoluteThickness[0.125]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->600,
  Method->{},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{-59.25097591893943, 
      FormBox["1.8519451124999997`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.25097591866945, 
      FormBox["1.8519451129999998`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.250975918399455`, 
      FormBox["1.8519451135`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.25097591812947, 
      FormBox["1.8519451139999997`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.250975917859485`, 
      FormBox["1.8519451144999998`*^-26", TraditionalForm], {0.00625, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.25]}}, {-59.25097591888543, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918831436`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591877744, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591872344, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918615445`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591856145, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591850745, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918453456`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591834546, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918291466`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918237465`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591818347, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918075476`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975918021474`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591796748, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.250975917913486`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591780549, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}, {-59.25097591775149, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       GrayLevel[0.], 
       AbsoluteThickness[0.125]}}}}]], "Output",
 CellChangeTimes->{3.54427138228125*^9, 3.544282676964222*^9, 
  3.544283504859575*^9, 3.5455752553623123`*^9, 3.5455806956034765`*^9, 
  3.546265690073072*^9, 3.5463525217366295`*^9, 3.5463548593655367`*^9, 
  3.5463652568154945`*^9, 3.5463830479727345`*^9, 3.5467703305258656`*^9, 
  3.5467743423972034`*^9, 3.547811191646866*^9, 3.547814173431237*^9, 
  3.5478181758395753`*^9, 3.547819524030919*^9, 3.547855468547725*^9, 
  3.5522136405518694`*^9, 3.5522142865608697`*^9, 3.5522162315624933`*^9, 
  3.552217094212859*^9, 3.5522172112508593`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polar plots of scattered intensity vs. angle.", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Begin by defining some additional graphics to make the polar plots look good. \
 Note that when we normalize the phase functions to the peak value (which is \
the same for all polarization states), the maximum corresponds to \[Theta] = \
0.   The PlotMax variable in the next cell permits the user to change the \
plot range, permitting \"zooming\" to look at the fine structure close to the \
particle.\
\>", "Text",
 CellChangeTimes->{{3.546253104171568*^9, 3.5462531149281826`*^9}, {
  3.546253326364406*^9, 3.546253327815489*^9}},
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MySpokes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", " ", "Degree"}], "]"}], ",", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", " ", "Degree"}], "]"}]}], "}"}]}], "}"}], 
       "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "345", ",", " ", "30"}], 
      "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"MyRings", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0.01"}], "}"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "i"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"NormFactor", " ", "=", " ", 
   RowBox[{"NLimit", "[", 
    RowBox[{
     RowBox[{"Iperp", "[", 
      RowBox[{"r", ",", "\[Phi]"}], "]"}], ",", " ", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.01"}], ",", " ", 
     RowBox[{"WorkingPrecision", "\[Rule]", " ", "20"}], ",", 
     RowBox[{"Terms", "\[Rule]", "6"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5462659182771244`*^9, 3.5462659803736763`*^9}, {
  3.5462661218377676`*^9, 3.5462661412678785`*^9}, {3.5462662629048357`*^9, 
  3.5462662692752004`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"NormFactor", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.5462661490783253`*^9, 3.5462661575688114`*^9}}],

Cell[BoxData["1.8519451124396067`*^-26"], "Output",
 CellChangeTimes->{{3.5462661512494497`*^9, 3.5462661578898296`*^9}, {
   3.5462662499430947`*^9, 3.5462662716533365`*^9}, 3.5463525222358303`*^9, 
   3.5463548599965725`*^9, 3.546365256862294*^9, 3.5463830484251356`*^9, 
   3.546770331108898*^9, 3.5478111922084656`*^9, 3.5478141739460373`*^9, 
   3.547818176354372*^9, 3.5478195388040247`*^9, 3.547855469124926*^9, 
   3.5522136410098696`*^9, 3.5522142870378695`*^9, 3.5522162321347227`*^9, 
   3.552217094641859*^9, 3.5522172113358593`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PlotMax", " ", "=", " ", "1.025"}], ";"}]], "Input",
 CellChangeTimes->{{3.546266272487384*^9, 3.5462662732314267`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"PolarPlot", ",", " ", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", " ", "500"}], ",", "  ", 
    RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", "  ", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", " ", "None"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "PlotMax"}], ",", "PlotMax"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "PlotMax"}], ",", "PlotMax"}], "}"}]}], "}"}]}], ",", 
    " ", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}]}], " ", "]"}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IPolarPerp", " ", "=", " ", 
  RowBox[{"PolarPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     FractionBox[
      RowBox[{"Iperp", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "NormFactor"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", ".1", ",", 
      RowBox[{"3", "*", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.544271416046875*^9, 3.544271416703125*^9}, {
  3.546265718654707*^9, 3.5462657557808304`*^9}, {3.546265858088682*^9, 
  3.546265861238862*^9}, {3.5462659993107595`*^9, 3.5462660048110743`*^9}, {
  3.546266130868284*^9, 3.5462661387777367`*^9}, {3.5462663060243025`*^9, 
  3.5462663075483894`*^9}, {3.546266370795007*^9, 3.5462663831637144`*^9}, {
  3.546266419112771*^9, 3.5462664536607466`*^9}, {3.546266509217924*^9, 
  3.546266537971569*^9}, {3.547819560706284*^9, 3.547819575619788*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
HaPgDLYkuK4eSv83ToCVWZkJ27UEKJxXCb09ScDhiNkWsfQ4EJymfomfJuDC
jFM2z8bvkPYtaCZ1lgAL8R2/W0yjYXpNaujT/whIMecJc8mKgLSPq99tWSDg
0jbLHTM7wmHRIqfEcZEAVWvlwD+VQdApeU8teIkAy/fqQrec/YDYvoX9xTIB
IqU/9jWdfgf5kps3KqwQ4Di3eyHq61Moqtqlm0pqsX0Xdl4cug0BMvdbJ0kd
2d6uomh3DS2FvcIWSS0Ehbuyf7hi1TrDqGpSH3JdZR+0+BqnWBXGzEkdzpK1
0ljvi8Tfbtsi8jziYYy00u5AtCu6pTBK2vMp6LL2Y5fP2E8xUW8m7V2uWj9X
PPQVE2qiP70h/VERKdOV/hCFKQWvDrDNE1BWc2fBXiEGP7zN2nRmjgCB0SIl
n/5Y9PDXUr04QwC3ceu1Z17xuKkmv1h8igCmMft3NblEZKZQg/MmCNhv8jR5
5G4yblcUqNhOEGC4y9aGpygF5dtH9NTpBHjwrY8REkhDU4fbp+TGCKAcvCBf
kv8LxbclmllRCHB1/9x8Y1Mmnqx99Dmhh4ADvn1vm25m4XAyn252B/m8mE/z
0Y25ePDQ1tN7Gwhw29f/a6dJHgrq/wp895eMr9miRmdyPqqFuT7NLCf1dS+O
ln0FeETluNrN3wRs1hXsDiovwD8FM8Wnssn6KWspULEsRAPX9eozaQS8Os2c
VIkoQuuDOuYlsWT/NOy36+f/gyL2CQICPgQscbYp56T+QfdbBq/t3hDgYn3+
vf2FUvS+rawWQvbXEcbreufXZbhukwYaOZL1wu8dUj5XgewbTTcE6REwM+bb
+ci/kowPy/JdbQKq7JmcrLJVyO74NnDzKZKrzky8CLSsxsyt2uN/5Qi4+u7a
u9j6GuS7uj2dhZsA5y9lvLq19ZgZ+F7vdh4TWmi8uXHbGjBIpu+KagoTJi/W
2QxbNaAutyEx9o0J7ipF6zewNOJFEQnpeG8mXNKTsmUcaEKxhor62WtM2JYu
i79ftmAvZeFrJTlvt2tZ84jVt6Dq/DA1bYgBT/rZxW9sa0XJT5bstq0M+Fs2
UeiQ1Io/vPw3GOUwwP/fqlvdzW04FX6hiMONAf/C3xyw2NaJr+13JNAW6ZBq
IrhidqsTbSbVuH2odDj1XpxfJrMTV38WX1pppQMPeHTLXOxCyf9EWdRS6WC1
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
k9x/LRMGInXYvzrE7BuDiSfuZOhH3anD2eR3x7UGmCjst3lXY3Ydpg3kPl9f
w8R757jXDl6qx+VnzufUI5gYsiWsJ/9lA15XWn2u8iQTtytxW48NN2FCTBt7
zEEmSrb83mh6qBkNAk4nX9zFxKfaAlGZT5rRduridpH1TLzIL9S6srkFz/B3
Jr+sY+CDs29eEydbMVxzt0v0FQYO/JCwGn7fjp6b5w2DNRgo+cvgp0BrO/rY
9QbdkGfg8L7eOGHRDjx0R/utJT8D5SQSltNSOtCqXEf0Uj0d2TmGUkcaOtGj
JSC8VJmOIG+1yMPZg6w8GitaB+h46YHjvd0Xe1Bd57hE3DY6OrKO2HME9qDy
JkJ+YJqG6y6c9dER7cU4x9VPTWNp6BMQNXdRsA9rDtfZfWWjYY3elIzArn5s
6T3X4jNOxY3iQ1w7TvWjbZhYj34nFbcUG3BusOzHpzu0LtslU9HqRnjUp+/9
+GMwyLxAn4qVlN72u3spKEexFlodOYZHbTM3z0kOoNeSJZer1xh+Wr9357nT
A3jDWPN3rcMYGpQma7tbDqDKM0oXq9oYsomKq3yMHsAlX3fWH/2jeH4t5ys9
kUH8ZJsgwyI4ih6z1u/3cg/h4KqdFaO3hlFhUXOujuQOJTPOJHfNYXyzyeX5
06lh7A/UUCGkh9HQt/Hjet4RvNblrWpADGFS8GrLL1ojOCE/nmjiMIQuwndP
deEI9sVO43X7QTS5dKLhXvgoFtWEqIfqDCKv0OAv9+xRtEtInEyVGUSRHwmL
N5tGUc/MN9uZMYDCr6Rm4teP4fLZCa1rVgNYtNvvsQTp1+WpTV+rL1PQtPvt
yDdFKrKJl74aPkjB1G3Pbo9cpOLcefmrfVwULLSz9Zi3oaLonshox/J+vKMV
neYfQkUXaaiQUOzHR1/TE/1nqbiLP8t6dEsf+h5g8/xC5s3f0Py+0nAv6o1e
HhzOp2HD8491tp978RmP9pWlBhruOZD/R2ZdL3byFrcGLNLwrKLy+M7uboxj
Db3sok3HV2riu8496cSErF2OLUN0dE4KNv50pBOtXcxLy2foGLfmRVUGowMH
HiiEea9loHPvQ3a3ax2oqtRn77+Hgfpabbz7jrdjJVvZzAtrBg5NSYnI/WtD
s9hH8ZtcGLjkU9jJH9eG3hpHhe1eMdDuHa+kjUAbfnH83hv9jYFfz7gZGxIt
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
UGyTmCTn4PPOELciDVn4H3Qp604=
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Frame->True,
  FrameTicks->None,
  ImageSize->500,
  PlotRange->{{-1.025, 1.025}, {-1.025, 1.025}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->None]], "Output",
 CellChangeTimes->{
  3.544271465953125*^9, 3.5442826950872583`*^9, 3.544283521803544*^9, {
   3.5455752640388083`*^9, 3.5455752662169333`*^9}, {3.546265701885748*^9, 
   3.5462657566978827`*^9}, 3.5462659120017653`*^9, 3.5462659618276157`*^9, 
   3.54626600614215*^9, {3.5462661263770275`*^9, 3.546266144669073*^9}, {
   3.546266255310402*^9, 3.5462662762776012`*^9}, 3.5462663085244455`*^9, 
   3.5462663722800922`*^9, {3.54626642294299*^9, 3.5462664549328194`*^9}, {
   3.546266514717239*^9, 3.5462665383425903`*^9}, 3.5463525225478306`*^9, 
   3.546354860236586*^9, 3.546365257065095*^9, 3.546383048627936*^9, 
   3.546770331364913*^9, 3.5478111930196657`*^9, 3.5478141747104373`*^9, 
   3.547814631226436*^9, 3.547815691315649*^9, 3.547818177134367*^9, {
   3.547819542314002*^9, 3.5478195770549793`*^9}, 3.5478554699205275`*^9, 
   3.5522136417568693`*^9, 3.5522142877988696`*^9, 3.552216232937043*^9, 
   3.5522170953578596`*^9, 3.5522172119468594`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["I",
     FontSlant->"Plain"], "par"], TraditionalForm]]],
 "vs. ",
 StyleBox["\[Theta]",
  FontVariations->{"CompatibilityType"->0}]
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IPolarPar", " ", "=", " ", 
  RowBox[{"PolarPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     FractionBox[
      RowBox[{"Ipar", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "NormFactor"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", 
      RowBox[{"\[Pi]", "*", ".001"}], ",", 
      RowBox[{"1.999", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.54427141925*^9, 3.544271420359375*^9}, {
  3.546265799873352*^9, 3.546265803766575*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Frame->True,
  FrameTicks->None,
  ImageSize->500,
  PlotRange->{{-1.025, 1.025}, {-1.025, 1.025}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->None]], "Output",
 CellChangeTimes->{3.5442715088125*^9, 3.5442827113341875`*^9, 
  3.5442835381394787`*^9, 3.545575269011093*^9, 3.5462658049096403`*^9, 
  3.5462662895123577`*^9, 3.546352522781831*^9, 3.5463548604886007`*^9, 
  3.546365257299095*^9, 3.5463830488775363`*^9, 3.5467703316169276`*^9, 
  3.547811193908866*^9, 3.5478141755684376`*^9, 3.547818178054761*^9, 
  3.547819544887985*^9, 3.547855470622529*^9, 3.5522136424478693`*^9, 
  3.5522142885118694`*^9, 3.552216233824398*^9, 3.552217096108859*^9, 
  3.5522172126198597`*^9}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["I",
     FontSlant->"Plain"], "unpol"], TraditionalForm]]],
 "vs. ",
 StyleBox["\[Theta]",
  FontVariations->{"CompatibilityType"->0}]
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IPolarUnpol", " ", "=", " ", 
  RowBox[{"PolarPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     FractionBox[
      RowBox[{"Iunpol", "[", 
       RowBox[{"r", ",", "\[Theta]"}], "]"}], "NormFactor"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", 
      RowBox[{"\[Pi]", "*", ".001"}], ",", 
      RowBox[{"1.999", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.54427142325*^9, 3.544271424796875*^9}, {
  3.546265814113167*^9, 3.546265817456358*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}}, {}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
+29BeNkrO/T+/783PKnx/35viP8Hvo+Hgg==
      "]]}}, {}, {{{}, {}, {}, {}}, {}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction:>Identity,
  Frame->True,
  FrameTicks->None,
  ImageSize->500,
  PlotRange->{{-1.025, 1.025}, {-1.025, 1.025}},
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->None]], "Output",
 CellChangeTimes->{3.544271580578125*^9, 3.5442827437240405`*^9, 
  3.5442835706103354`*^9, 3.545575271596241*^9, 3.546265818496417*^9, 
  3.546266293482585*^9, 3.5463525231718316`*^9, 3.5463548609466267`*^9, 
  3.5463652576890955`*^9, 3.5463830492831373`*^9, 3.5467703320599527`*^9, 
  3.5478111952660656`*^9, 3.5478141769256372`*^9, 3.5478181793963523`*^9, 
  3.547819548709961*^9, 3.547855471932931*^9, 3.5522136437598696`*^9, 
  3.5522142898658695`*^9, 3.5522162353340015`*^9, 3.552217097436859*^9, 
  3.552217213856859*^9}]
}, Open  ]],

Cell["\<\
All three on the same plot.  The first expression creates a legend for the \
plot.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"IPolarLegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(perp\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(par\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(unpol\)]\)\>\""}], "}"}]}], "}"}], 
     ",", " ", 
     RowBox[{"LegendPosition", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{".63", ",", ".6"}], "}"}]}], ",", " ", 
     RowBox[{"LegendSize", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.25"}], "}"}]}], ",", " ", 
     RowBox[{"LegendShadow", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"IPolarPerp", ",", "IPolarPar", ",", "IPolarUnpol", ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "None", ",", "None", ",", "\"\<Normalized Phase Functions\>\"", ",", " ",
       "None"}], "}"}]}]}], " ", "]"}]}], "Input",
 CellChangeTimes->{{3.54427144571875*^9, 3.54427144909375*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}}, {}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
HaPgDLYkuK4eSv83ToCVWZkJ27UEKJxXCb09ScDhiNkWsfQ4EJymfomfJuDC
jFM2z8bvkPYtaCZ1lgAL8R2/W0yjYXpNaujT/whIMecJc8mKgLSPq99tWSDg
0jbLHTM7wmHRIqfEcZEAVWvlwD+VQdApeU8teIkAy/fqQrec/YDYvoX9xTIB
IqU/9jWdfgf5kps3KqwQ4Di3eyHq61Moqtqlm0pqsX0Xdl4cug0BMvdbJ0kd
2d6uomh3DS2FvcIWSS0Ehbuyf7hi1TrDqGpSH3JdZR+0+BqnWBXGzEkdzpK1
0ljvi8Tfbtsi8jziYYy00u5AtCu6pTBK2vMp6LL2Y5fP2E8xUW8m7V2uWj9X
PPQVE2qiP70h/VERKdOV/hCFKQWvDrDNE1BWc2fBXiEGP7zN2nRmjgCB0SIl
n/5Y9PDXUr04QwC3ceu1Z17xuKkmv1h8igCmMft3NblEZKZQg/MmCNhv8jR5
5G4yblcUqNhOEGC4y9aGpygF5dtH9NTpBHjwrY8REkhDU4fbp+TGCKAcvCBf
kv8LxbclmllRCHB1/9x8Y1Mmnqx99Dmhh4ADvn1vm25m4XAyn252B/m8mE/z
0Y25ePDQ1tN7Gwhw29f/a6dJHgrq/wp895eMr9miRmdyPqqFuT7NLCf1dS+O
ln0FeETluNrN3wRs1hXsDiovwD8FM8Wnssn6KWspULEsRAPX9eozaQS8Os2c
VIkoQuuDOuYlsWT/NOy36+f/gyL2CQICPgQscbYp56T+QfdbBq/t3hDgYn3+
vf2FUvS+rawWQvbXEcbreufXZbhukwYaOZL1wu8dUj5XgewbTTcE6REwM+bb
+ci/kowPy/JdbQKq7JmcrLJVyO74NnDzKZKrzky8CLSsxsyt2uN/5Qi4+u7a
u9j6GuS7uj2dhZsA5y9lvLq19ZgZ+F7vdh4TWmi8uXHbGjBIpu+KagoTJi/W
2QxbNaAutyEx9o0J7ipF6zewNOJFEQnpeG8mXNKTsmUcaEKxhor62WtM2JYu
i79ftmAvZeFrJTlvt2tZ84jVt6Dq/DA1bYgBT/rZxW9sa0XJT5bstq0M+Fs2
UeiQ1Io/vPw3GOUwwP/fqlvdzW04FX6hiMONAf/C3xyw2NaJr+13JNAW6ZBq
IrhidqsTbSbVuH2odDj1XpxfJrMTV38WX1pppQMPeHTLXOxCyf9EWdRS6WC1
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
k9x/LRMGInXYvzrE7BuDiSfuZOhH3anD2eR3x7UGmCjst3lXY3Ydpg3kPl9f
w8R757jXDl6qx+VnzufUI5gYsiWsJ/9lA15XWn2u8iQTtytxW48NN2FCTBt7
zEEmSrb83mh6qBkNAk4nX9zFxKfaAlGZT5rRduridpH1TLzIL9S6srkFz/B3
Jr+sY+CDs29eEydbMVxzt0v0FQYO/JCwGn7fjp6b5w2DNRgo+cvgp0BrO/rY
9QbdkGfg8L7eOGHRDjx0R/utJT8D5SQSltNSOtCqXEf0Uj0d2TmGUkcaOtGj
JSC8VJmOIG+1yMPZg6w8GitaB+h46YHjvd0Xe1Bd57hE3DY6OrKO2HME9qDy
JkJ+YJqG6y6c9dER7cU4x9VPTWNp6BMQNXdRsA9rDtfZfWWjYY3elIzArn5s
6T3X4jNOxY3iQ1w7TvWjbZhYj34nFbcUG3BusOzHpzu0LtslU9HqRnjUp+/9
+GMwyLxAn4qVlN72u3spKEexFlodOYZHbTM3z0kOoNeSJZer1xh+Wr9357nT
A3jDWPN3rcMYGpQma7tbDqDKM0oXq9oYsomKq3yMHsAlX3fWH/2jeH4t5ys9
kUH8ZJsgwyI4ih6z1u/3cg/h4KqdFaO3hlFhUXOujuQOJTPOJHfNYXyzyeX5
06lh7A/UUCGkh9HQt/Hjet4RvNblrWpADGFS8GrLL1ojOCE/nmjiMIQuwndP
deEI9sVO43X7QTS5dKLhXvgoFtWEqIfqDCKv0OAv9+xRtEtInEyVGUSRHwmL
N5tGUc/MN9uZMYDCr6Rm4teP4fLZCa1rVgNYtNvvsQTp1+WpTV+rL1PQtPvt
yDdFKrKJl74aPkjB1G3Pbo9cpOLcefmrfVwULLSz9Zi3oaLonshox/J+vKMV
neYfQkUXaaiQUOzHR1/TE/1nqbiLP8t6dEsf+h5g8/xC5s3f0Py+0nAv6o1e
HhzOp2HD8491tp978RmP9pWlBhruOZD/R2ZdL3byFrcGLNLwrKLy+M7uboxj
Db3sok3HV2riu8496cSErF2OLUN0dE4KNv50pBOtXcxLy2foGLfmRVUGowMH
HiiEea9loHPvQ3a3ax2oqtRn77+Hgfpabbz7jrdjJVvZzAtrBg5NSYnI/WtD
s9hH8ZtcGLjkU9jJH9eG3hpHhe1eMdDuHa+kjUAbfnH83hv9jYFfz7gZGxIt
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
UGyTmCTn4PPOELciDVn4H3Qp604=
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}, {{{}, {}}, {}, {{}, {}, 
     {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
+29BeNkrO/T+/783PKnx/35viP8Hvo+Hgg==
       "]]}}, {}, {{{}, {}, {}, {}}, {}}}},
  AspectRatio->1,
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None, 
    FormBox["\"Normalized Phase Functions\"", TraditionalForm], None},
  FrameTicks->None,
  ImageSize->500,
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->Scaled[0.02],
  Ticks->None]], "Output",
 CellChangeTimes->{3.544274809734375*^9, 3.544282743840047*^9, 
  3.5442835707103415`*^9, 3.54557527385437*^9, 3.5462658216896*^9, 
  3.546266399627656*^9, 3.5462665473911076`*^9, 3.5463525232030315`*^9, 
  3.546354861025631*^9, 3.546365257720296*^9, 3.5463830493143373`*^9, 
  3.546770332100955*^9, 3.5478111953284655`*^9, 3.5478141769724374`*^9, 
  3.547818179474352*^9, 3.547855471979731*^9, 3.55221364380087*^9, 
  3.5522142899228697`*^9, 3.552216235422037*^9, 3.5522170975188594`*^9, 
  3.5522172139048595`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Log-polar plots of scattered intensity vs. angle.", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
Begin by defining a few labels and some additional graphics to make the polar \
plots look good.  Note that I normalize the phase functions to the peak value \
(which is the same for all polarization states and occurs in the forward \
direction where \[Theta] = 0).\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"MySpokes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", " ", "Degree"}], "]"}], ",", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", " ", "Degree"}], "]"}]}], "}"}]}], "}"}], 
       "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "345", ",", " ", "30"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogRings", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.01", ",", "0.01"}], "}"}], "]"}], ",", 
        RowBox[{"Circle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"Log", "[", 
           RowBox[{"10", ",", "i"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1.105171", ",", "10", ",", "1.1105171`"}], "}"}]}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogNormFactor", " ", "=", " ", 
   RowBox[{"NLimit", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"Iperp", "[", 
        RowBox[{"r", ",", " ", "\[Phi]"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"\[Phi]", "\[Rule]", " ", "0.0"}], ",", " ", 
     RowBox[{"WorkingPrecision", "\[Rule]", " ", "20"}], ",", " ", 
     RowBox[{"Terms", " ", "\[Rule]", "  ", "6"}]}], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172140208597`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"PolarPlot", ",", " ", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", " ", "500"}], ",", "  ", 
    RowBox[{"PlotPoints", "\[Rule]", "30"}], ",", "  ", 
    RowBox[{"AspectRatio", "\[Rule]", " ", "1"}], ",", " ", 
    RowBox[{"FrameTicks", "\[Rule]", " ", "None"}], ",", " ", 
    RowBox[{"Ticks", "\[Rule]", " ", "None"}], ",", " ", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}]}], " ", "]"}], 
  ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PerpMinValue", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"Iperp", "[", 
        RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "NormFactor"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "  ", 
        RowBox[{".75", "\[Pi]"}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParMinValue", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"Ipar", "[", 
        RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "NormFactor"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "  ", 
        RowBox[{".75", "\[Pi]"}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnpolMinValue", " ", "=", " ", 
   RowBox[{
    RowBox[{"FindMinimum", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"Iunpol", "[", 
        RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "NormFactor"], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "  ", 
        RowBox[{".75", "\[Pi]"}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}], "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}]}], "Input"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["I",
     FontSlant->"Plain"], "perp"], TraditionalForm]]],
 "vs. ",
 StyleBox["\[Theta]",
  FontVariations->{"CompatibilityType"->0}]
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"ILogPolarPerp", " ", "=", " ", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       FractionBox[
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{
           RowBox[{"Iperp", "[", 
            RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "  ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Iperp", "[", 
              RowBox[{"r", ",", " ", "PerpMinValue"}], "]"}]}], ")"}]}]}], 
         "]"}], "LogNormFactor"], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(-0.02531356345416569`\\)\[NoBreak] is not \
a valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172142178593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(-0.02531356345416569`\\)\[NoBreak] is not \
a valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.552217214224859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(-0.02531356345416569`\\)\[NoBreak] is not \
a valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.552217214233859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(General \
:: ivar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172142428594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.552217214259859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172142688594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.552217214278859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NLimit :: \
noise\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172142808595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.552217214705859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172147078595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172147088594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172147108593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172147148595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(\\(\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
ComplexInfinity\\)\\n\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172147258596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(\\(\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
ComplexInfinity\\)\\n\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.552217214726859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282746252185*^9, 3.5442835730344744`*^9, 
  3.5463525236866326`*^9, 3.5463548611886406`*^9, 3.546365257813896*^9, 
  3.5463830494391375`*^9, 3.546770332373971*^9, 3.5478111956404657`*^9, 
  3.5478141772688375`*^9, 3.5478181797551503`*^9, 3.547855472463332*^9, 
  3.5522136440868697`*^9, 3.5522142901768694`*^9, 3.5522162357471666`*^9, 
  3.5522170977808595`*^9, 3.5522172147278595`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9819999999999987`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.544282750794445*^9, 3.5442835771297083`*^9, 
  3.546352524341834*^9, 3.546354861785675*^9, 3.546365258313097*^9, 
  3.5463830499851384`*^9, 3.546770332965005*^9, 3.5478111960616655`*^9, 
  3.5478141776276374`*^9, 3.547818180129548*^9, 3.547855472884533*^9, 
  3.55221364449187*^9, 3.55221429050587*^9, 3.5522162361043096`*^9, 
  3.5522170981168594`*^9, 3.5522172152138596`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"ILogPolarPerp", ",", " ", "MySpokes", ",", " ", "LogRings", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], "]"}], 
  ";"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["I",
     FontSlant->"Plain"], "par"], TraditionalForm]]],
 "vs. ",
 StyleBox["\[Theta]",
  FontVariations->{"CompatibilityType"->0}]
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"ILogPolarPar", " ", "=", " ", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       FractionBox[
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{
           RowBox[{"Ipar", "[", 
            RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "  ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Ipar", "[", 
              RowBox[{"r", ",", " ", "ParMinValue"}], "]"}]}], ")"}]}]}], 
         "]"}], "LogNormFactor"], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "  ", 
      RowBox[{"PlotStyle", "\[Rule]", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(1.570796326360526`\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.552217215271859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(1.570796326360526`\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172152738595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(1.570796326360526`\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172152748594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(General \
:: ivar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172152758594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.552217215297859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172153088593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172153248596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NLimit :: \
noise\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172153278594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157628593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.552217215764859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157658596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157678595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157688594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(\\(\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
ComplexInfinity\\)\\n\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157778597`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(\\(\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
ComplexInfinity\\)\\n\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157798595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282751190468*^9, 3.5442835773577213`*^9, 
  3.5463525243886337`*^9, 3.546354861820677*^9, 3.5463652583286967`*^9, 
  3.5463830500163383`*^9, 3.546770333007007*^9, 3.547811196155266*^9, 
  3.5478141776900377`*^9, 3.547818180207547*^9, 3.547855472946933*^9, 
  3.5522136445408697`*^9, 3.5522142905588694`*^9, 3.552216236173337*^9, 
  3.5522170981818595`*^9, 3.5522172157818594`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.983000000000004`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.544282755568718*^9, 3.5442835815709624`*^9, 
  3.5463525248878345`*^9, 3.5463548623617077`*^9, 3.546365258812298*^9, 
  3.546383050515539*^9, 3.546770333506036*^9, 3.5478111964984655`*^9, 
  3.5478141780488377`*^9, 3.547818180566345*^9, 3.5478554732901335`*^9, 
  3.5522136448378696`*^9, 3.5522142908718696`*^9, 3.552216236552489*^9, 
  3.5522170984968596`*^9, 3.5522172162628593`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"ILogPolarPar", ",", "  ", "MySpokes", ",", " ", "LogRings", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], "]"}], 
  ";"}]], "Input"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["I",
     FontSlant->"Plain"], "unpol"], TraditionalForm]]],
 "vs. ",
 StyleBox["\[Theta]",
  FontVariations->{"CompatibilityType"->0}]
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"ILogPolarUnPol", " ", "=", " ", 
    RowBox[{"PolarPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       FractionBox[
        RowBox[{"Log", "[", 
         RowBox[{"10", ",", 
          RowBox[{
           RowBox[{"Iunpol", "[", 
            RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "  ", "+", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"Iunpol", "[", 
              RowBox[{"r", ",", " ", "UnpolMinValue"}], "]"}]}], ")"}]}]}], 
         "]"}], "LogNormFactor"], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "0", ",", " ", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}],
   "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(1.5707963253509163`\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172163608594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(1.5707963253509163`\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.552217216363859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "ivar"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(1.5707963253509163`\\)\[NoBreak] is not a \
valid variable. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/ivar\\\", ButtonNote -> \
\\\"General::ivar\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172163658595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(General \
:: ivar\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172163678594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172164068594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172164148593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NLimit", "::", "noise"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot recognize a limiting value.  This may be due to  \
noise resulting from roundoff errors in which case higher WorkingPrecision,  \
fewer Terms, or a different Scale might help. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:NumericalCalculus/ref/NLimit\\\", ButtonNote -> \
\\\"NumericalCalculus`NLimit::noise\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172164258595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(NLimit :: \
noise\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172164278593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172168838596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172168858595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172168888597`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.552217216889859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172168908596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172168928595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(\\(\\((\\(\\(0.` \
\[VeryThinSpace]\\)\\) + \\(\\(0.`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
ComplexInfinity\\)\\n\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.5522172169008594`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity \
:: indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.544282756110749*^9, 3.5442835820079875`*^9, 
  3.546352524919035*^9, 3.5463548624647136`*^9, 3.5463652588434978`*^9, 
  3.5463830505467396`*^9, 3.54677033358104*^9, 3.5478111966544657`*^9, 
  3.5478141781736374`*^9, 3.547818180722344*^9, 3.547855473399334*^9, 
  3.5522136449458694`*^9, 3.55221429100587*^9, 3.5522162367165546`*^9, 
  3.5522170986408596`*^9, 3.552217216910859*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.029000000000004`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5442827644262247`*^9, 3.544283590001445*^9, 
  3.546352525418236*^9, 3.5463548630237455`*^9, 3.546365259358299*^9, 
  3.5463830510459404`*^9, 3.5467703341140704`*^9, 3.5478111970912657`*^9, 
  3.5478141786260376`*^9, 3.547818181190341*^9, 3.5478554738049345`*^9, 
  3.5522136453238697`*^9, 3.5522142913978696`*^9, 3.5522162371717367`*^9, 
  3.5522170990258594`*^9, 3.5522172173428593`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"ILogPolarUnPol", ",", " ", "MySpokes", ",", " ", "LogRings", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], "]"}], 
  ";"}]], "Input"],

Cell["\<\
All three on the same plot.  The first expression creates a legend for the \
plot.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ILogPolarLegend", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(perp\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(par\)]\)\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "0"}], "]"}], ",", 
         "\"\<\!\(\*SubscriptBox[\(I\), \(unpol\)]\)\>\""}], "}"}]}], "}"}], 
     ",", " ", 
     RowBox[{"LegendPosition", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{".63", ",", ".6"}], "}"}]}], ",", " ", 
     RowBox[{"LegendSize", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "0.25"}], "}"}]}], ",", " ", 
     RowBox[{"LegendShadow", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ShowLegend", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
     "ILogPolarPerp", ",", "ILogPolarPar", ",", "ILogPolarUnPol", ",", 
      "MySpokes", ",", " ", "LogRings", ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}], ",", " ", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "None", ",", "None", ",", "\"\<Log Phase Functions\>\"", ",", " ", 
         "None"}], "}"}]}]}], " ", "]"}], ",", " ", "ILogPolarLegend", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}]}], " ", 
   "]"}], ";"}]}], "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculate and plot the polarization ratio for unpolarized incident light\
\>", "Section",
 FontSize->15],

Cell[TextData[StyleBox["Note that this definition applies to an unpolarized \
incident beam.",
 FontColor->RGBColor[0, 0, 1]]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PolRatio", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"Iperp", "[", 
       RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], " ", "-", " ", 
      RowBox[{"Ipar", "[", 
       RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}]}], 
    RowBox[{
     RowBox[{"Iperp", "[", 
      RowBox[{"a", ",", " ", "\[Theta]"}], "]"}], " ", "+", " ", 
     RowBox[{"Ipar", "[", 
      RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.5462665539424825`*^9, 3.546266554528516*^9}}],

Cell["Plot of the polarization ratio vs. angle", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PolRatioPlot", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"PolRatio", "[", 
      RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "\[Pi]"}], "}"}], ",", " ", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", " ", "700"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
    RowBox[{"GridLines", "\[Rule]", " ", "Automatic"}], ",", " ", 
    RowBox[{"FrameLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (rad)\>\"", ",", "\"\<Polarization Ratio\>\"", ",", " ", 
       "\"\<Polarization Ratio = \!\(\*FractionBox[\(\*SubscriptBox[\(I\), \
\(perp\)]\\\  - \\\ \*SubscriptBox[\(I\), \(par\)]\), \(\*SubscriptBox[\(I\), \
\(perp\)]\\\  + \\\ \*SubscriptBox[\(I\), \(par\)]\)]\)\>\"", ",", " ", 
       "None"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.544274819890625*^9, 3.544274821453125*^9}, {
  3.546383051311141*^9, 3.546383051389141*^9}, {3.5478196634628253`*^9, 
  3.547819663977622*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 0], LineBox[CompressedData["
1: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
Yeus
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Theta] (rad)\"", TraditionalForm], 
    FormBox["\"Polarization Ratio\"", TraditionalForm], 
    FormBox[
    "\"Polarization Ratio = \\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(I\\), \
\\(perp\\)]\\\\  - \\\\ \\*SubscriptBox[\\(I\\), \\(par\\)]\\), \
\\(\\*SubscriptBox[\\(I\\), \\(perp\\)]\\\\  + \\\\ \\*SubscriptBox[\\(I\\), \
\\(par\\)]\\)]\\)\"", TraditionalForm], None},
  GridLines->Automatic,
  ImageSize->700,
  PlotRange->NCache[{{0, Pi}, {-1, 1}}, {{0, 3.141592653589793}, {-1, 1}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], Automatic}]], "Output",
 CellChangeTimes->{
  3.54427487271875*^9, 3.5442827929988585`*^9, 3.5442836175300193`*^9, 
   3.5455752783596277`*^9, 3.546266556824647*^9, 3.546352525652236*^9, 
   3.5463548632707596`*^9, 3.546365259561099*^9, 3.5463830512799406`*^9, 
   3.5467703343460836`*^9, 3.547811197840066*^9, 3.5478141793748374`*^9, 
   3.5478181819391365`*^9, {3.547819654383683*^9, 3.5478196657716103`*^9}, 
   3.5478554743977356`*^9, 3.5522136459098697`*^9, 3.55221429202687*^9, 
   3.552216237814994*^9, 3.5522170996368594`*^9, 3.5522172179138594`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.5467743424992094`*^9, {3.546774534360183*^9, 3.5467745346852016`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.546268636824905*^9, 3.5462686398220763`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["3-D Plots", "Section",
 FontSize->15],

Cell["\<\
Here are some 3 dimensional plots of the phase functions.   These plots are \
handy because they reveal the asymmetry of the surfaces when a completely \
polarized input plane wave is incident.  The unpolarized case degenerates \
into a symmetric surface (about the optical axis).  This first few cells \
contain the amplitude matrix and intensity functions and were actually \
defined earlier for the 2D plots.  They are included here in case the cells \
for the 2D plots have not been evaluated.  Also included are the two possible \
normalizing factors for the unpolarized case (see above).  \
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S1", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"l", "=", "1"}], 
    RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
      RowBox[{"l", " ", 
       RowBox[{"(", 
        RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"an", "[", 
        RowBox[{"l", ",", "a"}], "]"}], "*", 
       RowBox[{"pi", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"bn", "[", 
        RowBox[{"l", ",", "a"}], "]"}], "*", 
       RowBox[{"\[Tau]", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}]}]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"S2", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], ":=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"l", "=", "1"}], 
    RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
      RowBox[{"l", " ", 
       RowBox[{"(", 
        RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"an", "[", 
        RowBox[{"l", ",", " ", "a"}], "]"}], "*", 
       RowBox[{"\[Tau]", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"bn", "[", 
        RowBox[{"l", ",", "a"}], "]"}], "*", 
       RowBox[{"pi", "[", 
        RowBox[{"l", ",", "\[Theta]"}], "]"}]}]}], " ", ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.54427642559375*^9, 3.54427642721875*^9}, 
   3.546269138507346*^9, {3.5463562291623363`*^9, 3.5463562510155387`*^9}, {
   3.546356376377342*^9, 3.5463564095832415`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S1", "[", 
    RowBox[{"a_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
         RowBox[{"l", " ", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"an", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", 
          RowBox[{"pi", "[", 
           RowBox[{"l", ",", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"bn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", " ", 
          RowBox[{"\[Tau]", "[", 
           RowBox[{"l", ",", "\[Theta]1"}], "]"}]}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"\[Theta]1", "\[Rule]", " ", "\[Theta]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S2", "[", 
    RowBox[{"a_", ",", "\[Theta]_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
         RowBox[{"l", " ", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"an", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", " ", 
          RowBox[{"\[Tau]", "[", 
           RowBox[{"l", ",", "\[Theta]1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"bn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", 
          RowBox[{"pi", "[", 
           RowBox[{"l", ",", "\[Theta]"}], "]"}]}]}], " ", ")"}]}]}], ")"}], "/.", 
    RowBox[{"\[Theta]1", "\[Rule]", " ", "\[Theta]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AmpMatrix", "[", 
   RowBox[{"a_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S2", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"S1", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5462533482326565`*^9, 3.5462534005436487`*^9}}],

Cell[TextData[{
 "These are the 3D extensions of the intensity functions.  The \[Phi] \
dependence is on ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["sin", "2"], TraditionalForm]]],
 "(\[Phi]) for the perpendicular case and on ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cos", "2"], TraditionalForm]]],
 "(\[Phi]) for the parallel case.   "
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Iperp3D", "[", 
   RowBox[{"a_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"S1", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], " ", 
     RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ")"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ipar3D", "[", 
   RowBox[{"a_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"S2", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], " ", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ")"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Iunpol3D", "[", 
   RowBox[{"a_", ",", "\[Theta]_", ",", "\[Phi]_"}], "]"}], ":=", " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Iperp3D", "[", 
     RowBox[{"a", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", "+", " ", 
    RowBox[{"Ipar3D", "[", 
     RowBox[{"a", ",", "\[Theta]", ",", "\[Phi]"}], "]"}]}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Norma2", "[", "a_", "]"}], ":=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"l", "=", "1"}], 
    RowBox[{"LastTerm", "[", "a", "]"}]], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"l", " ", "+", " ", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Abs", "[", 
         RowBox[{"an", "[", 
          RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"], " ", "+", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"Abs", "[", 
         RowBox[{"bn", "[", 
          RowBox[{"l", ",", "a"}], "]"}], "]"}], ")"}], "2"]}], 
     ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IunpolNorm3D", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
  " ", 
  FractionBox[
   RowBox[{
    RowBox[{"Iperp3D", "[", 
     RowBox[{"a", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], " ", "+",
     " ", 
    RowBox[{"Ipar3D", "[", 
     RowBox[{"a", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}]}], 
   RowBox[{"Norma2", "[", "a", "]"}]]}]}], "Input",
 CellChangeTimes->{{3.544274906640625*^9, 3.544274943546875*^9}, {
  3.54427640975*^9, 3.544276415125*^9}, {3.5463805112351446`*^9, 
  3.546380532294243*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "By", " ", "integrating", " ", "the", " ", "scattering", " ", "function", 
   " ", "for", " ", "the", " ", "unpolarized", " ", "case"}], ",", " ", 
  RowBox[{
  "I", " ", "can", " ", "determine", " ", "the", " ", "total", " ", "amount", 
   " ", "of", " ", "scattered", " ", "light", " ", "within", " ", "a", " ", 
   "certain", " ", "angular", " ", "region", " ", "with", " ", "respect", " ",
    "to", " ", "the", " ", 
   RowBox[{"particle", ".", "  ", "Of"}], " ", "particular", " ", "region", 
   " ", "is", " ", "the", " ", "fraction", " ", "of", " ", "the", " ", 
   "scattered", " ", "light", " ", "that", " ", "is", " ", "inside", " ", 
   "the", " ", "exit", " ", 
   RowBox[{"code", ".", "  ", "This"}], " ", "assumes", " ", "that", " ", 
   "the", " ", "light", " ", "is", " ", "normal", " ", "to", " ", "the", " ", 
   "interface", " ", "and", " ", "approaching", " ", "a", " ", 
   RowBox[{"particle", "."}]}]}]], "Input",
 CellChangeTimes->{{3.546381274753323*^9, 3.546381380051707*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{"This", " ", "can", " ", "then", " ", "be", " ", "modified", " ", 
  "to", " ", "deal", " ", "with", " ", "light", " ", "approaching", " ", 
  "the", " ", "particle", " ", "from", " ", "an", " ", "angle", " ", "and", 
  " ", "therefor", " ", "the", " ", "criticale", " ", "angles", " ", "will", 
  " ", 
  RowBox[{"change", "."}]}]], "Input",
 CellChangeTimes->{{3.546381343830854*^9, 3.546381394333437*^9}},
 EmphasizeSyntaxErrors->True],

Cell["\<\
Values required to center the particle at the origin.  Note there is no need \
to consider the \[Phi] dimension here so I use the 2D equations which \
evaluate more quickly. \
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"NormFactor", " ", "=", " ", 
  RowBox[{"NLimit", "[", 
   RowBox[{
    RowBox[{"Iperp", "[", 
     RowBox[{"r", ",", " ", "\[Phi]"}], "]"}], ",", " ", 
    RowBox[{"\[Phi]", "\[Rule]", " ", "0.01"}], ",", " ", 
    RowBox[{"WorkingPrecision", "\[Rule]", " ", "20"}], ",", " ", 
    RowBox[{"Terms", " ", "\[Rule]", "  ", "6"}]}], "]"}]}], "\n", 
 RowBox[{"LogNormFactor", " ", "=", " ", 
  RowBox[{"NLimit", "[", 
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      RowBox[{"Iperp", "[", 
       RowBox[{"r", ",", " ", "\[Phi]"}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"\[Phi]", "\[Rule]", " ", "0.01"}], ",", " ", 
    RowBox[{"WorkingPrecision", "\[Rule]", " ", "20"}], ",", " ", 
    RowBox[{"Terms", " ", "\[Rule]", "  ", "6"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.544275079703125*^9, 3.54427508371875*^9}, 
   3.544275439046875*^9, {3.5462665703524213`*^9, 3.5462665745046587`*^9}, {
   3.5467762629498453`*^9, 3.5467762674591026`*^9}, {3.547810515675025*^9, 
   3.5478105184207134`*^9}}],

Cell[BoxData["1.8519451124396067`*^-26"], "Output",
 CellChangeTimes->{
  3.544275439875*^9, 3.544276435453125*^9, 3.5442827934348836`*^9, 
   3.5442836178510375`*^9, 3.5455752837099333`*^9, {3.5462665646660957`*^9, 
   3.546266574768674*^9}, 3.546352525699036*^9, 3.546353429260354*^9, 
   3.546354863328763*^9, 3.546365259607899*^9, 3.546770335816168*^9, 
   3.5467759723812256`*^9, {3.5467762500841093`*^9, 3.546776257359525*^9}, 
   3.5478113002228656`*^9, 3.5478142814612374`*^9, 3.547818283681684*^9, 
   3.547819714853692*^9, 3.5478554745069356`*^9, 3.55221364601987*^9, 
   3.5522142921508694`*^9, 3.552216237974057*^9, 3.5522170997848597`*^9, 
   3.5522172179918594`*^9}],

Cell[BoxData[
 RowBox[{"-", "25.73237188899202`"}]], "Output",
 CellChangeTimes->{
  3.544275439875*^9, 3.544276435453125*^9, 3.5442827934348836`*^9, 
   3.5442836178510375`*^9, 3.5455752837099333`*^9, {3.5462665646660957`*^9, 
   3.546266574768674*^9}, 3.546352525699036*^9, 3.546353429260354*^9, 
   3.546354863328763*^9, 3.546365259607899*^9, 3.546770335816168*^9, 
   3.5467759723812256`*^9, {3.5467762500841093`*^9, 3.546776257359525*^9}, 
   3.5478113002228656`*^9, 3.5478142814612374`*^9, 3.547818283681684*^9, 
   3.547819714853692*^9, 3.5478554745069356`*^9, 3.55221364601987*^9, 
   3.5522142921508694`*^9, 3.552216237974057*^9, 3.5522170997848597`*^9, 
   3.552217218042859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PerpMinValue", " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"], 
     "NormFactor"], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "  ", "0.01", ",", "\[Pi]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{"ParMinValue", " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"], 
     "NormFactor"], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "  ", "0.01", ",", "\[Pi]"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{"UnpolMinValue", " ", "=", " ", 
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Iperp", "[", 
       RowBox[{"r", ",", " ", "\[Theta]"}], "]"}], " ", "+", " ", 
      RowBox[{"Ipar", "[", 
       RowBox[{"r", ",", " ", "\[Theta]"}], "]"}]}], 
     RowBox[{"2", " ", "NormFactor"}]], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "  ", "0.01", ",", "\[Pi]"}], "}"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.54427544315625*^9, 3.544275447296875*^9}, {
  3.54626728296218*^9, 3.5462672886165037`*^9}, {3.5467760067111893`*^9, 
  3.5467760109144297`*^9}, {3.546776240041535*^9, 3.5467762419616446`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.999999999999911`", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", "0.01`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.546776235949301*^9, 3.546776242477674*^9}, 
   3.5478113003320656`*^9, 3.5478142815704374`*^9, 3.547818283790883*^9, 
   3.5478197201264586`*^9, 3.5478554745849357`*^9, 3.55221364610487*^9, 
   3.5522142922388697`*^9, 3.5522162380670943`*^9, 3.5522170998788595`*^9, 
   3.5522172180908594`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.3688126635242304`*^-17", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", "1.5707963312272528`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.546776235949301*^9, 3.546776242477674*^9}, 
   3.5478113003320656`*^9, 3.5478142815704374`*^9, 3.547818283790883*^9, 
   3.5478197201264586`*^9, 3.5478554745849357`*^9, 3.55221364610487*^9, 
   3.5522142922388697`*^9, 3.5522162380670943`*^9, 3.5522170998788595`*^9, 
   3.5522172181248593`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5000000001477852`", ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", "1.5707963310775928`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.546776235949301*^9, 3.546776242477674*^9}, 
   3.5478113003320656`*^9, 3.5478142815704374`*^9, 3.547818283790883*^9, 
   3.5478197201264586`*^9, 3.5478554745849357`*^9, 3.55221364610487*^9, 
   3.5522142922388697`*^9, 3.5522162380670943`*^9, 3.5522170998788595`*^9, 
   3.5522172181908593`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PerpMinValue", "=", ".0453254"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PerpMinValue", "=", ".00683359"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnpolMinValue", "=", ".0546361"}], ";"}]}], "Input",
 CellChangeTimes->{{3.5478114442416077`*^9, 3.547811483834208*^9}}],

Cell[CellGroupData[{

Cell[" Plot the phase functions. ", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell["Start out by setting up the graphics.", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"SphericalPlot3D", ",", 
    RowBox[{"BoxRatios", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", " ", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
    RowBox[{"PlotPoints", "\[Rule]", "40"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "15"}], ",", "0", ",", "0"}], "}"}]}], ",", " ", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], " ", ",", " ", 
    RowBox[{"LightSources", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", " ", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "0", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], " ", ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], " ", "}"}]}], "}"}]}]}],
    "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.544274964953125*^9, 3.54427496515625*^9}, {
  3.544275462078125*^9, 3.54427546240625*^9}, {3.54427552653125*^9, 
  3.54427557875*^9}, {3.544275613625*^9, 3.544275636734375*^9}, {
  3.544276460140625*^9, 3.544276460546875*^9}, {3.5463540158234587`*^9, 
  3.5463540160794735`*^9}, {3.546364078006068*^9, 3.5463640887116804`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SetOptions", "::", "optnf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(LightSources\\)\[NoBreak] is not a known \
option for \[NoBreak]\\!\\(SphericalPlot3D\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/SetOptions/optnf\\\", \
ButtonNote -> \\\"SetOptions::optnf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5463652597638993`*^9, 3.546770336056182*^9, 
  3.5478113005504656`*^9, 3.547811488046262*^9, 3.5478142817264376`*^9, 
  3.5478182839624825`*^9, 3.5478197267096167`*^9, 3.547855474756536*^9, 
  3.5522136462878695`*^9, 3.5522142923798695`*^9, 3.55221623823116*^9, 
  3.5522171000248594`*^9, 3.5522172182118597`*^9}]
}, Open  ]],

Cell["\<\
These next few cells can take long when the sampling is fine (i.e., when the \
PlotPoints value is set high).  Have patience.  Also, these plots will crash \
for angular values of exactly n\[Pi] (n = 0, \[PlusMinus]1, \[PlusMinus]2, \
...).  I get around this by choosing plot ranges that only approach these \
values, rather than redefining the functions as their limiting values for all \
of these possible cases.  The latter approach, although more thorough, tends \
to extend the computation time substantially and adequate approximations can \
be made using the former by adding more digits (zeros or nines) to the \
arguments.  There are two plots for each phase function, a side view and an \
end view, and these are helpful in examining the asymmetry of the surfaces.  \
Start with the perpendicular phase function.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"S1", "[", 
   RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5463533737470284`*^9, 3.5463533754786315`*^9}, {
  3.54635342130434*^9, 3.5463534216631403`*^9}, {3.546356449738538*^9, 
  3.5463564666155033`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4.228294800807413`*^-15"}], "+", 
      RowBox[{"6.791159183486227`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1945183028803716`*^-24", "+", 
       RowBox[{"5.115646544764713`*^-24", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4.228294800807413`*^-15", "-", 
       RowBox[{"6.791159183486227`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1945183028803716`*^-24", "+", 
       RowBox[{"5.115646544764713`*^-24", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"9.598697757920696`*^-35", "+", 
       RowBox[{"7.050255862643572`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3.670497652176823`*^-45", "+", 
       RowBox[{"3.084206846358494`*^-44", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8.325843478731276`*^-56", "+", 
       RowBox[{"7.427236849375608`*^-55", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.2574594471328996`*^-66", "+", 
       RowBox[{"1.1598033665789998`*^-65", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"7", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.3590781838642929`*^-77", "+", 
       RowBox[{"1.2802552694029544`*^-76", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1043321961330435`*^-88", "+", 
       RowBox[{"1.0557927658028645`*^-87", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"9", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"6.999569913649986`*^-100", "+", 
       RowBox[{"6.762696844177998`*^-99", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"10", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3.558516140530092`*^-111", "+", 
       RowBox[{"3.466883472757552`*^-110", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"11", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.4843416890307803`*^-122", "+", 
       RowBox[{"1.454947697897938`*^-121", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"12", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"5.167963570973397`*^-134", "+", 
       RowBox[{"5.091822017909461`*^-133", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"13", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.525895369319358`*^-145", "+", 
       RowBox[{"1.5103358677073346`*^-144", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"14", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3.828255523930072`*^-157", "+", 
       RowBox[{"3.9568384929822`*^-156", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"15", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Theta]", "]"}], "3"], " ", 
  SqrtBox[
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]], "Output",
 CellChangeTimes->{
  3.546353421990741*^9, 3.5463564154785786`*^9, {3.5463564479314346`*^9, 
   3.5463564677835703`*^9}, 3.5463652604347005`*^9, 3.54677033673222*^9, 
   3.546776171291602*^9, 3.5478113053552656`*^9, 3.5478114944111433`*^9, 
   3.547811848564827*^9, 3.547814286500037*^9, 3.5478182887360516`*^9, 
   3.5478197351491623`*^9, 3.547855477486541*^9, 3.5522136503038692`*^9, 
   3.5522142965478697`*^9, 3.5522162425128717`*^9, 3.5522171041358595`*^9, 
   3.552217230910859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"S2", "[", 
   RowBox[{"r", ",", "\[Theta]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5463626511281233`*^9, 3.546362661767342*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1.`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.7044535859531375`*^-24"}], "-", 
      RowBox[{"2.4840387866878095`*^-23", " ", "\[ImaginaryI]"}]}], ")"}], 
    "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.1141474004037066`*^-15", "-", 
       RowBox[{"3.3955795917431135`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.4762592460172694`*^-24", "+", 
       RowBox[{"2.971008612599432`*^-23", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.1141474004037066`*^-15", "-", 
       RowBox[{"3.3955795917431135`*^-14", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.281943399358686`*^-25", "-", 
       RowBox[{"4.869698259116223`*^-24", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.267876344384245`*^-35", "-", 
       RowBox[{"2.992508529744349`*^-34", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4.026930841711354`*^-46", "-", 
       RowBox[{"1.0010712656195245`*^-44", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"8.17160606501718`*^-57", "-", 
       RowBox[{"2.096772462740072`*^-55", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"7", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1458443692452786`*^-67", "-", 
       RowBox[{"3.0035992666902986`*^-66", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1743536427356558`*^-78", "-", 
       RowBox[{"3.1260175536728396`*^-77", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"9", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"9.171515046288725`*^-90", "-", 
       RowBox[{"2.4698497321219243`*^-88", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"10", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"5.6361932843308353`*^-101", "-", 
       RowBox[{"1.5316198857158249`*^-99", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"11", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2.795511859420606`*^-112", "-", 
       RowBox[{"7.652204328791252`*^-111", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"12", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1423594673548501`*^-123", "-", 
       RowBox[{"3.145728881632144`*^-122", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"13", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3.911936878034146`*^-135", "-", 
       RowBox[{"1.0826218780321995`*^-133", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"14", " ", "\[Theta]"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1.1387451832433335`*^-146", "-", 
       RowBox[{"3.1648164506688763`*^-145", " ", "\[ImaginaryI]"}]}], ")"}], 
     " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"15", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Theta]", "]"}], "3"], " ", 
  SqrtBox[
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]]}]], "Output",
 CellChangeTimes->{3.5463626632805448`*^9, 3.5463652609963017`*^9, 
  3.5467703372932525`*^9, 3.5467761734457254`*^9, 3.5478113099884653`*^9, 
  3.547811499044403*^9, 3.547814291086437*^9, 3.547818293322422*^9, 
  3.547819742995912*^9, 3.547855479966945*^9, 3.5522136542828693`*^9, 
  3.5522143006858697`*^9, 3.5522162468746157`*^9, 3.552217108318859*^9, 
  3.5522172430048594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Iperp3D", "[", 
   RowBox[{"r", ",", "b", ",", "c"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5463533163701277`*^9, 3.5463533303633523`*^9}, {
  3.546362679941374*^9, 3.5463626880533886`*^9}}],

Cell[BoxData[
 RowBox[{"1.8519451124392087`*^-26", " ", 
  SuperscriptBox[
   RowBox[{"Sin", "[", "c", "]"}], "2"]}]], "Output",
 CellChangeTimes->{
  3.546353372389826*^9, {3.5463626812673764`*^9, 3.5463626899253917`*^9}, 
   3.5463652614487023`*^9, 3.5467703389943495`*^9, 3.5467761771989403`*^9, 
   3.5478113183032656`*^9, 3.547811499122404*^9, 3.5478142993388376`*^9, 
   3.547818301590369*^9, 3.5478197542746396`*^9, 3.547820005651428*^9, 
   3.5478554852397547`*^9, 3.5522136613578696`*^9, 3.5522143080548697`*^9, 
   3.552216254627716*^9, 3.552217115712859*^9, 3.5522172430818596`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Evaluate", "[", 
   FractionBox[
    RowBox[{"Log", "[", 
     RowBox[{"10", ",", 
      RowBox[{
       RowBox[{"Iperp3D", "[", 
        RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", "+", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Iperp3D", "[", 
          RowBox[{"r", ",", "PerpMinValue", ",", "\[Phi]"}], "]"}]}], 
        ")"}]}]}], "]"}], "LogNormFactor"], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.544276481828125*^9, 3.544276482828125*^9}, {
  3.546266810119135*^9, 3.546266832280402*^9}, {3.546362693638198*^9, 
  3.546362704979418*^9}, {3.5463643343207283`*^9, 3.5463643404200773`*^9}, {
  3.5478114985295963`*^9, 3.547811502788451*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.016877359140337833`"}], " ", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "-", 
    RowBox[{"1.8519451124405787`*^-26", " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "+", 
    RowBox[{"2.0000000000000004`", " ", 
     SuperscriptBox[
      RowBox[{"Abs", "[", 
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "3"]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2.9898559265067436`*^-15"}], "+", 
             RowBox[{"4.802074710760408`*^-14", " ", "\[ImaginaryI]"}]}], 
            ")"}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8.44651992218157`*^-25", "+", 
              RowBox[{"3.617308361956659`*^-24", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2.9898559265067436`*^-15", "-", 
              RowBox[{"4.802074710760408`*^-14", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8.44651992218157`*^-25", "+", 
              RowBox[{"3.617308361956659`*^-24", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6.787304275185833`*^-35", "+", 
              RowBox[{"4.985283729575481`*^-34", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2.5954337801835326`*^-45", "+", 
              RowBox[{"2.1808635756420672`*^-44", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5.887260382908679`*^-56", "+", 
              RowBox[{"5.2518495416721`*^-55", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"8.891581021347602`*^-67", "+", 
              RowBox[{"8.201048253509979`*^-66", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"7", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"9.61013399973139`*^-78", "+", 
              RowBox[{"9.052771826446393`*^-77", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"7.808807845683075`*^-89", "+", 
              RowBox[{"7.465582242269058`*^-88", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"9", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4.949443351331242`*^-100", "+", 
              RowBox[{"4.781948797627127`*^-99", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"10", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2.5162508939306092`*^-111", "+", 
              RowBox[{"2.451456813170432`*^-110", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"11", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1.0495880739115583`*^-122", "+", 
              RowBox[{"1.0288033834553882`*^-121", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"12", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3.6543020859603344`*^-134", "+", 
              RowBox[{"3.60046187745875`*^-133", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"13", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1.0789709630268693`*^-145", "+", 
              RowBox[{"1.0679687339251246`*^-144", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"14", " ", "\[Theta]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2.706985441085813`*^-157", "+", 
              RowBox[{"2.7979073304476725`*^-156", " ", "\[ImaginaryI]"}]}], 
             ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"15", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "]"}], "2"], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.5478113184592657`*^9, {3.5478114992316055`*^9, 3.5478115049256783`*^9}, 
   3.547814300836437*^9, 3.5478183031035595`*^9, 3.547820008799404*^9, 
   3.547855486128956*^9, 3.5522136626598697`*^9, 3.5522143094078693`*^9, 
   3.552216256002266*^9, 3.5522171170908594`*^9, 3.5522172473318596`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Re", "[", 
   RowBox[{"Evaluate", "[", 
    FractionBox[
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{
        RowBox[{"Iperp3D", "[", 
         RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], " ", "+", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Iperp3D", "[", 
           RowBox[{"r", ",", "PerpMinValue", ",", "\[Phi]"}], "]"}]}], 
         ")"}]}]}], "]"}], "LogNormFactor"], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.546364302670918*^9, 3.546364303785982*^9}, {
  3.546364363356389*^9, 3.5463643653335023`*^9}, {3.547811508061319*^9, 
  3.5478115105261507`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.016877359140337833`"}], " ", 
  RowBox[{"Re", "[", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", 
     RowBox[{"1.8519451124405787`*^-26", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}], "+", 
     RowBox[{"2.0000000000000004`", " ", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2.9898559265067436`*^-15"}], "+", 
               RowBox[{"4.802074710760408`*^-14", " ", "\[ImaginaryI]"}]}], 
              ")"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8.44651992218157`*^-25", "+", 
                RowBox[{"3.617308361956659`*^-24", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2.9898559265067436`*^-15", "-", 
                RowBox[{"4.802074710760408`*^-14", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8.44651992218157`*^-25", "+", 
                RowBox[{"3.617308361956659`*^-24", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"3", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"6.787304275185833`*^-35", "+", 
                RowBox[{"4.985283729575481`*^-34", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2.5954337801835326`*^-45", "+", 
                RowBox[{"2.1808635756420672`*^-44", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"5", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"5.887260382908679`*^-56", "+", 
                RowBox[{"5.2518495416721`*^-55", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"6", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"8.891581021347602`*^-67", "+", 
                RowBox[{"8.201048253509979`*^-66", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"7", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"9.61013399973139`*^-78", "+", 
                RowBox[{"9.052771826446393`*^-77", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"8", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"7.808807845683075`*^-89", "+", 
                RowBox[{"7.465582242269058`*^-88", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"9", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4.949443351331242`*^-100", "+", 
                RowBox[{"4.781948797627127`*^-99", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"10", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2.5162508939306092`*^-111", "+", 
                RowBox[{"2.451456813170432`*^-110", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"11", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1.0495880739115583`*^-122", "+", 
                RowBox[{"1.0288033834553882`*^-121", " ", "\[ImaginaryI]"}]}],
                ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"12", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3.6543020859603344`*^-134", "+", 
                RowBox[{"3.60046187745875`*^-133", " ", "\[ImaginaryI]"}]}], 
               ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"13", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1.0789709630268693`*^-145", "+", 
                RowBox[{"1.0679687339251246`*^-144", " ", "\[ImaginaryI]"}]}],
                ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"14", " ", "\[Theta]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2.706985441085813`*^-157", "+", 
                RowBox[{"2.7979073304476725`*^-156", " ", "\[ImaginaryI]"}]}],
                ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"15", " ", "\[Theta]"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}], "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"0.`", "\[VeryThinSpace]", "+", 
              RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}], "3"]}], "]"}], 
       "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Phi]", "]"}], "2"]}]}], "]"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.5478113187400656`*^9, 3.5478115109785557`*^9, 
  3.5478143009612374`*^9, 3.5478183032283587`*^9, 3.5478200089242034`*^9, 
  3.547855486222556*^9, 3.55221366275587*^9, 3.5522143095048695`*^9, 
  3.552216256118312*^9, 3.5522171171928596`*^9, 3.5522172474358597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SphericalPlotPerp", " ", "=", " ", 
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{
         RowBox[{"Iperp3D", "[", 
          RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], "+", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Iperp3D", "[", 
            RowBox[{"r", ",", "PerpMinValue", ",", "\[Phi]"}], "]"}]}], 
          ")"}]}]}], "]"}], "LogNormFactor"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0.1", ",", 
      RowBox[{"1.9", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "0.1", " ", ",", " ", 
      RowBox[{"1.9", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "4"}], ",", 
    RowBox[{"MaxRecursion", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.54427496734375*^9, 3.544274968125*^9}, {
   3.544276313890625*^9, 3.5442763166875*^9}, {3.54427647084375*^9, 
   3.544276472625*^9}, {3.544283101026477*^9, 3.544283106991818*^9}, {
   3.546267384455985*^9, 3.5462673975437336`*^9}, 3.546362724697853*^9, {
   3.546363693703303*^9, 3.5463637565648985`*^9}, {3.5463643716178617`*^9, 
   3.546364397513343*^9}, {3.5463646370686007`*^9, 3.5463646432150116`*^9}, 
   3.547811751315237*^9, {3.547811786726427*^9, 3.547811790642027*^9}, {
   3.547814654825127*^9, 3.5478146549187236`*^9}, {3.5478147001881824`*^9, 
   3.547814727939515*^9}, {3.5478173582945995`*^9, 3.5478173585598*^9}, {
   3.5478185297545066`*^9, 3.5478185364468637`*^9}, {3.5478200273788853`*^9, 
   3.5478200742877846`*^9}, {3.5478202300927815`*^9, 3.54782023037358*^9}, 
   3.5522141990628695`*^9, {3.5522142685638695`*^9, 3.5522142686668696`*^9}, 
   3.5522156555568695`*^9, {3.5522158615998697`*^9, 3.5522158664808693`*^9}, {
   3.552216212610916*^9, 3.5522162219416466`*^9}, 3.5522163384322243`*^9, 
   3.5522170806298594`*^9, {3.5522171524148593`*^9, 3.5522171977988596`*^9}, 
   3.5522172663428593`*^9, {3.552217344917859*^9, 3.552217348389859*^9}, 
   3.5522184692638597`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SphericalPlot3D", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the argument function \
(\[NoBreak]\\!\\({\\(\\(\\(\\(Im[\\(\\(\\(\\(\\(\\(-1.8519451124405787`*^-26\\\
)\\)\\\\ \\(Sin[\[Phi]]\\)\\^2\\)\\) + \\(\\(\\(Abs[\\(\\(Plus[\\(\\(\
\[LeftSkeleton] 13 \[RightSkeleton]\\)\\)]\\)\\)]\\)\\^2\\\\ \
\\(Sin[\[Phi]]\\)\\^2\\)\\)\\)\\)]\\)\\) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\
\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \\(\\(\[LeftSkeleton] 12 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\)}\\)\[NoBreak]) is less than WorkingPrecision (\[NoBreak]\\!\\(4.`\\)\
\[NoBreak]). \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/precw\\\", ButtonNote -> \
\\\"SphericalPlot3D::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5522136629268694`*^9, 3.5522142693138695`*^9, 3.55221430964487*^9, 
   3.5522156663628693`*^9, {3.5522158617308693`*^9, 3.5522158669928694`*^9}, 
   3.5522162153109956`*^9, 3.5522162562923813`*^9, 3.5522170839708595`*^9, 
   3.5522171173418593`*^9, 3.5522172475648594`*^9, 3.552217349113859*^9, 
   3.5522184701158595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SphericalPlot3D", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the argument function \
(\[NoBreak]\\!\\({\\(\\(\\(\\(1 + \
\\(\\(Re[\\(\\(\\(\\(\\(\\(-1.8519451124405787`*^-26\\)\\)\\\\ \\(Sin[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\^2\\)\\) + \\(\\(\\(Abs[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\^2\\\\ \\(Sin[\\(\\(\
\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\^2\\)\\)\\)\\)]\\)\\)\\)\\) \
\[LessEqual] 0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\[LeftSkeleton] 14 \[RightSkeleton]\\)\\), \\(\\(\\(\\(1 - \\(\
\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] 0\\)\\), \
\\(\\(\\(\\(1 - \\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \
\[LessEqual] 0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\)}\\)\[NoBreak]) is less than WorkingPrecision (\[NoBreak]\\!\\(4.`\\)\
\[NoBreak]). \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/precw\\\", ButtonNote -> \
\\\"SphericalPlot3D::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5522136629268694`*^9, 3.5522142693138695`*^9, 3.55221430964487*^9, 
   3.5522156663628693`*^9, {3.5522158617308693`*^9, 3.5522158669928694`*^9}, 
   3.5522162153109956`*^9, 3.5522162562923813`*^9, 3.5522170839708595`*^9, 
   3.5522171173418593`*^9, 3.5522172475648594`*^9, 3.552217349113859*^9, 
   3.5522184701188593`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztwTENACAQBLALTMjAEhJIfkY6FrDB0Hbus6oluSPpAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAD4zwObOwKn
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHfc1cTTxe/dm2Q3drGgYgNs2EBEAUGlCtgRGzakqAg27B2wgxVFrKio
iF2xo2LvDexiF0EQ7L2h7/ly8vu8f+TJeeZu9uZudndmzsyk+aAjdzsi1Gq1
F4taraHzt/qzQl6rzRY+SHiGjhuEj4m12uWpVjuirjZqe5/wMOFX1PbhrFa7
VG0OVtuZOiYJH6LzmzqmCA/V+S0dtwq/r/bPqf21wk/qi49RH3cKH6rP39Zx
m/AJ+q5r1P9R+uw1tZ+m9pdJ/pjaj5DsduHpwkcL3yE8S21eUJuJwu8KPyN8
jfBJ6ue65Gu+0z0/KDxc+AfhR4UPFz5K3/mhjkfU/jK1f1LykZJ/oP5H6fyo
5AvU5/uZv/e94M+nCV+q9k+o/en6/wj18YGOhyS/RPLpkp8m+ZGSzdLxsOQz
1M909XO58Pe6h0fU5jC1eUPyxyQfL/kwtX1Hx13Cw3V+V8fdwmeqz7vU/ni1
Hy18u/BxwhcJPy58qvBxwlcKHym8hq67SEdTXXu++p6q79hR8guE7xPeSfgE
/ZaduU5tPtf9DNNxrvApku/K58KHC/dhnITP07V369rt9f9Y4XuFdxC+XPgx
4d2EJ6j9ATqfo/bjhfcXPptnIbyL8PGMm/B+wmcJT9C1j+vafvr/ZL5fv+FG
yc9Smz0kO034XsmvKWu1i/V7vhY+TMcEye/QtW/q2oFq94Dwh8KHCN8T/JwZ
z7uC5ynz5yG1+VhtDtX/Dwp/JDxU+Ca1OYixVJv7JP9A8oP1//WSD2bMJJ8k
PET4QuE71eYttRmk/4/RvZwcPd9ul3ym5AdKfqzkp0bPc+bbETomC08NfubM
geMkOz163r4h+Sn8DuE56uMt9XWz8Nn6/F490xP02UD9/ld1XCX5PF17cfL4
Pqz2N2cez/mSj0t+BtMkvyXz+J8ZfL9jhQepj9d0XC38nNpMzfzbB0v2uo7r
mPPqZ2Ly7z+7GofzJX9U7W/N/HwXqs0NyePyjfBNyeN4YfBzuFhtnlH7ezKP
21PCd2Uez9HBz22M8MjgMTuP9vq9X6ifSfq/g5751zoaum4V9Z/r/Aq/hXnA
uqVPtf9M7a9X+5GSXaPz+5KfI/yNjk+Ev9Rxi+Tscy3Vz/Lq582a59KlunYA
9y/ZrMz7yYG67hUdVwp/J/lHmfeobXQv3+lYVrKtdf5Wx9LCnXX+RseSwl+p
zwuT5/eD+v9GXXumrp0r+etq8zL3rRsZrc8fk3y25COT5/oc4TOF9xK+S9de
rWtP5/4lHy35noxp8Jy9RPJxwXN5nPAXav9G5rXzquQnSX6f8GH6vvd03CP8
mdq8lnl/vkf4WuGRrHF9/r6Oe4Vf17Un69r7+V61mak2Nwm/LPmJkk8V3k9t
X2j4+R4teX/JRwkfINlLDd/PkOD94CTh/pI92/CzZp85Qb+lrz4bqja763wK
uiNUe4Dw8cL7Cp8hvI+ue67heTtJ9/Ji7s9u1nlc5v1ksvBlmferY3XtPuyR
wvvruhcbHqvP9L3HJ+9rd6j9lZn3liH6/A0d1zOGavOKntHz+n9Ytf+cKvkN
avtC7n6vF34+928+J/iZ8IyGSz5O8i31/17qZyvNy30k7yD5AZKvJPmWwvsJ
r8BvE75VeDvhw9Cfwu2FD0fXCXcQ3lP9dFA//dXP7sJbCO8lPEC4p/BAxly4
h/CBwk+g53Reht8ueTfJBwgPVJ/nqs82+nwPybeUfG/2AcnPk3wzyQ+WfBfJ
h0qeSb6h5D8JB+ENhH9g31O7uTrn6C+N0UoCc1gjwivmXmd3q81XOhfs28Lz
dI7sG6wxnZfS0U597qP2TSR7HHtCsqXZn3XR5jrWFH5R8p91XpG5J/yLzivp
aOjaVrr2R+a55L/qvDL9St5W8t+FlxBuI/wb/QpvLvyH8CHqu69u5lDhUZLf
InkP9XGQ5DtLfojk7+r8u/5fpdI7/A/eTriFcB/hnsLNhXsL76R+jlE/LdXP
Q8E2C3bOI5Wtgj3zrNrMz22vPC/8dW67Z0awjYDN8EywbkfX91L/66j/7dnf
gvU89gA22FH67ArhB4L1PPbVS+pzofo8Vv/31ufrqd0O3JvwxsK7Cu/NXqI2
G6rNzpJvInlfyXcR3lR4N+HuanOo2qyOnsZGE94GOwDbSnhb4SFqv5PaH4z+
ws5iL+Q5aA40E57PPqk2K6tNV+GOwqvq887Ce7Hm1KaV/m8vvL/wisLbqk1T
te+mNl1oL9ydZ6ff2FSfbyW8pPDKwh2FlxVeRbgT+lHfu1DHx8J/6ryW+lwo
/LvwGsJfC09Rn8+qzxnCtwu/IPyWcFvhH3Usx3yT7Cd0g/CPunbl3PP4Vsme
02czhW8Tfj5ad1wl/IDw08JXCt8v/JTwe/pd/+S2Cc+QfHy03fiqzr/o/xXQ
XzpfHq1rflH71dBDjKFwM+HLsI14ztF653PJC/1/tuQvS/azcBPJS33Pxuhg
9lCdx0Tv1cM1Pr2xPYWv0LXTc++zE4WfFd4bXRusZ9j/T0NnRdsnNwg/LvwS
+63wdOGXhW8UfiJa/yb1sVFhnXuNzg9L/izrTvJNCuvuq7G3JX9G8n/1vevo
/yvr3jzWE75a+D/J1xW+in1W5/OjbZ4x9B2ta84XvjFaH9V1z8urbTvh/3Re
Tsfmwot0XlZHW+EfdE46NhRuqf776Pui/t9UeHfhZYQ3Ee4nvLTwxsK7CS8l
/JOOUsdG7KGSt5P8T/YEyf7SuZmOFpL3lrzAztDxt2SrswZ1n+0Lz/NfJF+C
voVn6fyPzmvoaKprt9a1/7Ku2c9Zh8KrSr4tm6raLhBejrHA7tT55mibcCzP
OVqnL1Sb5fX/BWpzqc53RPsplwnfGW1XjBO+PdpP+UPzeU31v0D4Z3yC3Pvy
aPUzRbin+llFeBvh/ySfrf/rOloKH6ox7yV8hHBztemlNjl7vI6GjnUln4Nt
pWMd4bXUpqfaZPr/zeB1gO/ztO7l8+S5ik5ZoeG11j/YLzla+GPd80vSv8/o
s32DfZRjJP9I8hclfxqbTH2fnXlu76n/n2pY1+8V7IuMEP5Q7Ycm+y1Xq/25
mf2X1yTvI3lHyd8W7i/cVXiW8MHJa2ZNfc/jOk7VNZewjjPrxD30PU82bOe8
o/b7qn03tW+itg/pOELtJqj9mZnH6l212U9tuqtND3w4HftJvr7uc5269Xih
6+7QsbOu6Y7Pp2NP9KVkd+rYVfJT8Fcy2wC9dO0WdeuvThrPdsn2xk6hsiMk
3yH4eQ4X3k39Pd6wTdUnWNcNY49iT1P/0/XZLtXzPVzy99nfJH8CX1Z4SPJn
rdRm3bpthtcl30HyrfT/q8JPqv3Dar+O7nP5zGtkuuS/R6+ZFpIvyx6HXoAD
0LEzel2fr5asa55Q+z+j19Lj+BHq80q1e4y1L3yF8LS61+KqOjbDztexGeOJ
bZV5fW0Lf8BvEn5S1/4dvfYerlv/o8c31ucTdKwvvB62WOb121Vt21dz42x0
dWb7aob6eVr3MA0bh9+q4yh99gr7Ic9e8q117RbJ9tvL7JmSPyj5tpJvmWzL
rSTcTHgN4TfQocKd0MVwDw3P29V03aM6TmSdqX2nZN06U+2f4TO16yN552S9
vIPw1sl6eXV9/piOk/FN1X4vybuwBtF9fKZrD8JHz2zDbKxnun7dNurB6IfM
9saLyfvMufrspeS99zx+V/JeNEb46WTdhA/zVLIugyt5IXnfPqdunY/uxw5h
b+2AncF+jo8QzS/xDEPyvteD5yC8JvZQsi7Dh7lMbeZG23v7qs1G+myTup/P
VsKd6x6/XSqMDdBCx5Jqf38yn4Df8liyjsPH/ihZx+ErvpOsu8cLv5us0y9n
b0/Wa1cIv5esyyYIf5ysE68V/jLZNrhJeE6ybXCz8NxkG2Ny3XwSNgCc0evJ
e/KFwtOS9R2+1hvJe/hFwp8k69mJwrOT7ZYbhWck7+0XC2+pZ7dx3Tb/EbnH
BVuuQ/DYMG9XV9u1dE1z/d9F43G7jn6Modr3zmxfra8266nNBqxx4fWTbbOu
anuHjt3RW+pzrbrtw2bBz4fv6o/vktlm20jy9ereo9ZWP82T7eHtJG9X9/7Z
Tf3dqWMP9urcz7sr6zl4TWCjrqlr19a1LfR/T3xWHftL3k7y1sl+Sh/J7tcx
RPLt8Fl1HCC8odpskGzf9pJsqo5BXKv+N6rbD1pC6+AeHf3RB7qH/TP/ro10
bavkdi9Vuq8F+4zkm0jeWv8vo+se0HEQ/oTkmyb7U9vrex5gbal9b53v0zFY
eGm1vV/HYLU/GV4q8/7ZQ/ezed2+RjfhtnXb0k9rfWTJ3/1C3WuiuU5t4Gl0
tBF+RN/7QbIddapkX8EVSv6o5B8m21SnSTYP3lDyaZLPSravsobnMnbv0vqu
vzLbro2G5zU27TKS/5PZZpsTvI6fYnz0Oz7R8YU+qze8PrCHN5Xsc7gPyVvz
OfyI8K/B8xRb8efgeY0N+Rs+Yma7bnO1/UrHH/r/RPU5G25L8k90D0cn85Iv
CK+YbJNhXzUVXlK4M35MZvsK3nrlZHvrRskvzsxnfir5scmc48nqew7cluT3
aUzeTraxG2rzQ2Z76SR9/iW8GLZl8H6Av3AP9r7aj9P/bXW/c3X8hl5mX4I7
UJup+BPJNvyxkn2KrSD5dZI/n2y3HwMXpeOJmn3YlRq24fGnb+f51Ox3N23Y
R8D3vatu//cuuKNofGdhX4I2dwvPiPaL8XPuU3u209/Ux+q5/eI7CvsMfBe+
+q118/zt9Tvm66jDz6nNm9Ht8aen1o3xo+GR4ZDxv++p+7sei95D2T9H6POP
sDMknx+sK5g/f6jfuZnt1dP1+Xx4KOE/sT0z2/NfBesZ5uHR+HA6pgtfjT+h
/s/UZ9cKPyd8Fntj3boEPXKC2n4BvyP8Y/Ceis9ynGSf6XheeDL+iq4dq89u
i95/afd1sB7DZzlebT+Hz2Js1Oa1ZLt6ivCryXb4Wfp8Ab9TbbbU+QYd27Df
6nyjji6sTY3h19HPbTV8jsxjNU3yhdHjtwq2c+bnuIGuu1TH2tVz5jqe6cP4
Pnou47Fl6tZ72MmtGtaF7Alb6Xyzjp7Cz6p9SrbF4U++0Hd9L/kzwkWyXT6l
bv4GP/eOunkd5sMNup8LdT/HCn9bty++pfAmkq+W2f6/T/1M1P2M0/c9WDe/
wnxorf+v0tGa76rbp1mrZr/mH93DIuHn6vYn+I0bsW/oWK/muVlmnmOPqv23
0fPuAeFPo/mgqcLX6nsvwbbU8Vel09dn8mbmuO5Xm4+jeaUHhT+P5r/WU5t/
G+aU1tX5n4Z5p046T9axnfD3dXNy7YUX1s3JbSH8Vt2+HfZhO7W9ruE27XXP
68A98bv0Xbfq3q5n/63bv9yAPU3/T2x4DDdT+zUz+0dtJbu24f5n1u0/MQ5f
1O2Psre31+eTsBmFv6zbn8W+7aR+Nsjsk7aGm8nsZz0PB5Ds63bEp87s8/5b
XYtu7SZ568x+MeQ3/jL6ekfJO0reQbizvvMWHb2El6o4FnitUPna2Akd9flN
OnoIb6drN8/sg/eAO8zsg39Wtz/NfFgOzkz3tpr+byK8qnAzdDxcUWY+Z5mK
28EW3Vp9T9Gxk/DOatMpM8/TF84pM8+zfLBNiT25XMX/YK/iZw3VcaLw21Vs
jlje27ru99z2HvYFdgZ+AfexUvB34YN0Ljzm22S2j7mfLpltYvrn2lWC7RN8
labB/gv2/NaF1z73AidF+y0y21iMW5/MY8e47Zn5d/K9O2Rew6xf1lwePGc6
Sz449/gzH4vga8GN4PnDmK6Az8y8ymyH8UzXzvxseC7M3wXVHIZz3ryak8zT
b6q5it5cKXls4WPbVvMTXq5dNeeZ58smzxOe1c91PzvmBVwMv5G5PL+azzzr
rQrvjczP5ZOfI3Pqx7oxOn2F5H7gxrdouP9WmecHctZlDL6HrfDDcs9PuNzm
DfuA7Euzov1K9oGPon1PeJuWDcvZO5+ue/9kP3k/+lr4wYckX6Lm/ez1uvc0
9p9Pov1BfNfH6u4Tv3R63XI4nA2qfZs957No37Oe2RcF43M+WTdmH3yqbk57
x8x7EPsPemFB9FpmD/wmeq/Avl4t2MZmbqTgecKYLBF8LeMJH9q7ei7wpMzb
NTKvSdYj+uT5unUK/NKGDdu06Kn50Xs7OuO1ur83Zd5fuB90xit1Y+xRbGLa
wxG1qnQQeuqr6D7RJ8/WrVNYC7/WPa/YhxZVexHccodKV6JTvw3W0ejciwtz
RPMz26DYD19ltlOxDdDFFxbmybElfwq2J7E54b/gvtDr2AHYA9il8F9wX3+q
n7UL23LYrRg/2K7YBAvV/rma9WcZPR7YCZcU3kPo84dguwKb4PtgOwEfb3ns
BuFv0eeF22D//R1sQ2ITXl7Ynily27jYt+jkZpnHeAns1miuDLtpXvBvx9b8
M7j9T5ljn9jS2KLjC9ta36M/C48DdukVhW1O7NpFwbYuNvgvwdf+rvZrFrZX
sW3/DR4T7OEJhe1SbHK47KdqjnXCfTNWxDqnVGOIr7scNlbN+/1fda939Nif
lS7rmtlOQo6fXAp/ULPNeUM1Vthxf+jYuurn90p3bJR532f+sN//VjenSv//
1L1XM6/Qc8wlbNDUcMy3TWbfsmvV5u9Kh3bLrF+5Fh34X6UHiS9PqsYQf3sJ
tZlVc0z5psLj/73wf4VjSdg1WWXbYLP8W9hugWdqVFwTvvqy+AA1x4Vvqcb8
HWycwvER9s95de/V2Gt/FrbZ4EhvLjx/sLGvLzyf8e+uKzz3iI9PLvx88dtC
w77bosyxbTB+37WF19ffkreonuOSme0S1jsceJvKr2SNf173WsaP3qGwjsMv
3rGw3sQ33jzYj8bHbhvsm8MdbEq8tmbuoE0wzwlfuEGwz7uLvuv43Nzm9pXv
jd+NP06M6n++f7fCex1cRJ/CurJXZo6D/RBOo2thnXhAZl4DTgN+YvXgPuE7
mgfL++Jb5uZa+1V+OPcDp3lIMOcJV3xIchwEznNwclyYuMnuDcd/iQMTD0ZO
zISEKdoTC4aDHl0zR314cswaPntEMKe9R8Xhwo3AP/dO5ofhSzYMlvdUm8Ny
jwMc9pHBfCDxGnjnUcJjMsfs+V744/WCfxdcMfFIdAGcy7rBHMt+an9mbo4I
HmPXwmMC39A1mHOA0yCuTD9D1P783DwGHFL7YB5pH8lH537uAzJzo8iPycyz
wLHAj3QOFd+i79qt8D0QY92hYS4armSb8P/cSL/C8wEupW9hrgl+p0swtwOn
unfhuQTX2iOZ34ZT3bfw3GNOwu/A/xBP36nhZwo3tkXwbz8wM59F/3BT3Qvr
ULj3HoXtCvimlsFtiAUclBzTh7vqGcxfHax+Lsw9bnDF+xX+Xjjw7ZK/d6ja
XJyb2yG2smPD9zwscyyBfuB+uge3gSvuljw+5KYdFZ23RE7BYcH3QO7BXg3P
K3iQD+r2BVbM7BuA4br/iuZDiHlt2rCfQixmo8rnwk94r24fAb79j+hr4ep/
i5YTIxwVnI8Bh7xnMpcCF7N/MCYGBIeObUkMZe/kHAx4lgHBmBgKMXV+I7GS
fZJzM+CoiR8zhvDxM+rm5OH136zbNoMHayT7LMTs4PrZw/EjP67b7iJm17ry
PeHJPq3bJmFvn1u3/YNfHJP3WPQtvhB94hfnyW2INfwSPVbE9TZp2DYm7vBT
NIZX+rDusYV7+qjumB36BT+NPlfOzEnRhvySgcG/lzjLgOTxJD5zUPB8gJs6
JjkvizyhE4Nzt4i/DEzec4grkcPBuiMWcGDh9UUOzN4N5xTBlY1IvpY8sJOD
+yTX5bjkHC1iakcmtycn7NRgOXGEgYXX4/jMeV3IyWEjX4dcHfJxTg+OH5Ej
dVpwfiAxkV2T9zdyAolhsF+RE7hLw3LiDrsncwvENQYX3luIfeyYHI8jF7Fv
w22IWQ0OXgvkExK74nvJExoU7N8tjgcGxwSJ1fUNjgOynxPHYl8lVrJbchvy
HndtGBO7IVeGPYG4yaDC+wwxwn7B90Nsa/vkPslL7NfwsyPHcqQ+u6XmvNGj
o3NH4e5WaTgfBt/ij8Jz+D/JWubmItqxNgtzI9jLiwrr2TnYC4Xn7d/4E7l5
jEXY17k5kIL1m5s7wqfuVNhe+kG4Hr0Gm2Br5fZRZkv2d+E18p9wjNbvWzLn
o3mz73QmIYc9YZHORfQ6Yr6Has7X4RWi1x1+J/4nOhf7bpnKBltSbZaK9itL
eNlo/3Fd3c/2ufebpSVfOtqPwxZbtrLZsNP2yL1e8XkPzO3H4IMPyu1D4Efv
nTtHCD93z9x2E2u5S277Gb8ZHwmbAT9xQG7fCP99SG77ET8S34k9f330Ue59
dDl8z9x+XpNgXmCnaq++KHeclRhr/8K2Dfv0NtHzkzW9e/Tc2F+4X/RcZf+/
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
         "]], Polygon3DBox[CompressedData["
1:eJw1nHn8F9P3x2feM+9ZkKUUsrSpiIhKlooslSUlsidLKNJqiaSylCxttkSk
RWVLiCKplLRYyr6U4murhIhE/F7Pz2t+f7wf73vuuTPvmXnfe885r/M6U+vS
Xh17loIgaFUOgljfF2ZB0D4PgkESTgiDYKa+P5ZukgaNkP5D6b+VPk+C4H/q
6yu5o+QRGne6xreQfJnkGyQfK/lfjZsg+WCdY4uOfykNgo805jsdu0DyFWp3
kP52jW+r8Xdr/AOSd9L39xrTTfozJA+V/mTpU/V/rfYbOnad9DfrfE9ozES1
H1XfmigIrtXna8l3aPwOGv9d7N/6Vn1NNbaLztdDfc2kv0XHT1bfZOnGa8zp
OvZO6U6RrpP6hkn/ovTPqT1R+rXSX6/PT5Lv1piPpdum8ZX0Oz+o71TpBks+
UbqTJffU8c9ozFNqP67jX5NurZ7FDMn3S95B+qm6nhN4/jrmGsnTNX6a9I9x
jzrfDfr8LPke6Z+W7m6N/0Ljp6uvnXS36pytpWsn+XW1v5ZuptoP6PivpL9O
nw2S7+L56vxzdI4XJE+W/lC1O+t8l+q4w6RvIvkiyVdLPkLycI1/WX3Pa/wk
jT9QunP1+Uq/8YTkORq3Ru1npb9P8mn6rSHqO0nHnqq+XMc/mXt+ReqrpXOd
J7mdxtSRPE3yXZI/l36qxs9Q/4ecW+17db6bdPxjGjNB8iNBMXc0fsfEc6i7
9OML/Tjpp6g9XPpPdY4p6lut6+mnz1q1b9fv/aXjHpO+rvQ/a/wBGn8B96Tf
bSD9MOY19yd5hvSTJP8sOdH45ZLvZV5K/lH6lyVfqd9/SOd4VOcfK7kK46Vb
qvZm9X0p3Q8av7v6f5NcX/L5ks/RmAP1e5XV/5Pab2v8L9IfIv2F0l+ivkbS
P6vvD/Tbj/P/B14XP6hvYeD18bDG36nxqzRmPOtF1zNOfY+h05gvde999Vkj
+Tad7zCN7ZZ7jbCGLtL4QRp/B/NZcsR6kP5Ine8fydfp90ZI3iB5nsY8Lf27
Gv+p2q9K/5DkBZLfkPyM5Ackz5f8OmMl3y/5DcmvSX5K8m063xid71+d7xPW
lPRvS/+O2i9K31C6K/TpreubLflajb+X563xczXmOO5Vx8zUvVRX383Sj1bf
n2qvkP4mySMl/yb5bcmHSt5Z7TU61y4654esXcnzpXtWfR9I/l7ybMnTJa+S
/J3klyVPk/yUfusdXd/HkudIbqTz7Sr9V2rvytqT/In+j+3q+0hjPlffP2p/
UPL195P+Hl3PD+p7VX2fSr9N7fdKnj+3S3+f9IG+P1PfcH1/o/NlfEs+Xro1
uobXdb/767hWkr+U/Jrk2pJPkLyWZyy5nuS7dNz9ufc99rsv9Hsltb9Qe65+
5hmNfU/387nk1yRfpWNO0u91UHtP/oPUezx7+/xiP00S77XMl/Oka6fzD9Ax
rUKvr7L0X0k/T/rJOn6pxrwr+SXJj0t+S/JSyTMlf6bxf+s3V0p+pZifsY5f
zd4l+WCd+3J9ekXWN1L7ytxrmPNP1/ex+uyh8fvo92Odf4r0R+uc26UfoHON
krxF8jKNaaB2V32u0THPSz+UuS55sfT3SN9a7b90jk91rqPUV09yJ33ml73e
xmFr1B6qsbdI7qyxA3WO29hPJZ/N/Wn8M2XbjLEaP0/t26UfKP3ekhNspnTH
q/8SjR8m+V7pR0p/EnNXfR9L30z6R7FV+r5T+kHS/6f7eUJjDlHfH5J7aewM
Hf+M9BMkv6Lxq6V7WvIYyc9J977u9cui70HJw3T8SsmPsAdKvl3ym8wV9ljm
kvpeVHsK9ljy/ZLHSX5Iclv2Lsm/6fpO57rUflvnf0vtERrTRvrK6vtV+tNY
09L9qu+3Sn7eH0v+RfKikvfTlZK/lfyS5KmSD9P9VZa8Vu3dpDtE8k6SV0ve
mf9a53+fe9b591T/jdKv0D1vLn7jI2yj2gvVfo75x94reQz3Krm+jj9bn2Vl
P5/LdK67db2jpR8t+T61h/Ib0j/Mmtfx76j9oNpDsQ/s1fqsKNu+TdDxS3TM
culfkPykxi+X7n78Dcl/6Po+1phZut49JJ/I3il5meSGGjeRvV7fo9iPpb9U
uuE630jJoyRfoPbpOmagxh2vY25V+1d8LLVf03HnqH2a+m6U/jj1dZY8WPKT
0l2mcwzW94XSXaxzNZVcM7c/N0X9N6hvkL7Pl76L2o25Bz2/tvo0Z6/kP9T1
dMImSu6nMUeq/bKOH6LjjlBfVbVP0Wes5F7Sd9H99tX5HpLcUfqjNP4V6W+T
fKTkW/XdRfpLNLaZ5I46/0Ua01XtG9V3puSLJV/B3i35RV3Lyfq0LNn+3aXj
r9DxV+Cjsj9K7ir5csnHSt439340Uf3Xsd5yP58Jkq+V3FLnflXy3ZKPx4bq
u5uOv1K6E7An0s+VfqT6W0s+Flsl+V7JJ0o+Q/c3R/LFOuYsHTNC/Vep3Y21
K/0V0g+SfpL6L5ZcI/f/N1ny9fi7updT9DmuZP+qinQn6/Og9D25Bt3/yfjc
0l8j+XrsgPRLYvt/dXL717PKni9nafylGt9N4wdI7qvxn0q/ILb/g327Sp8F
0l+r3xuNn8K6Kfl6+mCv2N9i+wfn6Xy9db7r+a/wb9T/Is+y5Od3HXu3xt8f
ez2M1PdLzKWSnzd+wduxbT/+AbYfe7i+bB8A+9pdnzlq9w49/7mX/pIvlNxB
1zNb579I/WfqHDM1to0+R+MLsefofLMlP6xjzlJfNY09VZ9xknsX6/0VtW+S
rrPGn6L7ORMfU3Jf9i/JZ0g+R3IfyUdnnq93lP0b2OU3Y/sm2Gfsfzdsj9q9
Qvsdi2P7MvgfDXW+BjrH3swN5qCuvz/+ssZVZ8/Tsa31ObxkfzLU2EfYx9jj
JCc6PlDfV2ofis8nua+OPxyfQH13EN9g42P7J9iTp6XrofOdLf21ardX39nS
7a++GySfKflc9irWDHu5jr9e/fUlpzp/SX3rdGwjjSlL/lef1ZIPwb6ofa3G
t8RHUt+Vme3Z8Nj259/MPgi+x97Iupc6+GIaW0nyP5Jr4dtI3knyn8xHnfMV
9mvsUdnxFM++V8n29FnmvtrnaMz2zD4Nvkx1jZladvzQQ+3L2Y/Ljm9YG1eW
PPcXa/xZkdfAddKfIf050teTTBCLbz9P59458N6ySOPPjLzH/JfZZ8JX2gf7
I/klyf0lH8iepO9OOsd50jWQvF/s2Ow7na8uNoq4CF8v9PN4irWtTw32WvWV
dO9b8KHUPoD1refxAnsSMZrkqrF9lc+k31fy0zq2Fc9Qx9fCR9D4mcxxYijp
Z0h3kj6NSo4XWkn/PHsIMab0YW4fAt/hQMml3D4NvkwDyVVi+/KfhL7f/XkW
udcM9jHQtf6qz/v4jxKvwY/RMR3V3ke/WR07o76vpa/D/6lrORE7Ld0BnDN2
bPc//FOmts4V65l+Q6wh+WRd7yxssMa1k7xd+n6SW+iYL4lvdK4T9Klbcjx4
ELZHY3tKv2/Ja20G8XrZay7U8b/ps0pj6+PP6tjjmZPS1VbfLjq2Kf536PnE
3vY28V3kPQ7/40p9ZqndE3xD+g+kfzV2fD8X2x97bx1css19ILZtukXyjrnj
M36zU2BfcJnkCyL7hPgDc3TMzWpfpPOfrfu/JbfdwF60T21zsDXYkHapbRS2
CRvXSeMH5rZT2KfTU9skbBE263X1P6TfuFntWwt/5VX1DVS7S/E8+5W9N7BH
DMZX0fkeiR1PH6fz35j7f+b/Bd9ZpPbd/D57Qur/gGfPHMBPflxjhgT2l5dI
fiK2LcKHGV74gxdF9mH4P/pqTO2Snw/xK770MMlddf4zdP5WOqaN5O7cg9or
dD2PxcaXdsqNRzAnuH78zAmxbRP+Juutl/r2K9legIPMiu3LgYdM1PlW6fgX
Y+M5oyS/J3l6bDwE/OVdnqHG9mC96XqaaUyTkn0i7PWdZfsW+BgjiGV0/NTY
eA34ynvSj8Veh/arn44dC+Bf478MU18L7ld9exDL5/axLgvsZz6l8cMD+5t7
Sndpbp+H8Sem9rnwtfDhwFfwPR+QfDX2MPH6wM/DvwPneCF2LAHe8biOXanz
PR8bD2up852UGYu5WnJzySdkxqauCoy7vBTb9wR/2Ss3fofPwv2flNqnw5fD
hwNneCY2VgDeQPyBb30f59P1tdf13Zzb78Pfw57frvZR7N065lHiE+mfi43n
gPcslH44zzv0fthHcs2S/S3ilPHcb+B4hfiR2HCV2gM1/jbppmtM95L9KeKN
Hvosxt+RfjCxqX7vo9jxfCfdT1ddw1Ulr6FhsWO3a0r2J86Rvgc+Qsm/Say8
TseHiWNmcIvPY2Mf4BfE/Z/Gxgb+P/4Hu/hQ7Vv0+/2JvYk/YsdrxCtX6/Mm
tkv6Gziv9Etj44P9M/v87DvsNzOKeO6KyDHfBbq+G9U3SO07ma9qf6jxc2Pj
c/fpe7aOHVCyv18XW5l7TyI+eUXjP5I8Lzb+Vys3/oqPQbx6tfTziZUl99E5
7sA3Uvvqkv39XsQ3Gv9GbLzrXF1PTx1zbcl7BDjG6tjYAnhGd+mG5PYDsP9g
R2sl/1c2hkQsBd7xR9kx1W742rl9qIsC4zofxMaGwHeI61fGjr2WFf7WLeo7
rOTxu+bGd7GZnQv7OVD6Q0uWif3eYUzkGHCX3HgnNu1C6Zum9qHwnfApiKNf
jh07Ek+31v3dlNvvwt8CGyYeBQ8FIwbrWC3972VjHsTDYA9L+D/Am3X8Guk/
jB3/1s6Nb+MTgS+AD/XU533mp8Yfp+tpkxnbxSc6UvLhkg8q2UchDn4ndqxN
PHy09I2lP1jt89XXRr83ILdfgz9zRGqfB18HnxGc7L3Y2Ax4Gfb9ZvU1LPl5
EG9/qeOXx8Z722f2v6+V3FzXt03ja2r8bLV3lH4r8xmMWfJekqsVeOhIyVvY
7yRvZr+R/Cf+leQ/2Vsl/1cyjg5ef2doPL2O5O3El2A9+q2dC/xzOL55yXkI
8gFDQ2NW32jMXurbqvaKwFgrmGtVyS0j++ltYvvu+Ou7F/jriND4bG3Jf0t+
UHLEvUn+C9uBLx8Zd/6f5GGh8ee/ivk5IDTmtbWYnzeFxjS/43nq84F+b2xY
zHv2s9Dz/4/i+d8Yev7/Xvyf/UPPn01FfEUsR0wXFevrVslfloxdg2GDh4GL
VexT2OvQ+9X6Ir7pGzoe21jEM/1CY7bfsz7Yr7BH6vsabE3n+KNkvPsofC/m
T+TniW0mZ4C/ho3GFwKzxv/CJ5qr//4L8KCSMe0jiI1y5zCWBM5n7KbzbypZ
birdVblzKm8FxnrAfH4Fhw1sG5tnxgOwkdgmckzE09gosGAw4d/AcfEBdO7d
ysaVwJPelP7rzHPrPelnpc7ZMLcWsh9K/iTzXHozcG6CHMUOkpvr+GMk99Rn
gNrvSv8/fVfXubdJ/w7+vZ5ldY3/R8/uSOJWfCt9boqs/1bfe2v8PyUff5/a
D0pfVd+/l5yf2UXt9Wovln4esVnmtbIscL5pV+k3lvx8Xk+dU2CuLpXcROfq
njvHw/E/sB/q85Ha4/DPi/XFb3MNXA/3sl3t+6S/TM+qufR7EC9h44mLJVcj
nisZFwEvaRLaZ71cckvJe0reVfKosvGQpqF9ugvwSyRXZr2yh0puJHnXkOBE
dkzycZL3kryb5FrF+l6JOjLWCOZYX325xpyn8YervRuxlcafmhk/6UUcpb52
mfGoPpKPYQ+QvCn3Omb9ZsV6nR8YT78+sz0co74OxNOZ46FRktuH/l/Yn3j2
/D/8Fz/m3sf4T+7nv2J+xsbTWS/9I+9l7GnfZp5/7FvsV8Qt4Ov7hY5fhmTG
lx+OHc+PzIwvTomNX9ybGa+cFBsf6V3EY8SWxJjgFuBpYCPgF+Ba4GGHh44h
ahT71/vYYv3+NzrfT7n3Mfav+vouEQ8Sq0VeGxtz78OskQf0vYH1FBuPXyN9
uex9+89if2Uv+Evt0cSwxf7I2vqX/QZ/T5/PJT8u/S/sx1GFW1Cxnlk/rI2/
NXaM9JtZT1FFGFqxfvGVj8mMR+IzH8BzZM+ULpe8UZ+h+nwp+YnQuCR45sGh
fWZwR/DPhqF9VnA88MPGoWOoAUV8Xz+0jQQnAU/ZP7TN71/gCXVD28ibysZX
6oW2uRv023fo84V+fwJjdH0p8bzkHdT/Qub86OzY/nDPwt7UCB1TgZWDmddV
X6a+F6S/Jy6wtpJzO+Ahf3OvgXMTxPOVNeZvfHz8Gh2TlownTJJ8vuSoZDxg
L43fN/NaOUFyYx13rvSh5CaB8Tuw0i4lz3fwPrDSziXn7/GHwdbIfZPPOEby
xZJ3lHxU4Njh9dx5bmKIWvq92pn3iraBsbYF0rePjLlNxkbo+HLJeAbY8pv4
PJEx5hY6/6XSV8J3IV7R8zwxdl6KfNQ0jeum9u5cX+C1wRoh3iDuGEqeTH1r
YuP/B+t6DpR+r5JzWnluG4ltbB84H9Ynsu3EhoIVLsQHjowZti/wRngAPIPa
Ol+dzHvjyayZ3D4FvgTXQz6qu66jWsnnP1bX0VXyLpKPkVzObVOwJW2wp9J3
kT6X/sjAfvZdsbFK/O0ehf99duQYJI+d+1mua60WOD80Q3Jv/Df1bdL19dH5
G+E3SE5jcy2Wspdp/Exi+9hYfj8d8zV4Lz6D+heE9t2XSD4nsg+/jeepMQvZ
b9hDcucwyF3UCZxngN9ALEm+gXiD3MKlap8RGm8G+76k5P011/mvwx9X3w+h
Y9F5uXkCxKT4tm/k5jHg4/5Dfp2cmsbWChzfgZWfUTI/5GLp52t8v9jxJPEJ
uYgzS+aHbJf+R3LKatfmeokjiufN8y9r/EGSl0i/u+S/yZNq/CLJNdmf1L5P
xxyI3xR6b2aPJv4mDt9f+v0z275TNL6e5LqZbdmpgX15OCvgm/j0P+pcDfQb
OxZ74sOJ+SLs0+zP7JcHkfMq9hT8sbqSk8KGT0y8/7LPsL9gu7Bh4EvEdBfq
9wcQY5WMKeCP7x8Zi91Y+AP12KP0/XHgWA/ODXgyMd846R7KbYexv9hWbCzP
m+e+KLUNwXZgU4iV4IiA/xEzkbsEf9xV97QtcOwFxwa8khiMWO6IzHg4MR25
avDX/9TeFDg3xvxKdPzvgff3holzf+QAF6e26dhyfISb1L4tN043uPCv9+cZ
FT4s+/PBkisVNuKt1DYZW7wqsK3H5pMvAAN9Qv1n6vsv/dfHBs61wGkiP0Ge
Yg8dv09m3+V4fe2o9vUa00a69cQ80u+kvg1qN5W+kuRdJf8suZnkA3Rf7TR2
M/ZDcpzbvyGXyn4a5bYH5E7ZD6bqeq5Uu3LJeOlOOt/O2HDsW2DfAR8CPA1c
rZ7Of6q+fwmN9+4v+RTJm0LjwXAHwO+367w/cX069gauQWM2hs6dkdPHHmAX
iO3YA9n7sAPYMmwasS0x7gSdp6O+/9SxLZmfzEnJfxOrBvbF8MlYj6zLw/Bz
9P2f9I2JB3U9e0v/r+RWgXNl5DzZL9g3GuCH6ft37HPg3CWcNPYX9hlye+RA
sVfYrUM1vpO+t2v84YFjBWKG69XfMvT5mkv/Bf9VaN8CH+M69bcIvf7ZE9kL
fw2ML5OTIRezNTCev1mflZL/4n5z48/oHtK9r1P7ZZ1jP8nzQ3OLvkqdfyAP
wXyflRjrh6MxTvqV6nue+LjseOe5xHs1Oe53JT+beG96NvT6ej3xfwtHAEeJ
PZ+9/k98rNz75Wa174+8nuYkxuLJOcO9W5/aHmAXJuXOT3AvYyNzJeBMTCL2
ir3/sgey93FO9tPvJC8mPpb8k9qvJs6FrAjNTdiY2j5hp9h7Zye2FezBD0u/
gjUs+V793ljJy9hTJN8TeS5UTT13mBN/q/1G4v/+89D+z7zEaweOBvMHHwHf
YN/QXB84PxOlf5e4hL1ZY1pI3ho6Nts99domRquGvUtsm7fwH0iunHoub+Me
pVsqeVroa340dz5rvdqjdL2P5M7v/4gvFZkrtTV1foU8C/HojMS2Go7S72ov
V99TxAaB8ZFPmDOSNwTmC3wg+YXQ58T/ezFxbgmOD/m0j9T3UuhrGJ8bX+HY
0ZHX90uJcztwhMACGqT2TcAE8IUOSu2b4BNt1tglkp8M/R+QjyCHTe4avgH5
eDgF2HY4fKy9j8hxBl6DrNUPE2OLrFn2jg8S55bZQ8hXXC75opL5QazVVYlz
xaxZcnHk5Dj365Hz2V0y5/rgMJJ7JAcJHgsui6+AzwBX8+XI/uZJiXN9+OzY
omPUd0Fgm0TuE/yOeOiy2FhFk9S5CDAL9nNytmA/xGTYqhapsa5Ghb8Hxge2
RwxA7oocFnjYzYX9B1MDSyMmIHcInkZ8cXls2/954txpRY4zNQYK9nlqaNv7
WWKsDxuM74kPyl71amT+RUdiiJL5s/g6+DzkvsmBgweeSMyL/xja18bnZi+b
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
9b2aOR89JfA7wf4Pjnrevw==
         "]], Polygon3DBox[CompressedData["
1:eJwl13v8zuUdx/Gb+/79fvct5VQScphjIZViqG2ayVAPM7OohMhKheggYVMr
TDmMkFONnJKJUBQRSQexZR6t2Dy2ikI5jih7fh7XH9fj+/m8Pu/PdV2/674O
n1/tPgO73F86k8ms0oq090symaXFmczT2UzmImBJqUxmELYqn8ksJ9yHrc1l
MtNori5kMifZ1dlnxS7jL6N7ib2H7jWxXXKXi0/Q36XYq/rbjb2CTcRqYKux
B7C1clfK/S+2Xu427CW68XQXYovoqrNPaPvN9bhvNa0b3T1yB8n9K91YuV3l
XWA+/djjsDZiS2m+0z6S009bgvWlq073KN1cutuwO2j+gb9JsxDrh/XGdmPr
sUVYf2wMv5HcfXJL2Puw5eayk3Yv+wHaY2LPi7WgKyWvATuPj6P5nL2NvRWf
SF+fZiT+BHs9NkPuAprr8PP4V8TfRD+M5oj2Nru7Noq+oXHrY5XY18ea5NKa
fKtt4P8mm9ZnOP+otpnfQ/sD9oJ+f2yMrDEasgv4r33Px+7Uz1j8p3S/wEqw
ztiDWH3sE+OuwCfJqRm/ud9osf5Pa9uxvrFedAv4p7QP+XdqC7Dfydul/VzO
r/TTnz2fZgR7szF2629+zA8bjm2K/YT9BRvKn4o/x+6lvw1ik+RfYX4H2RXZ
34odEHtcG62VyJ1jrIXyRsl/h+6TojSX17Fx2A7sP9gKbBM2HfsUO4xtxB7h
z8TnsPvoc6NYNawGlsNaYr/ELsVqYsVYK6wjVhOrheWx1lgnbCP/WfwT9kFj
bBCbbu7N/B2noh/2D1gFmiqxhubfXG4bsePYG+LT+dfI/bvYIv5P5JbjX8ku
L9bWtxi7Wc5QvK7+vpC7Bp8ifjm2JdaFfz3d+fym7HJiV9M1MW5tOW34vfTR
DmuFtcJuxIZgV2KNsZrYz7Ce2Gr+GHx7Lt0bcX8M5r+WT+sb6/yG2Dr+ePxv
uXT24w6oxL8kzqt5tdDfDWJHsXXmNY3fjG6nWLnYy9jcWHfsMHYdXQ+su9aa
3Ry7iV3G39ZdP6PomhljMtYUO4xVYh/FHqKfrs9Zceb1+ZbYxTS9xbthM+U+
iC2LvUL3WfxNdEewZvyW+N3s4XSNxfJyO8Y47BHYb8XOxh1Et8y8LsaOxTpj
LeIMiD+KNaLfja3GzmIX6OMA9oPvIewDuU3p8mJH+AdiH+mnsbZDrJZxe2C9
5MyjGxW/Efas/O+wqr7HsfLYrewOsR5092Ln+N/E76afq7DzsKJC2kexd4Zg
N2FNsInY4difvl9jjbEJ7INYed+vsNaFdI/F3dUkfgf5J3w/NsbKuNP5J8XO
me+e2NNYHewc1krui3EXxd8WdxPeEpvPLos1ivsUK2Cd2FcZdyT/FuP+viSd
9Tjfcedsxc7EHRRvnDEq0x3Jpr91Pz41+sumvzv2clP8djmDitK+Hs1fkk/3
Wdxr28SewF7Op7ck3pT3sHLmcou5tMcmyR0QZz8YXc+4z7ARWKlCOsNxbq/F
ymNXFdLbGu9pNd8TWAXsNnYn7M9098XbqK95cr9kn8a2xyNOtx/bqr9GWHHs
a6w97c3iU7CBWOVYK6wLNg0bil0Sd70xemCzsYdzaX+/rL9v2dnitNcvL6R3
L966Yt9/i1XB+rBvwWbJfSj08s5o/zSX1tiF2Lv6ewH7nH0K+5D+Irkd8M7s
qdhgsWuwWforsp514/7DfhRvOd0AuiV0T8Y66+ti7GS8H3FmsNJRk+C74p7E
KsZ9HutEN1l/DbVNYhdglbET7M50l9EVsDz2JdYWuxSrHeuC3W3cxdgTcd9j
XfNpreZgw7AycstgB+S2w2ph19LNibvXmPV8z8V9jnXLpzoj6o3hWHNsbryt
dPWLUyG2QX976f4Xbw5eHDVMrBM+Us5E/o1xH2CfRu1k3NrY93H36uNCfQ7K
pTWNtb0dq4jdn0v7IPZDWbmHtNlxn2pf62N2vL3YFvF7sX9FDYK9h+3A7scO
YHX1NRh7GHs16hdsRkl6M+OdvIfuMywX91e8oXEv01UOJrdC1CZYx6iJ4n7j
H453Nd4y7ZBYlxjTvNdm076K/TVTX29H7cMegO+VewN/G92qbDpvce7itzgY
93jcrdn0u0yS+ya2JmoPbJfc+2L95G7kvyJ3iNjAuNexTdiKuO/jbPNrmPdj
uXR+4xxPiLuKdhW7P+3HuXSGqtI9kkt7I/ZInULqM/pZiT0j1pb/Hu3qbLp3
4/7NFtJ7Fm9YB6xevLX89+nWZNPZjzvgyaip8aXsu/D3c2k/7qRbl03nN8Yt
W0h1XNRuY7A+dPWwIbTDsNXYZOwH/X2FzZDbVNtj/Duwx7GxUQfRzaTrhf0R
+xO2OWqp2M/8Kng7dnestFiDQqpvo6Z9F5uXS/VRVbr27FuLUq10Ou4R7C3j
NcBKiT1Gtw/fYh5vYqPpvs+nOjNqy1rYGbHzjNEl6hXxp7DeufSefEH7TPyv
kU1vS0O68XH26bbRvUjXl24SNg3bji3E+mGTo97DPsIWY8/F+dM+yKZaL2q+
p/jHta3827Wn497lfx21KP/KODOl0jod097h35ZNa9bDGA9Hfctea4wpcRbj
Doq9kE11bNSz0+JOi989m2qQqEXq8uvI7xJzjbcizmdJqqvjfYs6dqVY56gt
rMvr2VSrRM0ygG5ePtXSUVMvj33Ar4d3Zd+FVYgzy38+n+rrqLOXifXkf6O9
ob8uUc+L/R98otT6
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0TcvhVEcB+Cj9xIR0XKVKBODLtgFk0WwWbjKZZGQ6J2IkUGMDGY+AZ9A
7+WbeG4ieX/v8xtOzv+cnKqx2cFYQghhXgqSQoj3ptQQ8tnCCraxkR3sYRcH
2MdRDnNEJvUoFznFPc7whHO84CqvecRbnvGeS2Y/cJmPXOFTfD2fucYXrvOV
G9yUN32L79zmB3f4yV1+cY/f3OcPD/jLS7PveMobHvIqfgaeM8ZjTnOXk1zg
BMclqg/F785e9rOT3WxnA1sZYTPzWG92LuuYw1pms4ZZrGYmK5nBCNNZzjJJ
00tpu1DCFBYzmUX0hUK/xP/3/AMjsjCk
       "]]}, {}, {}, {
      Line3DBox[{786, 1005, 1299, 907, 787, 1026, 1320, 2416, 914, 808, 1047, 
       1341, 2419, 921, 815, 1068, 1362, 928, 822, 1089, 2477, 1383, 935, 829,
        1110, 2485, 1404, 942, 836, 2398, 1131, 1425, 949, 2493, 843, 1152, 
       1446, 2432, 956, 850, 1173, 1467, 2434, 963, 857, 1194, 1488, 2438, 
       970, 864, 1215, 2518, 1509, 977, 871, 1236, 2526, 1530, 984, 878, 1257,
        2535, 1551, 991, 885, 2409, 1278, 1572, 998, 892}], 
      Line3DBox[{788, 1006, 1300, 908, 2456, 789, 1027, 1321, 915, 809, 1048, 
       1342, 2420, 922, 816, 1069, 1363, 929, 823, 1090, 2478, 1384, 936, 830,
        2394, 1111, 1405, 943, 837, 2399, 1132, 1426, 950, 2494, 844, 1153, 
       1447, 957, 2500, 851, 1174, 1468, 2435, 964, 858, 1195, 1489, 2439, 
       971, 865, 1216, 2519, 1510, 978, 872, 1237, 2527, 1531, 985, 879, 2405,
        1258, 1552, 992, 886, 2410, 1279, 1573, 999, 893}], 
      Line3DBox[{790, 1007, 1301, 909, 2457, 791, 1028, 1322, 916, 2463, 810, 
       1049, 1343, 923, 817, 1070, 1364, 930, 824, 1091, 1385, 937, 831, 2395,
        1112, 1406, 944, 838, 2400, 1133, 1427, 951, 2495, 845, 1154, 1448, 
       958, 2501, 852, 1175, 1469, 965, 2506, 859, 1196, 1490, 2440, 972, 866,
        1217, 2520, 1511, 979, 873, 1238, 1532, 986, 880, 2406, 1259, 1553, 
       993, 887, 2411, 1280, 1574, 1000, 894}], 
      Line3DBox[{792, 229, 1998, 429, 243, 2025, 456, 257, 2052, 483, 271, 
       510, 2075, 285, 537, 2089, 299, 564, 2103, 313, 2121, 591, 327, 2148, 
       618, 341, 2175, 645, 355, 2205, 672, 2206, 369, 699, 2239, 383, 726, 
       2253, 397, 753, 2267, 411, 895}], 
      Line3DBox[{793, 1008, 1302, 1009, 2367, 1304, 1029, 1323, 1030, 2372, 
       1325, 1050, 1344, 1051, 1346, 1071, 1365, 1072, 1367, 1092, 1386, 1093,
        1388, 2479, 1113, 1407, 1114, 1409, 2486, 1134, 1428, 1135, 2377, 
       1430, 1155, 1449, 1156, 2384, 1451, 1176, 1470, 1177, 2389, 1472, 1197,
        1491, 2512, 1198, 1493, 1218, 2444, 1512, 1219, 1514, 1239, 1533, 
       1240, 1535, 2528, 1260, 1554, 1261, 1556, 2536, 1281, 1575, 1282, 
       896}], Line3DBox[{794, 1010, 1303, 1011, 2368, 1306, 1031, 1324, 2464, 
       1032, 1327, 1052, 1345, 2470, 1053, 1348, 1073, 1366, 1074, 1369, 1094,
        2424, 1387, 1095, 1390, 1115, 1408, 1116, 1411, 2487, 1136, 1429, 
       1137, 2378, 1432, 1157, 1450, 1158, 2385, 1453, 1178, 1471, 2507, 1179,
        1474, 1199, 1492, 2513, 1200, 1495, 1220, 2445, 1513, 1221, 1516, 
       1241, 2450, 1534, 1242, 1537, 2529, 1262, 1555, 1263, 1558, 2537, 1283,
        1576, 1284, 897}], 
      Line3DBox[{795, 1012, 1305, 2458, 1014, 1308, 1033, 1326, 2465, 1035, 
       1329, 1054, 1347, 2471, 1056, 1350, 1075, 1368, 1077, 1371, 1096, 2425,
        1389, 1098, 1392, 1117, 2428, 1410, 1119, 1413, 1138, 1431, 1140, 
       2379, 1434, 1159, 1452, 2502, 1161, 1455, 1180, 1473, 2508, 1182, 1476,
        1201, 1494, 2514, 1203, 1497, 1222, 2446, 1515, 1224, 1518, 1243, 
       2451, 1536, 1245, 1539, 1264, 2454, 1557, 1266, 1560, 1285, 1577, 1287,
        898}], Line3DBox[{798, 1015, 1309, 911, 2459, 799, 1036, 1330, 2418, 
       918, 812, 1057, 1351, 2422, 925, 819, 1078, 1372, 932, 826, 1099, 2481,
        1393, 939, 833, 1120, 2489, 1414, 946, 840, 2401, 1141, 1435, 953, 
       2497, 847, 1162, 1456, 960, 854, 1183, 1477, 2437, 967, 861, 1204, 
       1498, 2442, 974, 868, 1225, 2522, 1519, 981, 875, 1246, 2531, 1540, 
       988, 882, 1267, 2539, 1561, 995, 889, 2412, 1288, 1579, 1002, 900}], 
      Line3DBox[{800, 1016, 1310, 912, 2460, 801, 1037, 1331, 919, 2466, 813, 
       1058, 1352, 2423, 926, 820, 1079, 1373, 933, 827, 1100, 2482, 1394, 
       940, 834, 2396, 1121, 1415, 947, 841, 2402, 1142, 1436, 954, 2498, 848,
        1163, 1457, 961, 2503, 855, 1184, 1478, 968, 862, 1205, 1499, 2443, 
       975, 869, 1226, 2523, 1520, 982, 876, 1247, 2532, 1541, 989, 883, 2407,
        1268, 1562, 996, 890, 2413, 1289, 1580, 1003, 901}], 
      Line3DBox[{802, 1017, 1311, 913, 2461, 803, 1038, 1332, 920, 2467, 814, 
       1059, 1353, 927, 2472, 821, 1080, 1374, 934, 828, 2393, 1101, 1395, 
       941, 835, 2397, 1122, 1416, 948, 842, 2403, 1143, 1437, 955, 2499, 849,
        1164, 1458, 962, 2504, 856, 1185, 1479, 969, 2509, 863, 1206, 1500, 
       976, 870, 1227, 2524, 1521, 983, 877, 2404, 1248, 1542, 990, 884, 2408,
        1269, 1563, 997, 891, 2414, 1290, 1581, 1004, 902}], 
      Line3DBox[{804, 1018, 1312, 1019, 2369, 1314, 1039, 1333, 1040, 2373, 
       1335, 1060, 1354, 1061, 2375, 1356, 1081, 1375, 1082, 1377, 2475, 1102,
        1396, 1103, 1398, 2483, 1123, 1417, 1124, 1419, 2490, 1144, 1438, 
       1145, 2380, 1440, 1165, 1459, 1166, 2386, 1461, 1186, 1480, 1187, 2390,
        1482, 1207, 1501, 1208, 2392, 1503, 1228, 1522, 1229, 1524, 2525, 
       1249, 1543, 1250, 1545, 2533, 1270, 1564, 1271, 1566, 2540, 1291, 1582,
        1292, 903}], 
      Line3DBox[{805, 1020, 1313, 1021, 2370, 1316, 1041, 1334, 1042, 2374, 
       1337, 1062, 1355, 1063, 2376, 1358, 1083, 1376, 1084, 1379, 2476, 1104,
        1397, 1105, 1400, 2484, 1125, 1418, 1126, 1421, 2491, 1146, 1439, 
       1147, 2381, 1442, 1167, 1460, 1168, 2387, 1463, 1188, 1481, 1189, 2391,
        1484, 1209, 1502, 2515, 1210, 1505, 1230, 2447, 1523, 1231, 1526, 
       1251, 1544, 1252, 1547, 2534, 1272, 1565, 1273, 1568, 2541, 1293, 1583,
        1294, 904}], 
      Line3DBox[{806, 1022, 1315, 1023, 2371, 1318, 1043, 1336, 2468, 1044, 
       1339, 1064, 1357, 2473, 1065, 1360, 1085, 1378, 1086, 1381, 1106, 2426,
        1399, 1107, 1402, 1127, 2429, 1420, 1128, 1423, 2492, 1148, 1441, 
       1149, 2382, 1444, 1169, 1462, 1170, 2388, 1465, 1190, 1483, 2510, 1191,
        1486, 1211, 1504, 2516, 1212, 1507, 1232, 2448, 1525, 1233, 1528, 
       1253, 2452, 1546, 1254, 1549, 1274, 1567, 1275, 1570, 2542, 1295, 1584,
        1296, 905}], 
      Line3DBox[{807, 1024, 1317, 2462, 1025, 1319, 1045, 1338, 2469, 1046, 
       1340, 1066, 1359, 2474, 1067, 1361, 1087, 1380, 1088, 1382, 1108, 2427,
        1401, 1109, 1403, 1129, 2430, 1422, 1130, 1424, 1150, 2431, 1443, 
       1151, 2383, 1445, 1171, 1464, 2505, 1172, 1466, 1192, 1485, 2511, 1193,
        1487, 1213, 1506, 2517, 1214, 1508, 1234, 2449, 1527, 1235, 1529, 
       1255, 2453, 1548, 1256, 1550, 1276, 2455, 1569, 1277, 1571, 1297, 1585,
        1298, 906}], 
      Line3DBox[{899, 1001, 1578, 2543, 1286, 888, 994, 1559, 2538, 1265, 881,
        987, 1538, 2530, 1244, 874, 980, 1517, 2521, 1223, 867, 973, 2441, 
       1496, 1202, 860, 966, 2436, 1475, 1181, 853, 959, 2433, 1454, 1160, 
       846, 952, 1433, 2496, 1139, 839, 945, 1412, 2488, 1118, 832, 938, 1391,
        2480, 1097, 825, 931, 1370, 1076, 818, 924, 2421, 1349, 1055, 811, 
       917, 2417, 1328, 1034, 797, 910, 2415, 1307, 1013, 796}]}, {
      Line3DBox[{1586, 1777, 1992, 907, 1991, 1778, 1994, 2456, 1707, 1993, 
       1779, 1996, 2457, 1708, 1995, 1780, 1998, 1709, 1997, 2299, 2367, 2000,
        1710, 1999, 2300, 2368, 2002, 1711, 2001, 2458, 1781, 2004, 2278, 
       2415, 2003, 1782, 2006, 2459, 1712, 2005, 1783, 2008, 2460, 1713, 2007,
        1784, 2010, 2461, 1714, 2009, 2301, 2369, 2012, 1715, 2011, 2302, 
       2370, 2014, 1716, 2013, 2303, 2371, 2016, 1717, 2015, 2462, 1785, 2017,
        1718, 1587}], 
      Line3DBox[{1588, 1786, 2019, 2279, 2416, 2018, 1787, 2021, 915, 2020, 
       1788, 2023, 2463, 1719, 2022, 1789, 2025, 1720, 2024, 2304, 2372, 2027,
        1721, 2026, 2464, 1790, 2029, 1722, 2028, 2465, 1791, 2031, 2280, 
       2417, 2030, 1792, 2033, 2281, 2418, 2032, 1793, 2035, 2466, 1723, 2034,
        1794, 2037, 2467, 1724, 2036, 2305, 2373, 2039, 1725, 2038, 2306, 
       2374, 2041, 1726, 2040, 2468, 1795, 2043, 1727, 2042, 2469, 1796, 2044,
        1728, 1589}], 
      Line3DBox[{1590, 1797, 2046, 2282, 2419, 2045, 1798, 2048, 2283, 2420, 
       2047, 1799, 2050, 923, 2049, 1800, 2052, 1729, 2051, 1051, 2054, 1730, 
       2053, 2470, 1801, 2056, 1731, 2055, 2471, 1802, 2058, 2284, 2421, 2057,
        1803, 2060, 2285, 2422, 2059, 1804, 2062, 2286, 2423, 2061, 1805, 
       2064, 2472, 1732, 2063, 2307, 2375, 2066, 1733, 2065, 2308, 2376, 2068,
        1734, 2067, 2473, 1806, 2070, 1735, 2069, 2474, 1807, 2071, 1736, 
       1591}], Line3DBox[{1592, 268, 1362, 503, 269, 1363, 505, 270, 1364, 
       507, 271, 509, 1365, 272, 511, 1366, 273, 513, 1368, 274, 1370, 515, 
       275, 1372, 517, 276, 1373, 519, 277, 1374, 521, 1375, 278, 523, 1376, 
       279, 525, 1378, 280, 527, 1380, 281, 1593}], 
      Line3DBox[{1595, 1808, 2072, 1809, 2477, 1594, 1810, 2073, 1811, 2478, 
       1596, 1812, 2074, 1091, 1597, 1813, 2075, 1814, 1598, 1092, 2076, 1815,
        1599, 2424, 1816, 2077, 1817, 1600, 2425, 1818, 2078, 1819, 2480, 
       1601, 1820, 2079, 1821, 2481, 1602, 1822, 2080, 1823, 2482, 1603, 1824,
        2081, 2393, 2309, 1604, 2310, 2475, 2082, 1825, 1605, 2311, 2476, 
       2083, 1826, 1606, 2426, 1827, 2084, 1828, 1607, 2427, 1829, 2085, 1830,
        1608}], 
      Line3DBox[{1610, 1831, 2086, 1832, 2485, 1609, 1833, 2087, 2394, 2312, 
       1611, 1834, 2088, 2395, 2313, 1612, 1835, 2089, 1836, 1613, 2314, 2479,
        2090, 1837, 1614, 1115, 2091, 1838, 1615, 2428, 1839, 2092, 1840, 
       2488, 1616, 1841, 2093, 1842, 2489, 1617, 1843, 2094, 2396, 2315, 1618,
        1844, 2095, 2397, 2316, 1619, 2317, 2483, 2096, 1845, 1620, 2318, 
       2484, 2097, 1846, 1621, 2429, 1847, 2098, 1848, 1622, 2430, 1849, 2099,
        1850, 1623}], 
      Line3DBox[{1626, 1852, 2115, 2493, 1737, 2114, 1854, 2117, 2494, 1738, 
       2116, 1856, 2119, 2495, 1739, 2118, 1859, 2121, 1740, 2120, 2323, 2377,
        2123, 1741, 2122, 2325, 2378, 2125, 1742, 2124, 2326, 2379, 2127, 952,
        2126, 1864, 2129, 2497, 1743, 2128, 1866, 2131, 2498, 1744, 2130, 
       1868, 2133, 2499, 1745, 2132, 2331, 2380, 2135, 1746, 2134, 2333, 2381,
        2137, 1747, 2136, 2335, 2382, 2139, 1748, 2138, 2336, 2383, 2140, 
       1749, 1640}], 
      Line3DBox[{1639, 1873, 2113, 1872, 2431, 1638, 1871, 2112, 2492, 2334, 
       1637, 1870, 2111, 2491, 2332, 1636, 1869, 2110, 2490, 2330, 1635, 2329,
        2403, 2109, 1867, 1634, 2328, 2402, 2108, 1865, 1633, 2327, 2401, 
       2107, 1863, 1632, 2496, 1862, 2106, 1138, 1631, 1861, 2105, 2487, 2324,
        1630, 1860, 2104, 2486, 2322, 1629, 1858, 2103, 1857, 1628, 2321, 
       2400, 2102, 1855, 1627, 2320, 2399, 2101, 1853, 1624, 2319, 2398, 2100,
        1851, 1625}], 
      Line3DBox[{1641, 1874, 2142, 2287, 2432, 2141, 1875, 2144, 2500, 1750, 
       2143, 1876, 2146, 2501, 1751, 2145, 1877, 2148, 1752, 2147, 2337, 2384,
        2150, 1753, 2149, 2338, 2385, 2152, 1754, 2151, 2502, 1878, 2154, 
       2288, 2433, 2153, 1879, 2156, 960, 2155, 1880, 2158, 2503, 1755, 2157, 
       1881, 2160, 2504, 1756, 2159, 2339, 2386, 2162, 1757, 2161, 2340, 2387,
        2164, 1758, 2163, 2341, 2388, 2166, 1759, 2165, 2505, 1882, 2167, 
       1760, 1642}], 
      Line3DBox[{1643, 1883, 2169, 2289, 2434, 2168, 1884, 2171, 2290, 2435, 
       2170, 1885, 2173, 2506, 1761, 2172, 1886, 2175, 1762, 2174, 2342, 2389,
        2177, 1763, 2176, 2507, 1887, 2179, 1764, 2178, 2508, 1888, 2181, 
       2291, 2436, 2180, 1889, 2183, 2292, 2437, 2182, 1890, 2185, 968, 2184, 
       1891, 2187, 2509, 1765, 2186, 2343, 2390, 2189, 1766, 2188, 2344, 2391,
        2191, 1767, 2190, 2510, 1892, 2193, 1768, 2192, 2511, 1893, 2194, 
       1769, 1644}], 
      Line3DBox[{1645, 1894, 2196, 2293, 2438, 2195, 1895, 2199, 2294, 2439, 
       2198, 1896, 2202, 2295, 2440, 2201, 1897, 2205, 1770, 2204, 2512, 1898,
        2208, 1771, 2207, 2513, 1899, 2211, 1772, 2210, 2514, 1900, 2214, 
       2296, 2441, 2213, 1901, 2217, 2297, 2442, 2216, 1902, 2220, 2298, 2443,
        2219, 1903, 2223, 976, 2222, 2345, 2392, 2226, 1773, 2225, 2515, 1904,
        2229, 1774, 2228, 2516, 1905, 2232, 1775, 2231, 2517, 1906, 2234, 
       1776, 1646}], 
      Line3DBox[{1648, 1907, 2197, 1908, 2518, 1647, 1909, 2200, 1910, 2519, 
       1649, 1911, 2203, 1912, 2520, 1650, 1913, 2206, 1914, 1651, 2444, 1915,
        2209, 1916, 1652, 2445, 1917, 2212, 1918, 1653, 2446, 1919, 2215, 
       1920, 2521, 1654, 1921, 2218, 1922, 2522, 1655, 1923, 2221, 1924, 2523,
        1656, 1925, 2224, 1926, 2524, 1657, 1228, 2227, 1927, 1658, 2447, 
       1928, 2230, 1929, 1659, 2448, 1930, 2233, 1931, 1660, 2449, 1932, 2235,
        1933, 1661}], 
      Line3DBox[{1663, 1934, 2236, 1935, 2526, 1662, 1936, 2237, 1937, 2527, 
       1664, 1938, 2238, 1238, 1665, 1939, 2239, 1940, 1666, 1239, 2240, 1941,
        1667, 2450, 1942, 2241, 1943, 1668, 2451, 1944, 2242, 1945, 2530, 
       1669, 1946, 2243, 1947, 2531, 1670, 1948, 2244, 1949, 2532, 1671, 1950,
        2245, 2404, 2346, 1672, 2347, 2525, 2246, 1951, 1673, 1251, 2247, 
       1952, 1674, 2452, 1953, 2248, 1954, 1675, 2453, 1955, 2249, 1956, 
       1676}], Line3DBox[{1678, 1957, 2250, 1958, 2535, 1677, 1959, 2251, 
       2405, 2348, 1679, 1960, 2252, 2406, 2349, 1680, 1961, 2253, 1962, 1681,
        2350, 2528, 2254, 1963, 1682, 2351, 2529, 2255, 1964, 1683, 2454, 
       1965, 2256, 1966, 2538, 1684, 1967, 2257, 1968, 2539, 1685, 1969, 2258,
        2407, 2352, 1686, 1970, 2259, 2408, 2353, 1687, 2354, 2533, 2260, 
       1971, 1688, 2355, 2534, 2261, 1972, 1689, 1274, 2262, 1973, 1690, 2455,
        1974, 2263, 1975, 1691}], 
      Line3DBox[{1693, 1976, 2264, 2409, 2356, 1692, 1977, 2265, 2410, 2357, 
       1694, 1978, 2266, 2411, 2358, 1695, 1979, 2267, 1980, 1696, 2359, 2536,
        2268, 1981, 1697, 2360, 2537, 2269, 1982, 1698, 1285, 2270, 1983, 
       2543, 1699, 1984, 2271, 2412, 2361, 1700, 1985, 2272, 2413, 2362, 1701,
        1986, 2273, 2414, 2363, 1702, 2364, 2540, 2274, 1987, 1703, 2365, 
       2541, 2275, 1988, 1704, 2366, 2542, 2276, 1989, 1705, 1297, 2277, 1990,
        1706}]}}},
   VertexNormals->CompressedData["
1:eJztwTENACAQBLALTMjAEhJIfkY6FrDB0Hbus6oluSPpAQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAD4zwObOwKn
    "],
   VertexTextureCoordinates->CompressedData["
1:eJyNncuvJddVxttuhLDgP0AICN2xw4g5SDUK0E5iJCNmjBAwSidxlDEDRowi
0n5IUWaNBBIZUFyZfvgm8ckhJGXHJu3r47i6b7n79Onq6pO6RfWdElACfWp/
e/P99ilf7sBHX+/aj7X2e+1vLf/mn33xxb94+ty5c4+fOXfuyS//Xr5w6cqF
SweF42XEzbXLx9cu/xDpRxHfeJJ8/OOIP9p9fxzxU7v/riN+ZZd/E/Enn8Ar
LcrrIn7+SfKFn6D8k4i/+OTza/8R8fR3Cpzk3P+7jFjyevpRxJJXWPIKS15h
ySsseb28LmLJ6+WfRCx5vd9Oi7l+3C9n+nV5l5B3CXmXkHcJeZeQdwl5l5B3
CXmXkHcJeZeQNx+n+/sxyclfySsseYUlr7DkFZa8wpLXy+silrxe/knEktfn
3WkxNw/3j9NlJpenp1/v3yP07xH69wj9e4T+PUL/HqF/j9C/R+jfI/Rvvs7s
n4fLrN8olzB/Ja+w5BWWvMKS18vpIpa8Xv5JxJLX183TYm4d3b/OLLNxyX6j
XML8lbzCkldY8np5XcSS18s9iVjy+r5wWsztE/vX0WU27zgu2W+US5i/kldY
8np5XcSS18s/iVjy+r53Wsztg/v3iWW2rnDecVyy3yiXMH8lr5fXRSx5vfyT
iCWv7+unxdw+v38fXGbrJtcVzjuOS/Yb5RLmr+QVlrxe/knEktfPLafF3Dlm
/z6/zPYFrptcVzjvOC7Zb5TLy0u/vl51WK86rFcd1qv8nLb/HLPM9j3uC1w3
ua5w3nFcst8olzB/Ja+w5PVz52kxdw7df05bZvs69z3uC1w3ua5w3nFcst8o
l5effn19PsH6nJ+z959Dl9m5hfs69z3uC1w3ua5w3nFcst8olzB/Je/cPWL/
OXs5cy7juYX7Ovc97gtcN7mucN5xXLLfKNdp9jvVdzX+TvIcRnx9V9/3I57y
3Yr44q59q4g/s2vP7Yi/tKv/o4in9t6PeGrvg4in9j6MeLqzbiOe9NtH/Oyu
/iHiST/jrFz8lXzCkk9Y8glLPmHJJyz5hCWfsOQTlnzCkk9Y8glLvrl+olz8
lXzCkk9Y8glLPmHJJyz5hCWfsOQTlnzCkk9Y8s2NO/YT5eKv5BOWfMKST1jy
CUs+YcknLPmEJZ+w5BOWfHPziOOO/US5+Cv5hCWfsOQTlnzCkk9Y8glLPmHJ
Jyz55tYFziOOO/YT5eKv5BOWfMKST1jyCUs+YcknLPmEJd/cOsd1gfOI4479
RLn4K/mEJZ+w5BOWfMKST1jyCUu+uXWb6xzXBc4jjjv2E+Xir+QTlnzCkk9Y
8glLPmHJN7cPcd3mOsd1gfOI4479RLn4K/mEJZ+w5BOWfMKSb25f5T7EdZvr
HNcFziOOO/YT5eKv5BOWfMKST1jyzZ0TuK9yH+K6zXWO6wLnEccd+4ly8Vfy
CUs+Yck3d+7hOYH7Kvchrttc57gucB5x3LGfKBd/JZ+w5Js7x/Hcw3MC91Xu
Q1y3uc5xXeA84rhjP1Eu/kq+uXMpz3E89/CcwH2V+xDXba5zXBc4jzju2E+U
i79uv7qK8ZreHXgOp52e51jatXkOpB2Y5yjaTXkOoZ2R+zjtctwHacfiPkK7
D9dh2km4jtGuwHWA93DOI69/hD4PsvvD/nehQ/QX31EO0V98dzhEf9FOf4j+
ol37EP1FO/Ah+ot200P0F+2Mh+gv2uUO0V+0Yx2iv2j3OUR/0U5yiP5aor/S
+x3vQ3zf4v2P71y8B/JdiPcovqPwHsJ3B57jaafnOZh2bZ4jaQfmOYx2U55j
aGfkOYB2Oe6jtGNxH/L6R+jzILvf8X3O9XyIefPD7H7Ldzul+/xK71z6d59f
6V1I6T6/jmCPuoX5ld4dlO7z6wj2qluYX8murXSfX8kOrHSfX8luynMO7Yw8
J3j9I/R5kN1X+b7I+znfG3lf5/sj7+98h+Q9nu92vAfznYv3SL4L8R7GdxTe
Y/juwHsA7fQ8R9OuzXMo7cA8x3n9I/R5kN2/+T5KewPfS2l/4Psp7RF8T6V9
gu+qtFPwHZL3fL7b8Z7Mdy7eM/kuxHsa31F4z+G7A+8JtNPznO31j9DnQWZP
4Psu7Sd876U9he+/tK/wPZj2Fr4P0/7Cd2LaYfiuSjsG3yFpB+C7He/RfOfi
PZTvQrzH8R2F9yCvf8x4S7SP8H2a9iC+V9M+xPdr2ov4nk37Ed+3aU/iezft
S3z3pp2J78S00/BdlXYOvkPSTsB3O96z+c7Fe6rXP0KfB2jn1ex9nfYtvrfT
3sX3d9q/+B5Pexjf52kf43s97WV8v6f9jO/4tKPx3Zt2KL4T047Dd1XaQfgO
STuC1z9mvD/ar8gPoL2OfAHa78gfoD2PfALa98gvoL2PfAPa/8g/oD2QfATa
B8lLoJ2Q7/i0s/Hdm3YqvhPTzuP1j9DnQWaPI7+B9kfyHWiPJP+B9knyIWiv
JD+C9kvyJWjPJH+C9k3yKWjvJL+C9k/yLGgHJS+BdkS+49MO5/WP0OcB1tWr
sR6/V/c4H57gHtfjfJj4G7S3ks9B+yv5HbTHku9B+yz5H7TXkg9C+y35IbTn
ki9C+y55I7TzkmdBO6nXP6Kcg8xeSn4J7cPkm9BeTP4J7cfko9CeTH4K7cvk
q9DeTP4K7c/ks9AeTX4L7dPku9BeTf4L7dfkwdCO7fWP0CftisluRbsI7928
1/HewHMpzz3cV7luc13guKNc03gowfspYR9egKe6QHqF9CqzA3n6CrhG/Q3w
OsNe/gbpG6S3SG+R3iG9Q/oW7e3x/QA8zuhzWbj+loXrS3axNfAGuAXugEvY
HxfAFexsa+ANcAvcAZdxnLt8R5DvCPIdQb4jyHcE+Y5ifW7/WQBXsAOugTfA
LXAHXMJ+sQCuYFdcA2+AW+AOuMT9ewFcwU65Bt4At8AdcIn74wK4gt1zDbwB
boE74BL3nwVwBTvqGngD3AJ3wGVcJ328dBgvHcZLh/HSYbx0GC9drM/Pnwvg
CnbeNfAGuAXugEucnxbAVcSqz/EGuAXugEvs/wvgCnboNfAGuAXugLU/ncb6
HFcRT7+3kL4CrvF9A7wG3gC3wB3wFvX1SB+AR+Ay/np/fjPK+63dePv72N6v
Yj98/PMnf/8U2/tuyK/2/p3lL4vddLnwXaw3i1jfdK77dqzvb7E/fTrkV33/
uav/zVjfn1v+sth9funtWM9U/1tY36pY323sT18N+VXfp0N+1ffTXf0/iPV9
YVf/e5iP78V6pnPvrVjfFexPnw/5Vd8fhvyq7xOWX+tp2p+m+j/A/P8g1ncd
+9PXQn7VdznkV31/YPnL4ubugzvYf+9gPt6O9TXYn66F/KrvSsiv+j5v+cvi
7i7DPaynd7Ff3MV8SvvTcciv+q6H/Krva5Zf82CD9eZ+rG+S536s52XsT/7b
hv64H+s7tvzqvxbzoIU+H8T6LmJ/ejnkV33+24X6H8T6pv0q7U9T/R3mQ4fx
kvanCyG/91/an/xX++E21jfVv0X/bWN93J+uh/yq72LIr3petvxluDem/WnK
32P+9bG+BvvTpZBf9Sm/6rtg+bUfpv1pqj/tT9N8GWJ93J+akF/1PR/yq74b
ll/ry2Octx9jvj+e3V8uh/yq7zjkV32XLH9ZfGMn8F9jvl+J9dW7/N+I+x+x
9g/th39j+etiY/tFU/xpqO//tv83fvTq7yn9l0K7JM89+74tXg/lS55nrk/t
mfC2+Ktg9xD+x4C1f35k7e9D/2n/GooXrfyh+Jm1fyx+19ozFr9i7dX8ex3j
81rU57Te34z6I9b+KP29bvnrYJdYRH3+eqhP+vy67d9N8TnbTzfF79j3bfFm
KF/6/JPQHunvvZ38hxE/Clj6e97aL3vIt6P+/sHKH4pnrP1j8avWnrH4I2uv
7p//ivXle1GfU/H/FvVH7OteXfyW5a/DfH4r6ut2qE/6fM3OJ03Ab0d93rfv
2+K5UL70+ZXQHunvn3cN/H7E3wpY+vuCtb8vfm7nj6H4NSv/f8ertX8sfmzt
GcN4eBvj8x2cJ96NeprG679H/RHrfCP9Xbb8dTwPSV+fCPVJn/fs/NWE8f5e
1Odv2/dt8eVQvvT5ndAe6e+/dvr5UcTnd7+3ov5uWPt7nM+G4i+t/KF4wdo/
hvn1TsQvWXu1/yV7xTRe38e4W83+6vwm/Xn+OsynD6K+roX6pM9X7HzZFK/a
eW9TvGHft+G89X7U5y+Edkh/0/xI+LmApT9vf4/z5xD2h/cj/oq1fyz+xdoz
hvmU7COT/B9GfT4d9OD3+Tq2g1jn06csX/p9xc6jTdgfP4z6vGnn5ybo707U
5z37vg3jrY76/FRoj/Q3re+3I/5cwNKft7/H+Xoo/ns3vj+M+OvW/rG4Y+0Z
i0Nrr867TdTnZJduoj6n9e+jqD9inb+lv09a/jro527Ul/+uw3g7jv9+z87r
mzD+mqjP50L50ucLoT3S37TeJPzlgKU/b3+P+8MQ1qMm4u9Y+8ew3h5HfN/a
K/tksqdN+kj2tGk9WEf9Eet+If1dtPx1vI9IX6pP+nw6/Cr96aBH6fNV+17v
Icle90Zoj/Q3nQfvR/zZgH39XEfs96MhrBfriF+y9o/h/rCO+Ly1V/tRuo9N
82+D8fkA4/MB5vuDqL8bll/npTbq62KoT/p0e6LWz3T/eta+b2P7pM/PhvZI
f9N6kvDdgH18PsB8fxD1d83KH8L8aKP+Llh7RrRX+1G6b071PYz6nM6/D6P+
iHU/9P38YcS6T0pfqk/6fNbur03A6X75hn3fBv09jPq8F9oj/U3nk4RfCtjP
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
AMNZS0g=
    "]],
  AutomaticImageSize->True,
  Axes->True,
  DisplayFunction:>Identity,
  ImageSize->{365.57647980560705`, 382.3918022411193},
  Method->{},
  PlotRange->{{-1., 1.}, {-1., 1.}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-0.25859642200829486`, 3.353404126873699, 0.3712258778573439},
  ViewVertical->{0.131720153756556, 1.0508664413198676`, 
   0.8500233786278023}]], "Output",
 CellChangeTimes->{
  3.547820114466323*^9, 3.5478204829983606`*^9, 3.547855780392273*^9, 
   3.5522139199458694`*^9, 3.5522142755568695`*^9, 3.5522143837188697`*^9, 
   3.5522156918908696`*^9, {3.5522158624318695`*^9, 3.5522158686018696`*^9}, 
   3.5522162168996305`*^9, 3.55221628895144*^9, 3.5522170855328593`*^9, 
   3.552217146455859*^9, 3.5522172504648595`*^9, 3.5522181820838594`*^9, 
   3.5522184804588594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SideViewPerp", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"SphericalPlotPerp", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "80"}], ","}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.544275036921875*^9, {3.5478146601445227`*^9, 3.547814664449957*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\*Graphics3DBox[GraphicsComplex3DBox[List[List[0.`\
, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], Skeleton[647]], List[List[List[EdgeForm[], \
GraphicsGroup3DBox[List[Skeleton[3]]]], List[], List[], List[], List[]], \
List[List[GrayLevel[0], Line3DBox[List[Skeleton[78]]]], List[], List[], \
List[Line3DBox[List[Skeleton[23]]], Line3DBox[List[Skeleton[23]]], \
Line3DBox[List[Skeleton[23]]], Line3DBox[List[Skeleton[38]]], \
Line3DBox[List[Skeleton[23]]], Line3DBox[List[Skeleton[38]]], \
Line3DBox[List[Skeleton[38]]], Line3DBox[List[Skeleton[23]]], \
Line3DBox[List[Skeleton[23]]], Line3DBox[List[Skeleton[23]]], \
Line3DBox[List[Skeleton[23]]], Line3DBox[List[Skeleton[23]]], \
Line3DBox[List[Skeleton[37]]], Line3DBox[List[Skeleton[38]]], \
Line3DBox[List[Skeleton[38]]]], List[Line3DBox[List[Skeleton[3]]], \
Line3DBox[List[Skeleton[38]]], Line3DBox[List[Skeleton[23]]], \
Line3DBox[List[Skeleton[5]]], Line3DBox[List[Skeleton[20]]], \
Line3DBox[List[Skeleton[23]]], Line3DBox[List[Skeleton[3]]], \
Line3DBox[List[Skeleton[5]]], Line3DBox[List[Skeleton[38]]], \
Line3DBox[List[Skeleton[5]]], Line3DBox[List[Skeleton[20]]], \
Line3DBox[List[Skeleton[38]]], Line3DBox[List[Skeleton[38]]], \
Line3DBox[List[Skeleton[20]]], Line3DBox[List[Skeleton[18]]], \
Line3DBox[List[Skeleton[20]]], Line3DBox[List[Skeleton[18]]], \
Line3DBox[List[Skeleton[9]]], Line3DBox[List[Skeleton[3]]], \
Line3DBox[List[Skeleton[3]]], Line3DBox[List[Skeleton[38]]], \
Line3DBox[List[Skeleton[38]]], Line3DBox[List[Skeleton[8]]]]]], \
Rule[VertexNormals, List[List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, \
0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, \
0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], \
List[0.`, 0.`, 0.`], List[0.`, 0.`, 0.`], Skeleton[647]]], \
Rule[VertexTextureCoordinates, List[List[0.`, 0.`], List[0.25`, 0.`], \
List[0.49999999999999994`, 0.`], List[0.75`, 0.`], List[1.`, 0.`], List[0.`, \
0.25`], List[0.25`, 0.25`], List[0.49999999999999994`, 0.25`], List[0.75`, \
0.25`], List[1.`, 0.25`], List[0.`, 0.49999999999999994`], List[0.25`, \
0.49999999999999994`], List[0.49999999999999994`, 0.49999999999999994`], \
List[0.75`, 0.49999999999999994`], List[1.`, 0.49999999999999994`], List[0.`, \
0.75`], List[0.25`, 0.75`], List[0.49999999999999994`, 0.75`], List[0.75`, \
0.75`], List[1.`, 0.75`], List[0.`, 1.`], List[0.25`, 1.`], \
List[0.49999999999999994`, 1.`], List[0.75`, 1.`], List[1.`, 1.`], \
List[0.12499999999999999`, 0.12499999999999999`], List[0.375`, \
0.12499999999999999`], List[0.625`, 0.12499999999999999`], \
List[0.8750000000000001`, 0.12499999999999999`], List[0.12499999999999999`, \
0.375`], List[0.375`, 0.375`], List[0.625`, 0.375`], \
List[0.8750000000000001`, 0.375`], List[0.12499999999999999`, 0.625`], \
List[0.375`, 0.625`], List[0.625`, 0.625`], List[0.8750000000000001`, \
0.625`], List[0.12499999999999999`, 0.8750000000000001`], List[0.375`, \
0.8750000000000001`], List[0.625`, 0.8750000000000001`], \
List[0.8750000000000001`, 0.8750000000000001`], List[0.25`, \
0.12499999999999999`], List[0.12499999999999999`, 0.25`], \
List[0.49999999999999994`, 0.12499999999999999`], List[0.375`, 0.25`], \
List[0.75`, 0.12499999999999999`], List[0.625`, 0.25`], \
List[0.8750000000000001`, 0.25`], List[0.25`, 0.375`], \
List[0.12499999999999999`, 0.49999999999999994`], Skeleton[647]]]], \
List[Rule[Axes, True], RuleDelayed[DisplayFunction, Identity], Rule[Method, \
List[]], Rule[PlotRange, List[List[-1.`, 1.`], List[-1.`, 1.`], List[-1.`, \
1.`]]], Rule[PlotRangePadding, List[Scaled[0.02`], Scaled[0.02`], \
Scaled[0.02`]]]]], \\(\\(DisplayFunction \[Rule] Identity\\)\\), \
\\(\\(PlotPoints \[Rule] 80\\)\\), Null\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", \
ButtonNote -> \\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522139205328693`*^9, 3.5522143838988695`*^9, 
  3.55221628900146*^9, 3.5522171465368595`*^9, 3.5522172505318594`*^9}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztxDENACAQBLALKMESEkiYXx/uQAdph45Vc7ck59UDAAAAAAAAAAAAAAAA
AAAA8K8L5h0Cag==
     "], {{
       {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmXngl1MWxu+9KYpKU5GQdmUtSqVFIlMq1a+FkmTJTrSXspWajK1SqGxt
lBJKZY9hGDNmiGFMhkwMhgnZd8/Hef6YP57fPd/73ve+dznnOcuv0emjKi4q
KaWW+lNJ7d45pVuEAyQvE45Xf021jwl/Uv9StberfVp4SHLS84ZCL4mzhX7C
wcJwPZ8inCH5K+FR4TDhH+o7TuOrSe6j9m21K4RDGCt0k/xftd8KBzGfxnyq
dpVwguRtalcKX+h5bf3uKPlh4Tn9Xqz2CrV9cnxrjHCccLgwV+grtBa66fnF
QnXJh5aY5zTJ09SOFl7zfl8SWgkXqO8q4WXJv9V7jYW2kndXO0poJLmB2vbC
oZLnCANSyK3Vd57QnX15XuYsmm9uiXf2Ezrm6P88xxo6SF4s+Q/CRskfq/1B
OETyv9Re7vVUknxEiXMbpPZK4X7JTdV/vNDOa75KGCT5N8yhMSdLbiL5WN6X
PII9qX8kOqD2WOFoyTU5Y2GY5DYaM1boIbmH2ouEwZIv8n4bCjXUd4kwUHIv
tdOEEyWfyxkIVX1uD/pdzq+mz3C4vjNVeFLyJNad4pxnCENT3PWuen6kMAR9
0HstvJfxQn/WKByt/iuFCsnvCw+m0OczNPYy4RnJ+7A/4UzJLTR2gNAZO1A7
ROgieRb6L3QStqbQ1a7CZTwXDpT8bgqd5Kz21HxHCaejk3r+qLAFfVNfHZ6x
J7XnC/vajvaxnq8XXmRdwh16voWzQk8lv6O2mfoXSp7D/PpdT1iGfqj/VbWn
8Q3Jd6p9U793FcZJfl9tS/XfJfmaEneCzjSQvLP6F6m9Vuirvs/0u0KyxPRn
/XmCu2Kd6ptdwqZfT9HfGDvX77PUX9+696HP5HnhBWxC2OHfyA9ozNfYiLCz
sCLHuy/ZLtCBdRozXailZ3fr9xsp9v6sME/996ArwjE57Hq52idzPEcf/mK7
vlVjZ5bgFd7jef0ctjxU2FW/v/Taqgjz1bcmxbqwEfiwqXXnOevPbeq7Xhjk
tfXymf9Vv4eZJ/+NjUhubvkK88lItf/MwZPoSF3rCby4OQVfca6cL7bfTs+/
Y5+S20v+EVuVPEVyT2GJ5ObcoXBSCn660JxwSQkue80csq95Y4L18DRzyKgS
98gax3j8Weo/SthF8kT1vZtjnZMl/yeHvSxR+7h1D1usans8GD7PIbOGU0vo
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
           "]], Polygon3DBox[CompressedData["
1:eJwtmHnYVlUVxc85oCAaAioqk3yBIiCgMsiUgmBIITmgZgLKDDIqyBiDn2Cf
ivOEOIGSgIAgyGBlUlg9kZRpOWNCzoJWn0M20fqx9h/rOXu/5977nnvO3muv
fSuGT75wUkkpnZlTqqnxJY0r9EOVxmXyX9Z4pXCjsFz+bZp7jBvk19dwjOyz
hAdlNxAaye4tPCz7KOEFXTdQWCQ8IP9azR0ve6vwhvwB8rcKP5G/Sv7RsmcI
b8s+S1ii338hfCC7jTBFc48Km/Tbn+V31Pi08KrsbwqHyv6p8JbshsKpsjcI
L8luJrwp+xHdv1ZjE/lHalwvvCi7QvhM9n2af0rjy/I/1Xi3/Cc1/kH+fzSO
k79LdnvhLfZJ/jqNTeWv0Pis8I7sXgKbO1+olv2s8LXmxsj/nexThDfkj5L/
G9mNhR/Jvl9onP2+w2TPE/axN8Jg2XOFT1i7MFp2O137hPBb+cs07hA+Sj7P
/pr/ofAxexHnvEbYKbut8B3ZG4U/yT5DmKprFwify94uPKi5Xwofyq4hXKS5
64Qv2GvhG7J7CEtk1xXe1bUz5e+R3Up4X/5s+e/JPlm4VfZDQsvs/ztE4zRh
QXI8fZ/7iTfZPYXWuraB/GuEefIXE2tCC/ld5PfVeLUwN9mvrblThErZXYVz
NFfJmco+TDhCc6uL4/Fy+X/R2E7+QtktiFnZHYQbZPcQLtT8dOF62d2FOzX3
AP+h33rLf0fjafJvkt1S+K/8rvLvlN1BaCp7S3G8j5J/mcYtwuuchbBS9nPC
u8nPu0j2HOEW2d8S7iCXhJOz/Xqyn2B98ofKP172msjXEfJvkr1cOMC78gz9
Pl+4S/Zpwr/Yd83fIbsdOSb/OuEe9o490lx34V7OVqjW3BL5mzW+Jv8a2dcL
X8nuJlxK7HOm5KH8q9iP7P+aEv/fnDOSPTDOY5wwWfbFyXNcf07yNeTztaxJ
9rmRv+Pjfq4ZK7tX9t5OivWPFiZwVhHPxNZ82ZfwDrIn8syYnyD77Ox3mwpn
aO2PC92y4+ME2T8WumTvRwXnnH0vz2gq+1Fhm+zfs0Zdu5Tz53eep7Ff9rvN
4Xmyvx0+79ws1n9wLUKbyIeL4zwXaDw99uNucibi/XsRrws1ds7em6Vx/0ph
arxzx4iXoREPF3CWQi35jeSfqLFT3M8et5H9jPCm7N1CE9kPC5tlvyCMDD5q
z77JP1/2PUIj+a15x8iH4RHf0+L55B453Sd7D9m7Qcm5WpeYSM7ZD7JrArXg
+eRc+TLbJ2c2y59WHHvEIPFXHbH4ijBD9lHCENmLhD3ZNYLa8JwwW/4FMb9Y
mFjM8XD7H5OfvTf7WTxzm/zpwpWyL8/mztc01knm0K9kP1XMt+wHXDy0mMvg
ZGrXX7O5jxr2tPzJxf9HTWkre1XxObD/Y4vr0WHyB/A8jZcKV8i+Lc6f+jmF
tSTXq8nZsUVM9c+OuTkR75M422wunpXMjy3iXvZ/SsQ/Nr/Nkn1M/N/NyblS
N+Y5s6+Fntm5ezv5HPX/B9l71C345rusOzkO+X/WQjySu0fE/eTwVcX18nD9
dl7yu9SL63kHakfD4tq5J5l7OT+0BRy8JdZ7YjKHbs+OxV/Jfj+Zy8jXjsmc
Rn1BqywNPukV/HlJdn05M+rB+dn8Xhn52zm5ZsD/J2XHFjGEHqE2/1r2euEj
clv3b0iuv3fJLsVnOSY798jBdfLvz9YSNYvfHU1BLpFTa+Wvkt8n+PyK7D2o
mc3lcAGcAJdzHrWSOZ16Pi/7bAZG/K/X/Ytjj36u8Thhh+y9kW8b4P/I39XZ
3MC78E6vy14LZwRfPJ+tzeCH/claAH5Au6AJqGets2OVGJoT+UgtpIZRz6hd
i2P/qO+tsmON62dGvKMVqfnto97PiD3vIr9Gdhzyjp2L9ejc+E+0DnyMFkPz
oP9y9lpZ8yecP/GpYZxQO1v7wW1w3JqIT7ThzjhP8rtDtj4aGfpqdZw5+bqx
mCd5xsaI34pkDUV8byquE9QHtCl8Ta1Eo6IP22afxY7gHziuIXGWrF3hY7Qv
GhYugpPgafh5m8afhc37zdLcM8XnzDPRno8JxyZrULgUTh2WrTfgIjipfrZe
RhtTb05P1sifcy98LrtK+EJ+E/kjZd+aXAvYE/aCPOD5I4q5G85Gq9+XD275
Qc3+j2x+hIvh5DrZWpm9oYaitQ8p5g748e/CkfIHJ+s9tDn1E+2KRkcrPU5M
J2sm9BNajNyHA6hH9Bfb4ze0S/3gc+rH34TD5V9G7CXvHXtIrTw2W2vzPuzV
vtiv3dm1Ag5H272arRXQeGglntcpWTOhhVk/WhRNjD7epesfSn4n9GlPaiq5
kNw7sd9oTXoouAmO4no03njZ/eDc5P6D/oqebHnymdBrcT5oQ3ou+jF6uGXJ
Z0g/dTY1RvawZO33Sra2QQPCNXAO16Mh4UI4kV4NjYxeJIfInT5Cheb+mW0f
/C34mv/iGSfE85kfk6xdqGHUGupQX9mNI554B/QmPSL/x5nMjvneyT0D2giN
Qy1B1zUvzme069jkvaob8cKeod1YA/89Mrvf+jjbZ028W504f/6T/qRTcWyz
ppNkH1qsnacLtYpjZmacF3yMxkXbcg36Ek2KFm2erHfQmGhLalCNYn05Kpvz
c/EaWRs1YmHkI7FPDlDPqeHUbmrQ/uyaQi2ZyBpkPyksl7811seaWSsx+L/Y
I/aGGnFD8AuxTw40Cz4dIYxO1kOVwpfJHADX3F7MP3BOu9gvaiM9Eu+CZh6f
/E70O/tjbX2T++N92fP49FetivePPaffJYaIHTiZ/okeb17kx8o4b7TwoOze
ivOlVtNj0du9nd2rVSZrqbbBHwOye7cGxb0kPRz9HJxWFfFPf3pqsU/Mol3h
DLgCHvlQOJC9NvYHLY2mpn5Rx+CT6uDzwdm1dLiwJrmmUnuHcObJNZiz4sz4
NgD3UTuqiusnNYRvGehVavXR2Xz4WfDxedl64dPgvx7ZZzUBzkk+M2rNjcX1
j5pDb44eoXbRo9OrXS3US+7Z6O33Rq2hx6fWDyKmkms+32L4JsM8tYbejh6P
byW1Y/3UQGL3jOxvGfAB3y74ptE/1gtXwVl8K/l39v27Yr3USHKhe8Q28UM/
1zVbf/BNAy2FpuLbCOfBtxC+kawIfkMPDsmu1dRsrkeTEw83F/cfaGy+veyO
Wlcd8XVLsT5Gq9K79YvzoYejHryX/a2Cmros1ku9WhexTPzBBcT0i9nxRmzB
sY/E/qAN0BloYzQy+u1A5Cc5ODrif2c23/A8agK5RX0hd8ihlrF/+OQY2hsN
jp5NET+LIl82RWzTf7Ceqtiv44rrG/z+f9wGSoA=
           "]], Polygon3DBox[CompressedData["
1:eJwt0l1ozXEcx/H/OexCXFiJ7QLJs9WUGebhRkiZEeNi9mBjWzIWoiYtYmbY
I9JksURygZJyoVx4uFCMMqnZjVKSG0ouPOT17ZyLd5+H7+9/zvf8zn9GXfOW
/ekkSRYgB4eEnajBAbzXLaafU0kyBcfQpZuqK0Y3P19Xi684o1tKd6PRLD58
ByrQhLe6fNqCT3yBczX4iL26Id1dfjwu4TLu6frpRfzhB+hDepX+psO0zrPP
+Fr6Tv7HD9JH9Dr9S2/SHnTjBp7qJjq/COf4ubrtmCAXok03R96MrfIL+hzl
/H2zLvpDHuYf0G24jQvow604b9bu3Be+gd9FC7Fa1xN3w7fjmlmJnION8vH4
vbqVsRtK5ZPo1w3RKt0TvpK+ln9hSXymrpVfiG/o0C2n9XG/ZuvkD/H7+fX8
WvRhDQZ1HXGXcUfym+xesV8FzupeZneIXTZglS4XlfwpXDGbLY/FCnk6mnUj
dJZuH9/Ij0tl7r0Nk/iWVOY/KJLzUCUfxXldr/wz+97F+1eN07ojGNU9lifH
98sFOKE7LOfG8/J32qo7SDdhpi6NZfw0NJmNSWf2jl336EqQSmfOxrwh7hev
0Kkrjx0wkH2v8jCPLzO7Q/8DNn5knw==
           "]]}]}, {}, {}, {}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0L9KwmEchfE3K4cabNC00YvJwaDArRoML6CuxJLKpYYgIkorCARBCBz8
UwRFYJehrZIpfX7g8PCcc4YvL2+2dFQ4XAghbGOMKBdiITxxV+khLu/aWvyq
r/Kevo8X+d22xkX9AG35y5biMt9xh4fRfV7nY77nEdI40SuoyT/I4FQ/w4Mc
4w3ecb/O3/oASXnLdsuf+gcSct52w2/6Cuf0TVzLfdsyX3GTZ5hiCZe2Bv9h
gkVc2J75N3oHqvo5Hud/9g/VeCsJ
         "]]}, {}, {}, {
        Line3DBox[{248, 241, 406, 684, 176, 641, 245, 200, 242, 187, 246, 642,
          209, 639, 243, 190, 247, 643, 214, 640, 244, 193, 397}], 
        Line3DBox[{2, 231, 42, 488, 102, 542, 7, 147, 49, 112, 12, 458, 153, 
         572, 56, 128, 17, 464, 159, 578, 63, 220, 22}], 
        Line3DBox[{250, 178, 199, 613, 75, 544, 104, 79, 114, 81, 118, 550, 
         88, 556, 130, 90, 134, 559, 97, 631, 222, 194, 398}], 
        Line3DBox[{251, 412, 450, 414, 284, 690, 311, 356, 677, 310, 358, 319,
          385, 321, 289, 323, 364, 322, 368, 334, 389, 681, 336, 294, 338, 
         374, 337, 378, 349, 676, 392, 683, 351, 299, 420, 445, 419, 399}], 
        Line3DBox[{4, 233, 46, 492, 107, 546, 9, 151, 53, 121, 14, 461, 157, 
         576, 60, 137, 19, 467, 161, 580, 65, 228, 24}], 
        Line3DBox[{253, 416, 451, 418, 285, 691, 314, 357, 678, 313, 361, 325,
          386, 327, 290, 329, 366, 328, 371, 679, 340, 390, 682, 342, 295, 
         344, 376, 343, 381, 352, 393, 354, 667, 300, 423, 447, 422, 402}], 
        Line3DBox[{257, 262, 443, 441, 298, 696, 347, 391, 346, 675, 256, 261,
          372, 308, 293, 680, 332, 387, 331, 673, 255, 260, 362, 305, 288, 
         317, 383, 316, 249, 259, 355, 302, 665, 283, 408, 449, 407, 405}], 
        Line3DBox[{238, 223, 225, 632, 98, 575, 156, 73, 132, 557, 89, 570, 
         150, 70, 116, 80, 145, 567, 67, 615, 203, 179, 410}], 
        Line3DBox[{239, 227, 229, 634, 100, 577, 158, 74, 138, 561, 92, 571, 
         152, 71, 122, 83, 146, 568, 68, 617, 205, 182, 411}], 
        Line3DBox[{258, 240, 401, 688, 196, 638, 236, 167, 396, 687, 191, 637,
          235, 165, 395, 188, 234, 636, 163, 666, 394, 185, 415}], 
        Line3DBox[{169, 589, 39, 560, 136, 500, 59, 135, 35, 551, 120, 496, 
         52, 119, 31, 106, 45, 491, 105, 545, 27, 598, 177}], 
        Line3DBox[{170, 590, 40, 564, 142, 501, 61, 141, 36, 553, 126, 497, 
         54, 125, 32, 110, 47, 493, 109, 548, 28, 599, 180}], 
        Line3DBox[{400, 421, 280, 446, 697, 279, 380, 350, 670, 296, 339, 379,
          275, 375, 274, 370, 335, 668, 291, 324, 369, 270, 365, 269, 360, 
         320, 286, 312, 659, 359, 265, 671, 428, 264, 685, 413, 252}], 
        Line3DBox[{403, 424, 661, 282, 448, 281, 439, 694, 353, 297, 345, 438,
          277, 377, 276, 674, 435, 341, 669, 292, 330, 434, 272, 367, 271, 
         431, 326, 287, 315, 660, 430, 267, 672, 429, 266, 686, 417, 254}], 
        Line3DBox[{404, 409, 662, 263, 425, 301, 426, 689, 303, 382, 318, 427,
          268, 363, 304, 432, 306, 384, 333, 663, 433, 692, 273, 373, 307, 
         436, 309, 388, 348, 664, 437, 693, 278, 444, 440, 695, 442, 452}]}, {
        Line3DBox[{6, 245, 43}], 
        Line3DBox[{454, 595, 641, 597, 489, 689, 503, 566, 259, 542, 510, 544,
          512, 491, 506, 567, 470, 543, 677, 513, 547, 514, 659, 493, 509, 
         568, 471, 546, 678, 515, 549, 516, 660, 494, 585, 636, 472, 582}], 
        Line3DBox[{455, 185, 600, 686, 184, 451, 233, 182, 599, 685, 181, 450,
          232, 179, 598, 178, 231, 449, 175, 662, 593, 241, 594}], 
        Line3DBox[{456, 187, 210, 432, 69}], 
        Line3DBox[{10, 234, 48, 287, 111, 361, 9, 146, 47, 286, 108, 358, 8, 
         145, 45, 104, 7, 249, 144, 382}], 
        Line3DBox[{457, 188, 208, 431, 85, 386, 151, 83, 110, 360, 82, 385, 
         149, 80, 106, 79, 147, 383, 78, 427, 202, 200, 601}], 
        Line3DBox[{16, 247, 57}], Line3DBox[{459, 190, 215, 436, 72}], 
        Line3DBox[{462, 604, 637, 606, 498, 654, 669, 554, 679, 653, 461, 525,
          571, 527, 497, 652, 668, 552, 334, 460, 521, 570, 523, 496, 519, 
         550, 518, 458, 650, 673, 569, 517, 663, 495, 621, 642, 620, 602}], 
        Line3DBox[{465, 193, 588, 695, 219}], 
        Line3DBox[{20, 236, 62, 297, 143, 381, 19, 158, 61, 296, 140, 378, 18,
          156, 59, 134, 17, 256, 154, 388}], 
        Line3DBox[{468, 609, 638, 611, 502, 694, 541, 565, 352, 467, 538, 577,
          540, 501, 657, 670, 563, 536, 676, 466, 533, 575, 535, 500, 531, 
         559, 530, 464, 655, 675, 573, 529, 664, 499, 626, 643, 625, 607}], 
        Line3DBox[{581, 584, 666, 583, 619, 476, 672, 618, 691, 649, 492, 508,
          617, 507, 548, 475, 671, 616, 690, 648, 490, 505, 615, 504, 545, 
         474, 613, 511, 488, 647, 665, 612, 301, 614, 473, 684, 596, 453}], 
        Line3DBox[{164, 395, 33, 367, 123, 290, 53, 122, 32, 365, 117, 289, 
         51, 116, 31, 114, 49, 288, 113, 363}], 
        Line3DBox[{586, 165, 212, 434, 86, 366, 121, 71, 125, 369, 84, 364, 
         115, 70, 119, 81, 112, 362}], 
        Line3DBox[{166, 396, 37, 377, 139, 295, 60, 138, 36, 375, 133, 294, 
         58, 132, 35, 130, 56, 293, 129, 373}], 
        Line3DBox[{587, 167, 217, 438, 95, 376, 137, 74, 141, 379, 93, 374, 
         131, 73, 135, 90, 128, 372}], 
        Line3DBox[{591, 240, 592, 661, 197, 447, 228, 227, 590}], 
        Line3DBox[{186, 242, 30}], Line3DBox[{189, 243, 34}], 
        Line3DBox[{603, 622, 639, 477, 623, 692, 644, 555, 680, 651, 572, 520,
          556, 478, 551, 479, 557, 522, 574, 681, 524, 558, 274, 553, 480, 
         561, 526, 576, 682, 528, 562, 645, 674, 624, 481, 687, 605, 463}], 
        Line3DBox[{608, 627, 640, 482, 628, 693, 646, 630, 696, 656, 578, 532,
          631, 483, 560, 484, 632, 534, 579, 683, 537, 633, 697, 485, 564, 
         486, 634, 539, 580, 658, 667, 635, 281, 629, 487, 688, 610, 469}], 
        Line3DBox[{443, 220, 194, 589, 223, 224, 445, 195}]}}},
     VertexNormals->CompressedData["
1:eJztxDENACAQBLALKMESEkiYXx/uQAdph45Vc7ck59UDAAAAAAAAAAAAAAAA
AAAA8K8L5h0Cag==
      "],
     VertexTextureCoordinates->CompressedData["
1:eJyVmU2O20YQhWUP7E0ukdwgBxhAd8gRAmSdVY6SI2Qtb7Ma7aTdELAAC7AA
iRyZJqixzIVXhj2TeJpVhfc1O3K4cPuxu6pf/XSrivPTr7//8tvz2Wz297//
fBunn2pu/3t8evZzne+AB2DqiVH12fsOeAAmj9DD0fQpHoBpR1WQ6wrjAEw/
VIV9KTdkY1p/42N6vwU+On72hO+LctPj0bHJl/aZlotR5XNe0/uEHEfz37Q9
jDvtZBxpR5Xto+MW+zKvtljHPNnCD3vEh3kf/lLe+4L/mYeMRwf7usxu8qJc
ml/5mOZ3wG1x3fTYFvVMr+O4wX6148S7L/DZFMZd8b3p1/fkUft629/mFe/A
qy7qKe2r9tYX36s/avCJuF3ifUmPYY5pvvJ90rh3rPbx3K0c67oO+mrIHyF/
LNjF88585L4858zrLfhsEV/eGyW5DvOtr1P+Iaf6j5A/+jqNI++fyAf6TfXs
wSvfZ1qe92LJrg7zrevTddyP92Aux33U3gr2VNDDfOE9xN8H3iP8feC5Zj0T
95ry3fu88u2wrgZ/3v+RB/SL4qhD0vszeFm9svV55TUgDmfYfZPpoZzioVAn
DNAXj73XeC0w8tzbs/F1Zpfi41z3qTHfOla+s5nGYQH/LsBji/c7+HOD9ceM
h+qvweM+42F6KWdYR97/kScal41j5cf3uZz639bVWBd5pf5lfbxCPCLO03rz
fVV+B/2RB+RR4qn6WuR51DUanyrzN+2a5mnr99m5pR3TvGx9B5zznq7nF76/
5kHn+L/tJG/e54Pbo7h1zDxWXgvw4vmL88Xz83/tnI1P0rPOfmdm8hyAG+De
cdJ/yvSr/9aI4zrzj+J1Nqb5HXCLdaZnOX+Qc9DMXzyNrxx/GeNo/D+N6w2/
GPXMZNy6fNpv4zjt99blvz6NbxxfifzS46v+jTHJvXP5pP/O8TORXyL/Gz8X
is8uz/H5KK/xM/8dgHnPNJ5Pmg8V4rV1fYr7zL+azyfHqu8IfUfoo3878OuQ
P/euTzHvlyX8vh7js8J8BbzN8tnmzT5df8zyXec755vy7dbxc1nXjHjt9rwA
/ozz8HnUp/nwGv7aFOw1/1WI52vk0xvHD2K/yfO87Zzv11Gf5m/l81fCrx/n
KR/n9QvyK72vM2z2arwOGBusN3vvgN8X8tfi1Trfh1Gf8X0mcpafDewN+SQX
94ntr/HsM2z2prFDfDrEp8d8nB/lcYK88e3h7xX8tYKeFfzHfFs5TuMGfHg/
7WAv76sd9PH+2rl9lNd8aTJ9mi/sm0rnn/dfC/28D1vwo3wH+dCn8WUfHedf
+cb9MH1eGI9N8bzpfoeCv+pC/h4y/tN9RPSfaR37TfY7A+wYYN8Af7Ie5Pmw
/vIEebOf9ZvVXwvwX4/398JxOl+vVN/tH9cJ71xfelrgZM+Pt39emz2fxA+H
cT/6z55+3gvPZN/Pt39d2/wPwo/+433SYB+7P87Ihw+47z4iH2+A+fsd9Z2t
V33E8fup8qaPv/c11u+gj/kf51/7tZPPG+b9rf1SXi+bv0vz0/XRGfFgvXQG
H9aXkT+Ke+Al8sGe0rkYIG8P+zR+F2bfw+9mvCfzPFXcQH8Pvmfo573aQ1/p
nrjcF2mdegO/lvoSxn2Z9VGlPshw4vmucG6brO8q9U2GS32QYetj1D9Rhz+O
+7FPpT/Yt9I/7BtKfZP6l3Ue77W8z1J59jXsS3rvQ6b7rlKfwfw5Yp72t7D3
NeTD35Yfl+rqS3Wo4SvhwT4j7yuMX8JNoc+IOkz7DtYZls9Rt2udzbqLdUfj
fdZsfP9V+JX6luir2cdY36Ln5y3yoYa+A/SxT3jv82l8B3nWgVV2nlgHlvIx
jV0xH9SfyywfTL/5W/XnfZjqy/uWR4kP+4ZLdXupz4j7K+FSXZ33AcbX5FnH
Gt/v/U6m9rGvYR9xqa/i3/noH/6esa/g32/jO4/6i99tWBezbuF3mljP30Od
z7/jpn0v9wXT3zGjzmefkcaoTwyzbn8avE5feh3P86T6Ln03tud7v/uyDi/V
fZTPvxNP1+kfEf8PWX6b/co7r+PTmNfZOp/X0Yo1f6LviT7HsPZBDfjQP433
QWaf9j2Jx7e+SP0R9ZHGs9x3KM77Cp3P+wbFZ5yvcyEfWLc3jnX/Be6jch9g
3+nVn3FfvhzjpPaw3mO9E/UMv5tejbyU/x3s5XewyP+XIt/7d1T1Z3ynM33K
v4F/TgV8hp3slw7A/N1cZnpsHfmYPn1/wHwPzLgssT/1NZjvsQ+/56wLdpXW
Nd/JO3hN+/VSXvN+PMPO3A+qn99dl0W/ql7eY+csb5T/af4PtohrOg==
      "]],
    Axes->True,
    DisplayFunction:>Identity,
    Method->{},
    PlotRange->{{-1., 1.}, {-1., 1.}, {-1., 1.}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzNmdty2zYQhilRku3IjuVYUSyniRXn4Bw608vmCdKrvoDvPJl64otOO2ne
XyGw4AIEP4Ck6szEMxbJBbD/7mKxuwD+vPn25a+/b77dfb7Z/PH15t8vd5//
23z652tFKkdFUVxX/3ebwrxvq1f3c72t/qpGefxuHqVpGVuCfd26v4pWfa2l
50doL+3vJKSZ97OfecQH87CKldHYwloBGrqZvufWvYjsJmGmIqx7DG/Kcbnr
iE1Sb/0iFyh12Gvhc8HIEyYnWUa0Vz2Yg8R7Kt2BvlUtt7e32m+1i9gn5lk6
bo5muNbzvUoaU52I1xOiHSs36TCNO1joJ/LxmHl4nwok9tZu9T+KMElQb0iD
7wxphZ34geyD46ZMc7UnoU3SaAltyc8XijF3gwI3MO/Cq0OWHgthEVmg2W/f
/k4b4LVSS5HgMMV+9/XjpxOnf7CIE9WR117CcH7u5ymBFq53uEZjdzNfJ4Nt
dWqe8aI1j0c/DPJEtaSJOgWMEmiLwbhxxGh1WAJMvMzM17H097Pl1+yRmpN0
ezIMwGcf6RXGy6cwbAq0h9L/mcrVZvVsGKunXWZ8DmNnQDuS/msvWtMDX/bk
Iy5QPFA+yarMNlh53w7jPQeOpTNUnHYU7T3w2wOaMBd+HdGD0WzPd8B5H2gP
ujSCCOUmxrFB490D1ASgroDtQZLWG2ocmjnk83oYntUwCgGBFxcJlFdJY5FR
JZ9b3rQsaZnMgSauJzyHl/KEfDkMOS7sHSaVJaWaNGL1AmiHQJs55s25yEWt
WAzTn+ZkM0yCnkqrdORsF0A7Ato0C2lbk2mXVKVA/hBok27ciFxLQoajdOQq
tYrkzOq92FdPUfogC/0CNJc3TB3XjD3OnEsFIN0pD1sZbSVNi99Zq65zwkk4
7gkwVpHJXcoAYKwFV9TpPKIZ9a2BaUocR2/qZEyNXatIwJ+pBqSzw5s5e0UO
JQbMJF4qIZcKGM3yD8CnOnKh+OQT5Fl9hJiREOa5AoaHKgJVIbuKAE5wBqz2
FZwizf2AlynwiYJTUCAPED/GbXkUZtYoevVFe7YM1CMFOJe3qg85cheLyCYk
3rGao8daYPEo6ycjHs2uY+uTUu9qxDSQVt7DKCjSxDsZEsdZyRRNBpgqOAFR
TB0OTsnLZwKKsoQ76oHbOnyNk5Bmi8eAQCVgHjVfmtgVbZ2L1vaOaImCZKX2
pLMOwqdw5vC9Wski5VTxqMAmNyfndnj+MM9nG9qXkQNTv5BtNCfWs+yckP2p
ZqGckwE4UA0oKNFSoO1C6Ag9jgb8XCWXFFWndsTIkEbyttXZb2Wo7TZbOvhM
RUVE8mTlf4OXEmkrLnRGdQG06UBcPlYwHHOZlHZbk/vTmFYCbTHLgZCtmENJ
jKJJf3Brhag0cVmoeqNZpO36GHnnTzH7nhbTwUSE5/dUOYfRzEtrQs5S+Fze
Ybj9WLJqbNMoVFM0kOOi1qVJp24Zl7xPGL4ZIeWoRHsT0QKL9oF0pYMl230K
VSNXIpBXxt/JJCvuMtVAqcieVYYO13kVZ3GDKzEwShnwy122WS5UIFyKEFov
p7j4CkJea6PW75i2bYqa+uSfZd5y/No6lE7XKrY7u/dXut6zcHrkK8F2qQK7
y6Q1Cyy22qe1Ez5pC7JQyVc9IHjdNG4vW2W2ZX6+C/NS1PcJsW7aU7s87+Yb
e0nwLIh5qUK/zDJPTmdjfYYxwn7JwX29lwXlHZt4w2EYVf8fpMuGZaIj41+z
I/xC+i3bz6qYrxTlokUydXAo39IsEV7k8kTvUHoE7Z96xJWawfuDs9A1PYrR
d/PMW40=\
\>"]], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "Identity"}], ",", 
   RowBox[{"PlotPoints", "\[Rule]", "80"}], ",", "Null"}], "]"}]], "Output",
 CellChangeTimes->{3.544275037140625*^9, 3.546268605565117*^9, 
  3.54636402226788*^9, 3.546364411573147*^9, 3.5463646584562387`*^9, 
  3.5463652634923058`*^9, 3.5478113250424657`*^9, 3.547814315157237*^9, 
  3.5478183533352375`*^9, 3.547855781047474*^9, 3.5522139209108696`*^9, 
  3.5522143840778694`*^9, 3.5522162890594835`*^9, 3.5522171465968595`*^9, 
  3.5522172505818596`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{"EndOnViewPerp", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"SphericalPlotPerp", ",", 
      RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}], ",", 
      RowBox[{"ViewPoint", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", " ", 
         RowBox[{"-", "15"}]}], "}"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{
  3.544275040046875*^9, {3.547818518413379*^9, 3.5478185187097774`*^9}},
 EmphasizeSyntaxErrors->True],

Cell["\<\
 Plot the parallel phase function.  The same warnings as the last plot apply \
here.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SphericalPlotPar", " ", "=", " ", 
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{
         RowBox[{"Ipar3D", "[", 
          RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "  ", "+", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Ipar3D", "[", 
            RowBox[{"r", ",", " ", "ParMinValue", ",", " ", "\[Phi]"}], 
            "]"}]}], ")"}]}]}], "]"}], "LogNormFactor"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0.0001", ",", 
      RowBox[{"1.99999", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "0.0001", " ", ",", " ", 
      RowBox[{"1.99999", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.544275046625*^9, 3.54427504915625*^9}, {
  3.5478173616798*^9, 3.5478173623506*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172506738596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172506758595`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \
\[NoBreak]\\!\\(1\\/\\@0.`\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172506778593`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172506788597`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172506808596`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity + \
ComplexInfinity + ComplexInfinity + ComplexInfinity + ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522172506828594`*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{0., 0.}, {0., 0.}, {0., 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.54427507475*^9, 3.5462686137245836`*^9, 
  3.5463644173254757`*^9, 3.546364666209452*^9, 3.5463652654891095`*^9, 
  3.5478113311576653`*^9, 3.5478143220992374`*^9, 3.5478146449383087`*^9, 
  3.5522139265288696`*^9, 3.5522143901718693`*^9, 3.5522162951008987`*^9, 
  3.552217152370859*^9, 3.5522172561318593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SideViewPar", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"SphericalPlotPar", ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.544275053171875*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  DisplayFunction->Identity,
  Method->{},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.544275074828125*^9, 3.5463644184575405`*^9, 
  3.546364679703476*^9, 3.5463652655047092`*^9, 3.5478113312200656`*^9, 
  3.5478143221304374`*^9, 3.54781836071399*^9, 3.5478557874590855`*^9, 
  3.5522139265738697`*^9, 3.5522143902478695`*^9, 3.552216295157922*^9, 
  3.5522171524458594`*^9, 3.5522172561628594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"EndOnViewPar", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"SphericalPlotPar", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}], ",", 
     " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", 
        RowBox[{"-", "15"}]}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{3.5442750540625*^9}],

Cell[BoxData[
 Graphics3DBox[{},
  Axes->True,
  DisplayFunction->Identity,
  Method->{},
  PlotRange->All,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0, 0, -15}]], "Output",
 CellChangeTimes->{3.544275074875*^9, 3.5463644199326253`*^9, 
  3.5463646822930803`*^9, 3.5463652655359097`*^9, 3.5478113312512655`*^9, 
  3.547814322146037*^9, 3.54781836072959*^9, 3.547855787474685*^9, 
  3.5522139265898695`*^9, 3.55221439026787*^9, 3.5522162951769295`*^9, 
  3.5522171524638596`*^9, 3.5522172561838593`*^9}]
}, Open  ]],

Cell["\<\
 Plot the unpolarized phase function.  The same warnings as the first plot \
also apply here.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SphericalPlotUnpol", " ", "=", " ", 
  RowBox[{"SphericalPlot3D", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{
         RowBox[{"Iunpol3D", "[", 
          RowBox[{"r", ",", " ", "\[Theta]", ",", " ", "\[Phi]"}], "]"}], 
         "  ", "+", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"Iunpol3D", "[", 
            RowBox[{"r", ",", " ", "UnpolMinValue", ",", " ", "\[Phi]"}], 
            "]"}]}], ")"}]}]}], "]"}], "LogNormFactor"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", " ", "0.0001", ",", 
      RowBox[{"1.99999", "\[Pi]"}]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"\[Phi]", ",", "0.0001", " ", ",", " ", 
      RowBox[{"1.99999", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"DisplayFunction", "\[Rule]", " ", "Identity"}], ",", 
    RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.544275058703125*^9, 3.5442750613125*^9}, {
  3.5478173698542*^9, 3.5478173699634*^9}, {3.5522142196608696`*^9, 
  3.5522142198448696`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SphericalPlot3D", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the argument function \
(\[NoBreak]\\!\\({\\(\\(\\(\\(Im[\\(\\(\\(\\(1\\/2\\\\ \
\\(\\((\\(\\(\\(\\(-1.8464223633485555`*^-26\\)\\)\\\\ \\(\\(Power[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) - \
\\(\\(1.8519451124400765`*^-26\\\\ \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\) + \\(\\(1\\/2\\\\ \\(\\((\\(\
\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\) + \\(\
\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\\\ \
\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\))\\)\\)\\)\\)\\)\\)]\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\[LeftSkeleton] 28 \[RightSkeleton]\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\\
) - 0\\)\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\
\\)\\) - 0\\)\\), \
\\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - 0\\)\
\\), \\(\\(\\(\\(-\\(\\(Im[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) - \
0\\)\\), \\(\\(\[LeftSkeleton] 27 \[RightSkeleton]\\)\\)}\\)\[NoBreak]) is \
less than WorkingPrecision (\[NoBreak]\\!\\(30.`\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/precw\\\", \
ButtonNote -> \\\"SphericalPlot3D::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522143905238695`*^9, 3.5522162954230275`*^9, 
  3.5522171527028594`*^9, 3.552217256450859*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"SphericalPlot3D", "::", "precw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The precision of the argument function \
(\[NoBreak]\\!\\({\\(\\(\\(\\(1 + \\(\\(Re[\\(\\(\\(\\(1\\/2\\\\ \
\\(\\((\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \
\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\))\\)\\)\\)\\) + \\(\\(1\\/2\\\\ \
\\(\\((\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \
\\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\))\\)\\)\\)\\)\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\[LeftSkeleton] 25 \[RightSkeleton]\\)\\), \\(\\(\\(\\(1 - \\(\
\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] 0\\)\\), \
\\(\\(\\(\\(1 - \\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \
\[LessEqual] 0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\\(\\(1 - \
\\(\\(Re[\\(\\(\\(Cos[\[Theta]]\\)\\^2\\)\\)]\\)\\)\\)\\) \[LessEqual] \
0\\)\\), \\(\\(\[LeftSkeleton] 27 \[RightSkeleton]\\)\\)}\\)\[NoBreak]) is \
less than WorkingPrecision (\[NoBreak]\\!\\(30.`\\)\[NoBreak]). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/precw\\\", \
ButtonNote -> \\\"SphericalPlot3D::precw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5522143905238695`*^9, 3.5522162954230275`*^9, 
  3.5522171527028594`*^9, 3.5522172564608593`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztwTENACAQBLALJFhgxhISPmHG/4YJxrar7j4tyZhJDwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAPw82ZAHM
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
JdxL+I94x+0r3Cj7JOFBwinhCcK7C2eFbxY+QPfCL7oXztI2BwkvED6H8yH8
u/D5wj045mr/dmwr+5eyD5P9WLXtCp6psp8ofKXwTsLPCz8pfITwnvL/Rv7D
9fcQ4c+Fj+a6Ef5Q+FCuG+ElwhcKd6MPXPA12VX4eOHN6N/K51v5nMT1J/yJ
8BH0YeTzVsHHYQ0dn3d0fFbS8empffwznofrCy+J5+EV+n0K/WHuzZzuFeFz
uTbkc6vwSK434anC5/Aeydv+pPyvytv+lPBO2vZh4Su4ZjTWOEWfZ7Dr+1R9
nhW+Ju/ynxY+t6TjoLZewPWmbe+SfZTwjdzHjAvkU5D9DuHzZb8pb5/nZZ/I
fS88TfgSlfMt97N8bpf9fp5Lsq+rbe8Vvlj2nVX/afq8LPtk+dxDH1N49ZzL
uVA+l6uc71XOZfSNZX9I9jG8Q3P2Hy18b972N7TtncIPcA8K3y38IM894a1z
xpfLf6rs93F/8fqS/Xbh82S/P+9j9absE1Tvj6r3Stl3URvP0Oct2R+Vz2Pc
U8Jb6ty26BzrX+JQlfO47FfJf5qu2We4N2XfU/ZHhcfJvpvwI8JjhTfXtkVt
qC5c4vG8t50h/Iy2fZrnufDR8n9C+Gr5Dxd+Uvgajon8bxF+XD69VU5F5egr
MUD/rSy8knAf4aqwupeJ89X23fRMeE7b/Kp92lX4eeGBsp+uz3T5vJWy7Qeu
Adl2kc+z+vtd2afxrJP9A+EXhOcJfyL8Is894e1V14qqS0PaxI7CqwivLLyz
8KrCbYS/kP9L8v9J+Anhp4RnC3fL+VxcwnGW/2ryX0X20WrDTkW/wy7K+Zvj
/IO2fZPnqPCFOb+nOIZPxjtrgfBi7ePtOn+v8UyM8dHChMc1b4bPUJX9j/zU
RU88HT6Uc5nqPUa/faS/F8n+dmz7d8q2jsI1PVdnC68lPEz38qsN7g/Mi/EX
5R+hMi5VWYuEX0t5/MS5GJNz/4p6L8v5vYz9lXhH/57wmJS2z+c+UhlHqqz3
9fdvMf76jWsm6tIrO7Ek5d87CP8YbW4n/EbKddGG52NbjuGFKnMflfky45/Y
lz9kXyHtMTi4Me05gSUJzw98HngPbVev59gKwmNz7h+CU2nPDyxOeK7gk8BZ
+d6rc/Gl/n4/5iu4Tr4VfqXB45qWtO1LhZPyv6fk+pjr+CLqTcs+rOi/L1f7
9y66/5qQ/WjhTxs8H/JllHNdzn1arr1T9PsYbbNMuG3acyl/Cl+bcxlcq5/H
HAuYeZJPo/1fpTwHQzltZP9OeG3hovBXwmsmPG/zXZS5UthpA/M234b945jf
4N7speu8ueJz93Te9/W7XMN53+/vCJfU3vV1HXTT51a9p+6L/sk/wp8nPRb4
Vvid6AM/KPxI0u/3H4VnRv/5COGx8V4+VPjypN+PZwhfH/2fYcJXxfvxJOFr
4/3YXffHmTq+fZnDUXvWU1vW1WdD2UcX3KdaIP8Po5/fIp8N9HsPfZ7Ru2lL
nheyvyqfadFneF32vpx74Y/lt5M+Re1zT91895c9x7WNyn+w4H77FsK3FNzH
eETlPB59sC+F30p6XDBN+Nl4j38i/EbS/f+nhJ+K/t5WKueOgvswpwhvrYPf
onpvls/d0ce7Unhq0n3O33V+dtGNuaLaOkj+Xxbcd71Z7e8m2+PMGwhvxPNa
+FbhHsJP0j+U/+/yf5Z+vvAnBY87Osvn96THQRXhH2K8tlB1bae6itp+W/k/
W/DYqpN8FiQ9ntpe9pcKHh9dp3beEX3UvWT/U/bnha+R/zoq42HhOuEvY1yW
Ef4mxombyf/agvt7l6mcW5Lub/eU/fKC+8zXyX9dlfOocLPwtzHeHCKfH+Tz
AO3Xud6UuS3mI9T+fdT+jvR/hYcKryq8RHhP4XbCi4R3E24jnNO2v+la/4b+
gM757WXPvy2VbUne74U2ujeHyXe26vpGbdiF5xf9TLVhVeZFhWsqZyvVv6U+
rcJ99L21Pntp2yvk/yf3iLbdTfhd4Q+EB/CeEF4ivA/PdMZo2nZzbddLnwWy
78nzWvb9VFeD6prOPSX7UJ7R1Kvyj+Z+pl8qfKXwX8LHCF8nzMTu5sLn0HeX
vY/w+cILhTvqwb99q/vgz+o5sEzX4bra94z2+9K4Nw+T/zXy/4fzInyW8C/0
D4XPEP5J+Hi1bROexaprPdlPZd5W9sHClwkvFT5KPuvI53faJtxNeDH3snyO
4FkpnBM+VPgLxsjyqcnnM/rJwluqbY0q/wThzYXzwtPV7gH6NAmfLvuO8q8K
L1P7/8y73/IPY8q8+z/Py3c7fXI81/S9gz7NtFnn/I6y5yqflm1bxpayf67v
nfUp0R/SMd9ObXtN7Xlfth31KcjeTP2N7odsqDLuK3sOvMSzpNF9kof13Vef
NP0k5uj0yQjfr+9tGLsKH6j2F9X+T1R+Ox2H4Tyvee6pvLuZX+O8UEaj+0Xr
y3YX9ck+UtvupW3b8J7S7+VG92020O/3lj2Xnme/G9136iHbPWXPn7+o/dqa
/hDPN90Xj+o66Ktzv5XwE8LbCW8t/LTwAOGxwq/UPEY9SPfsxfrelutBbThV
9+M2wi/q94MrHhe/LHxoxXO5u8h/nwbbr5bttZrHe/vIvl+Dn+0DMp7bYxy9
f8wD9+O5Kt8DK7bP1Dt5rOrainFijMfBvYRPTno+cLcYj28tfLm2e6nm8XNL
rAusw3OScVDR8/vzch63sS6QZb4x6bnBH3Ie24GHyr5vg/dlIfPejV4L+Cnn
cRhrDT1iXq6n8ArCByXtc7ra8HjN4/yq7AeE/yq63zs3en2hMdYm1hLeJOY2
NxFeV+08ouC5vteYt096ru+9nOfnwNvo9xdKnl/eVef2U32aZZ+R8xwyeDXe
NQXPMbZRvWvFmsWNvOOKnjt+mvF70vOWk9XeTSqeC3pb5ewZ9gXabu1Gz2m/
Kf9eSeMR8n2y5jmO3VT/52XPL9VzTGIud2vh05Kea71Q/s/Lf7L+vpN5mKLn
YUdyvdU8b3K3vgfo7zXk/07Oc5C0fzuVc2bSc8J38U4seo74DR2Dkwuu6zlt
u3/F4+JUzPdSzvmyPavfbtb2z+h7v4rHy2/lPC/bKLyWytyn4OvhPvnsUvGc
Xi/up7Ln6CbKvzXptY9JOc+TYL8553kS5rU21fFZ2OC1hovpwxS9XrKSjn/7
WHNplr2p4LWtq3PumzFfeqNwMWn7itGXY77lhpzXxZg7XTPWxcAXqpwTil57
+1Vld2j0etC6se7GfCnjFMYXzKf9GGsr4F9iPMLczoKU11KYrxud85wk9oLa
eH/Ja3W/R9+eeaFRzDkUvRbYTXX91OD1qXE5OtGe8+kh+y8Nbs+VOfexmQe+
SbictP89Os47Vnz9XyV7Q8xBXSOcjrmmNTOeF+8hn8fkv4f8N+TcqV1nq33d
hVeVz2FJz+F3FD4yafsD8t9V/l25p2Kunm3XET5GPhsIH8mcp/wuod0qc2TB
9s6sKxU8t/+Ifh9acRvaxHoBZZZjjECbj9XvD9Y8D9Uu4zWE9eVzvfalKen5
9o7RVwevGmMf5uI21/X1aNnzq/TzWdtkbvwhlTe44nIYUzAWYJ78PrWzU8Hb
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
a/jpnPkj2KflzK/kOu+vd/f0su+FleB7FMyZXFvfT5TMZXw05+sK3uNWabcL
XuK22u61svf9zLT3G45cq8pZs2D/R3LmSXKNPZ4z1wWfF3Ke06KuDeX7TMn8
s34q75Wy/Qfo+62y77WHc75u4UqtKv9HSuZGHJf2+cG+o3zfLfvefy5nTijb
PpMzf5J93EG/zyh7359SGdsXzIV7Wrh/wfy9S9M+D9jHpX0dYb895+cD/Ir5
jV6zh0P4pOybJ83B+xduUsnrXqzBtY9rLCf7383ml+bS5txyX1yRM+cHe4Pq
v7vkNbamWG9izM5a54y4flZnzrzqd+od8q0UPPZvL/vgqtcdf2k0jwc+5zk8
J4vmiW6v/X6z7OuhIW2+K/dgRj7Lms3PPFv2WtL71Ua2HgWPSa9kjaBo3urK
Tb4/2N8ncuZw8ly9PGfeEeXckjPvhbEz66Qd4t7/M+4F+DCTc37GMidzSc6c
UI4Va6AfhP+dXIMF+2+ltj9dNj9qZd63JXNZymrbigXzfFhzHxfz5PsLj4l5
eNbNr455+JPlv23Rc84nCfcteu56JpymlOeTh8nevej1AtbZx6c8r/6qfG5P
eQ78WPmsV/S8+kOy35Ty3DKchPNSnmPvLfs3euZfyxyv8NSU58w/gieV8jrX
vzqe85vNmxrIegO8DeHP4FWlPO+9a6PXx+GEw98YlfK8/WL5/h7rJvs2ej0f
XtaXwg+nvJ61Z6O5B3Cu6lTPwmbztXZvNK8AjtbBjV7Hh+u1d6PX+eFrHdro
NX04b88JT0l53v4p4ckpz88/Jjwx5bn0fmm/H+AqP6Tz07Vg3Fvn7dmy34MP
5cyn5n20u/zrkuZN3Z3zexx8a84cKPh4W2i7x8vGd+b8fudcP6jy1yv4WVRi
3b7ge3NL+T5ZNv/ttpx5T+BtZHuh7HfuAznzLcFHpv0sh/+5V8wtM39+r3zW
SZrHNTjmzBl3D6dfUfR6wb2sfwnvL3wF62VF8672VZnJ2PaenDla8P0eV5u3
KriuvmrLS2Ufh/vls27SfK2D037PgO/LmRvG+/1yvQs6pLzWdiDzIhXP+V+k
62dg0Ty/BXF/tYdjAG+i5vXgjfLmWDL3sqHwu0mvBc9mrr7B68U9ZH87afwC
Y5ea11MXMVfc4LXXS/RunKvPvcxB6vOd9ucj+WycN3frdPl0F54f8yo9hd9P
ei34V5VzaoPxM4yTal6XnSv7KQ1uz6V59wPfEx6pfbqMvkKcd7h8G8B5lv0S
2RPxDIFj3y1hLitzsKzpf6t2vVrwHNFTOlYHV739E8IHVM2Tm5s1Z4b1O57t
2Hpo24Vq178V26fmzNHrLvuUnLl76yfMfWUu9y/4OayRqb6T9HeXvHmwBHT0
k/3xguc0thN+suA5qD75mK8SfhoeaMnzX9vkzXnDfwW17ewGr/n2y5unyrbb
5z1nxfrv89r2x5Ln0drKf2SD14K/VNvX0z78KPvLPKPkcw7Ppbz5lsxrna9z
+L0+NzNfKf928v9Y/u8xR1Lz+v27jKEavD5+q/y+UTkvy/6m7MMbvP4+iftP
9hfoF+XNNz5a9k3z5vgx7/cw42OV+ZL+fpyxtfCrjPfk82bS6/XdhH9Oej5w
vbx5v8wHdhV+Lem1+6cZc6muE1V3i/b3rAYfQ+auORddWI/TvbCXPl2Fu+p7
jybzMQ7RNXN+s3kyrWnPzcPHOFH20c3mt3ST755N5vCMz3m+F17HxTnPw3NP
MQ/PXH07yoTr2+A1xwNVzrnN5gVNblHZOrZDVdYtwjfVvCa4rfDZzV6LXFu/
DWky76WU9pw9nJZ89A3gmTTFOlQnXefP5hzzsZXs5Vg7W4M+W8brZmvVef0L
+x4Jz/lTzhpwxtSWD/W5qtlcbt778H/+ifcy/Un6h8ShbCl8ac79lg4J90/w
75Tw+x3/jsIP6T4aUvUaChzpVRq81jlF+3hzzX9voP3bV58tZH9d/mdW3X94
Q/isqut7WfjkquNq6GfyvWnC/T248Zsk3G8kvmYz4e7wfPTZCB9tu3vV9/+r
wqdV7feM8GFV83GfEz6yaj4u7xdsGybMb2dOHh5OD7hP+vQUPlLH6QN9xupY
zU253wTnaqr2a1LN80rryXf3JvPNbpV9ouxtG8yR5tqA6zVN9R5T9bsATjjb
wWv6KbgH7+u6fVE+J1S9n/DJKeNn+TyYM/d/44TXKWjnOgmvQ/F86yw8V/fB
uwXPfX3KWk3NfI7eec89w81oC38yaY7QoHh/ddd18qb836+Zi3+1yvhCZd0v
fId8jm4wD+Tu4BcdINxf5VRjHeGOWF9gvmJq8F6eEh6Q95w8PJaT8l6LYK7j
lLzXKPBfpnoyRfvvruP7S8HrFO+oPR/UzMu/RfUe1eA2r63z0L/VHP/7ZH9A
vx8o+2NwMFTWMfK7Rds21cwBasc8d9J8p03haar8/YQnBjeGufQJMa8Ot+fa
jOfL4cy0gcuatP0Vnv01xxtcpPrrVtDxUFnXBxdoL56xqv8R2Q4XPjXvORL2
ZbFsf5c8/3583vPnzP9cG/Pn4OuDk8Nc+oSs1xOYCxqe9zwK9uOEd0p5rn5i
cG+eEP5I+3VwyWsSnwd35S3Zz8x7Pob1ly9l35GxrvCIvNdiGCeOznuuBf/7
Yq2Heap2wduhrmPznjtizWIhY6OS13huyXr9h3O6p9owv+B1okdi3Yf5qNPz
nkPCPizvdQTmxB6XzybRthPyXm9if6/Imh9EXX+qnnTR+3il7GukvGaxpNFz
W+D3VO9uJa9hPMd8XYP5XWuqzKeTxrfr3BVq5nhdzDhb/jcJ30fsTM3c9Au0
7aEN5jW9LHx8g3loX8n30YLXdNZWmc8lbR/FmjDHXH+Plv8EfQ/mvQbPqui1
n42Ez5ffrry74WknzRl7SPXOqJkr/xBj9qLXbB6V/R3ZX5H9Q9YcaubwbZn3
uhK8rOfhNane03leN5pDz5rIZvL5NGm+X688REvPn3fWtbp7q/l2KR3DMxtc
zr9q8xkN5n1tLv8vksYfs55fMyfsXG33nT4TmKtSne8UPN++Rd6cf+btG1Xm
iAY/Wy5XmROTXnuqyWdS0pyxs2U/pME8wJXgkCd9f3UQfjRpnt5TxDSp3td5
xwcXcUfZv5a9m+y/0CeAs9FgzuFNsudr5jKuyXu11TzITnAjk+byPST/Yxtc
/hPCwxpsby+fT+RzsHDHvOOSDhVuFr466fJPDq7jztxfnOeC8Y2q942aYzyO
DJ7kANmL2nZ80jzJu+TzVs3xDxvofJ2rbXeRPSefMUlzLA9jDrPBeLz8X5f/
g/SJZT+4weWM1D79q8/12r5R245Lmnt5VfDxWFs8RvjABts31T17MO9Cnf5P
dF4mNni+d5VYB1+7zpwZuBZDeV+rzMtTHs8eGFy4v4Xnqc03lsxHX0PvooZW
j2/XFk4K3yk8EF6Nvpdwv6ucsTGm7iKflHzu5hnH8yP4VPvlzIfH51n53xzj
4r2Dh7ZM9kNy5rczTn+O6yfGj3PVnutL5sQ/IPslKY+vnxGekPKYa3u9c/vr
c4/qOzH4dQ2yH58zb5Zxek/dZxX5XK/fhsh+sb7/UDnd1d4dWz3O3lTtz7V6
nDxO32k957fTdqfI/wbmxRnbqt6rYj7h8Jx5ff8KP6jtHwgu2VE5c3SZW+io
czK4yTzeQXDAGjw2761yazLepu27CBeFR/OOlM8TwXN7lnF68OKeh88f4+tp
zAfEuPsV1iAaPf/wCjELMV/xEjEXKc9jDFbZQ/R5XX5D9b27Pm8Jv6fPu8GX
e5m+QcpzIMRqVRrMsXxBeFqj5yheJW4i5ij6qIzTms3lmyB8bc0cvxuFr6l5
+1msGzV6zmGA9nEl/faItv9Qtg8aXQ4xYivo+/uE48hahb8T/lT4k+D43azt
rqv5t9d4p8ccyE2yj5e9JryN8BnN5hP2UV2t+vsO+fVgjrbVcysbCWdbPYcy
R9vNLfs5OFv4h7Kfq18Lf1f2uHSW8Jyyx3EfCc8q+5nyqfBXZb8nBqi8Kmtp
PKdl/7bssSuxbh1bHL//jezflz1mvka2sa2OE1kke3NwC6+WfZui4yzWFu7U
BMFezyf5fF32+OoL4dllj3d+rpnPcD79yJq5EBcIfyj8Rdl9oflVcwl498yr
mkvAu+9z+oZlj+Xm1cyRYDz4a838ilGcj5rX3xlT/VgzF+Jc4R9q5k4wFt2h
1eu8n2lf59bM02DM+QTzWzG3drn2ZdOi43f2bnV91LWn7Hu0+Prjejyrydck
9/GZTb6Xewp3Fq6xxiN8nnCy0fHOXZoc87yz7Du1+J7hGh/R5Ov8OF0LG6re
Otop+4AWP48mNHgOnfnzlO7vFubYi+ZtzUl5/bQtgTKtns9iXX3jWFvfj/a0
mO/JOTpHddUJn8+9K/8TtNlt2r8zWr2OOVzH++Ga48pOhsNZc1wZ+zVK27Zq
2/OEL5T/cG17EsdB+GDh/YXXazE/dK9WX6Ncn/BeV5P9S/mcwfhRvx2V8PFZ
Q2U2MPfGc67m+2rHnOOVmBs8WsdkDe3rIvrYOleXVx2vDteI7z4q5yPZJ1cd
I826P+vRg3inyD616lho+H58b5/wvD26ClsT0yGfi6v+e3rOsdHbwu/NWfuh
t/D78rmmag7De8Ljqo63h8/A9zbyGaZ9+pR3n9r7qNp7s77b6rx8E+v1qwq/
EzyKNsJvpc2RXFm4p47BAfrsqHIm6TjcAD9fvx3EddNgnu2nOa/XDxT+TG24
s+o4bdb9KXOnhNflqWuXhPmc/N5f+IdYo1+NeUu1bYLatorwxznzB3ZOOAaW
OuEDb6S27K9PP3jI+t5Pn74cK207Fe41awc5v6P3Ya4pZ07avsKbyfcQfQ4S
flf+t7O2JP9+GXMquwl/lzPnZIh8NsGX943wDfK/Bu6yfF4WvkW4g3A6+JYd
mXtPm8PSXnhjbXcgMWDa9gMdk+ur5pD0ku3QJl+Tibw5wIcI/v5fDLu23SC4
tXDU4dvAddk1YW4q19F2wr8EB2Z1fNSeu1lbEl6a87YHUGbOHML9hLfKmHPa
VT6Lc+YE7i/7nznzbw9kzi24gl3ks2nwctcT7iyfE3XvztV1Pkf1XFxyPOEt
av/JKa8j/6broq5qDn+DrpN2RY/Bk8LthT8Urss55hGu+8Lg9mNPyr6/8OfC
v2Ydg0k5v6PrUHW8AM/1lMraV36LIh4T+0FqTyOxSMIHCOeEP653PCZrBNiX
Rcwm74U/eUdUHeNQyTm+kpiCr7Tt2SXHJS6RT7Zq7kFePgepnFn0LVXmRYG/
lv85JcdkEss5Ktq/FG2Jqnn+1xNfIPtXwn/I3lh1XaWc+f/YW3OOC/iG/nzO
cZ20Lad97VG0nThT1h/Zr1VyjoOYU+840HGBD1N7Vpb/d+wvcS1V8+qJD2Vd
BvutwqcFB6BTzrGcxHR0zzmW4WfhtXLm5P9Q7/jQ8YE7RNzHj2CVXd/qtZay
8N9wmOn/NXo9huuka84xhtTVyvp2zes3G+Yclwpv4S6Vf26sqzZpf3up/b8K
3yb7mSn73CF8dsqcjdVyjlFlvzbLOeYU+8Y5x2iw7RY5x24s4JpRmZsXjY9k
HV/4N+HV1Z66Vq+1bJtzHCtrSWuhQ6NtLpC9d86xq7QNzjzzhLszJc47UD47
0G/Wvm7R6HmAz1T+MF0PkxrMg4LDw7PuduJ9i/77prT1VHi2f6MyZqkNt+n3
qfo8VTQfaCzXZoufh1PRDin4PbILczlFc/I+C+4Qz9sFwdPjOTBH2z1TNX/s
as5/i+1f5sx34F1wGddgi5/5X+TMiaX8D2L9mvlJ1nzhqjE/9lasCzNP+IW2
u69q3RPWdODaMac3UbYP9VtNZU4PzhLvi3vU3knatxVkn8J9LJ9W1mSJgy6a
x3By2lx0yn8k6sXnoeDn874bHpwK7PdFvdT1WaxxczxvUZnXF63bsHfefMYb
ZP9bz95ta+a67Zv3942y/yt7/5o5bfvn/T0hYc453DniYevUx9ixZi5vg/DA
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
zIn9HHUx3zgczk/F9+Nvsc7O3OOYvGPE2a9LgvfInO3VgZnb6Z+xThX4Mp2r
xUXzUMcEH5X77gKV/XPVnNSxwdlmnudk1Xtxxdf8DWFnXugpHZNvitb43iZj
PSrKQftxSviMrphfxd9zo81o7Y5RGz4ruU19s+6DM7cGTwDNQLSaDyVuoGxN
5rF5c8WZUzpR281psm4zXHqOGfNdaDBOin28Mm9ONef9QfnsFdu2ZW5QdY8C
q+xF8HdVVp+sxwTobH/LOmbJ7TiEmIyy60IHjOcK60HkdEBvAW7JloEPkn0a
MeUlx+Sg1cM382+rZR1vBCbWgLwDIxKOaSL25yzh11RvvuTfNtD3202eV1yY
8djqfPlsCAdPx/TKhMdlxI5dwDsrY4x/D7h58hkn+yZZjxGZ25yh8jYsWSO7
k3w+IT6cejOOfaA9HfT7602ei35V3+mS8yK8kXE7sa+pbT/Ttpdyb+r357TP
I4WLWcdSMAfeQT4fyedi2Z/OmDt9RsL6mV+FD5xtyj5T9hcytoPR28SftYxc
1jxr8EpZx3sx/9lT5c9T+VfJf9e8Y6Y4p+tmPa5lXrc9sREVr4+gF0qcBXO/
b8GJKzlfAmNSvs+j3wKPseJ53ccz5jyzLvNBxjFYzL1fnDEnHbx58KLZr3N1
jzxY8drKH7onphSMJ+u7UPL2aDr9Fdd5j6zHprSnKzzDiuckGUcvjnONhvmi
OHdoQC0OTE6TZVHO0owx18B3Ge/juYxfMt6W/UL79Nc4Jg1Z8+XZr5fVtp9L
jjlE02l++HyVsf852nbNrHnlXLfb5h1fxrlGe2penIt2WcfMgR/RsX2naC7f
YcFRpy/0sOxzis43kNP+Tq74uL0DF7rsd+Vxas+7JesKDdPxPL7idVt0d+GE
s4Z1imxfV81BHyb8WdW/obsL95v1qeOjXvxPkM+sqn87Jfjq+Azn+VO0lh/a
RORYYe53GryXFvOj/shZEwmO1tHEMhStz/gqPJOy731yuGDDnzwslAcX6y+V
MbvqPC4NeWszMmZEGHtu1fW9qPKOLbj8E/X9XslaSP+wTlR1PpiX9P1vi8s8
JtpPP/BRHc/3i+ZJHqffT6p4PR2dXrj9rBv2zTum8mz6ABnH+tAnzDKXAueV
c6k6OxetVz+60XqYG8rnnYy3ZR3qDdW1ZsnatWV9P1VwmWsIv9lkn+n6Xqdk
Hd63M47T5Jm2Njxbte0y4QsbrUvHWuFRsn1ctU4rWsp8s554rPblmIrX9NGr
RD+T/s/qGWvR4XNUxjEF4IMDs844Ew5z2euJqbw1LYnpS/Oc12+juFeJvS16
P6dz/gv2QduTa5O+6wFRL+WgdTkqzt0FMffIe3xmxjGdrA+OCp0Z1sXejblQ
8Oc8v0vWMiYOqEe8ow/NOrYLvsppMbcPR2Vv+X7R5LWS/sKLCuafHJ61D3bi
yDaKd9mxoWnDusnH2m5gyfrAvxG/VXLs0Hb6XlBw+U9EPBH+Z8RaA+U/lnXc
FWsuaKBtFvi5mDsFo03HnDxrdn/Q1yv5t2XC/5b8G2sExEzBIVmCJkTJZT0V
c5705abF/DDreqw1MEc6MWHdvC2j/BfDztril9qvnUrW8mC+l+9JCWtibx7+
D2Qda8V+vRnls23/rOeBD6izXhbxPvvzHg8774VC1nOPvAcHxJwka3+rZB07
fIj8r230/Ct9A+Ynievhvca8ZSq2fVv7O7/kOt5Rm9uV/Bv6XfXRhu1ifpJ1
wFnwXUs+l7tGG+AerJz1mhH3SzXrdSXes7vE3Ds8hH5wHcv2Pyfrc8666lEx
D8w7cWjWebHgSrE+lY1ytlCd7zFmph8i/H6T9/FdfXcq2W+/vPf98oTXsBqj
Pa1ZY7bdMet5WtZYD8x6jYm1vz1UxmdNxqx301egXvYP3bHl/IqUjzsxmKyF
k4eJ2Cj6P6yjD45nDn0R+husf7NGTswyz5eWwOQyQ2sDnQ36Jvjg/4C2/aRo
HSvW0HkG0X7iPc8tu160U1ZutuYJfZ/maAPPrUqUD/egc83HgTbUonyOAceC
eHPivkeUHa/N87ExyuF5yPORZyPPUdb1wazttwmMLh+x7pSDHR/i1nmX0tfh
fYpuGzHwxLAT846mOT6nxLoezxBiA7vEtYHeOLGTrHUeQKyJ2nY04zWe38zz
y+eirNfssB8T897Ytwk718+FWccY8qwbk/UaDnpNaBgyJ8867PEx9879wtz7
WnFtf696BpUcizhX+I+St9lafe1a2eV8ouPTq+R2o3nYIdqDjiJlskY8Kev4
TfaFtaf1Yh+vDTvrtugrrhP+u8W+055roj3Yb8s63pa14E/hu5asKbZ/1vG2
3CMTwodxxFVRJmvTxOR2DZ+bow2Uk43rn+fAVnCAy77H+wg3lX1fbJ8z55R8
MfBa0TB/Tf73Ba+Yd+7azPOXHCeWztmO/y4ROwb+M2ueMPlWxjC2aDImJvq0
GIfeFVxixsVom2MnX8yP3Isla4rBvz09xl89ghtMrpCzOD9F57iBH4u++uv0
ebQva5WdOwaO8SlR11Gyr1l2Lpu2wVsGVwKT12a+6r2m5LJ+yHpb6ronb/42
df2TNU+YNneJ9rws/AvrLyUfr0TO/uSpGcc8dJPxh9r2mJTHyF2DJ/wK453A
7PvKxB6prYNSjgUeFNfMZXnrt3GuD9TvK5XNLfkq6zU++CeX5B1TjP/3Ycfn
s6w5wujFXZz12iXP3nodv2NKjh8+Ut9fNXlOYFfeCUXPA3wRcwuM91knPSze
g0n9Xt/iuOVt0Iorm8eyYXCeX6U/z9pNyTp3W4adPD5o2p8ZeGnWnGrGzpMa
3RbaCdd6RNhbgqNOvqEVVc8w7f/OKfP2z4xrgzjrneP6z4Q/eY6OkG/Hsre9
QG2Z2+RrY0KsBXMu1mC8Lr8jU9Y1ZR3wcPnsDHddvx0qPCxrLgH9hO7Z0EEV
HiyflrL90VllbfFI+jZw90rmOhyQtxbHGK7DrPkOh9VZexY75W+V9XvwKOFD
suZWYO+qMj4teFs0fqux7RlZ8xDoV2yRNQ+B8fVJWXMh6J/srraVy+b6rqty
PizE+zHrXBM8hz/Q8ehb8t97EdtXdvs/ZC6w5HxdrK3zzdh8Z9k+anI7T4nj
QPlH/LeuKp+Ns16Lx39EYMr8ijmcko/v8VnzMThuXQIzliSXwclx3xGDQA6I
52WfpzpHlfz31EbHgFzEvazrcHTJf68m3NjidfGbY/2aObEVIq6BnFas+3Oe
4X01h50cWDfkrYOI/Qf4QiX/3Yl4uJqv+1sbXTa5q1hbPznuu848b+DppcwP
6RPn5fXAy/vV2vdFJZ+/QfItlX0eZ/F+LJnjcl5wUbg3j5HPOmXnt1ot4iCm
0X+Wb5uiOVdrhx2ftekjwNlLWSvguNj3SXnrAOD/avTz2cepqnd2yTHpV2T8
zbjgTtnnlByvvWrOMR3ktCI2dlycC+Iyro32PJV3XMYLCee/wE6OqnVytoPJ
kTE2yllfbW9pcSxKV/gtJcfrrhI+PIeH5mwjTxb5LIgLJn9WKTD3dTnnMrAT
k0tc8DsJxxqTO2MGfU6Vv2KLY5bJW0HM7ET5l4k9LzuPLRpaL6aso0UsKnmz
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
FBeALtaKimINN/e9yjp/j9CqJwaB2JMPA8VZLAMjX5St6zNLry3K1kU7qJM4
FP6/JJCd852KNPto1yxLrygqnqkj+KBMdtHXK9IpJv7mLPssCmSv3s/KPJ4p
PuJAa/N8yy/XyFZG/djWDrbyi30P9k1FGhP4BD6oSCeRtr9k6S+K2q+9V5F2
If09w9LLizofTLP0l0XtPfe23300UxwHazd8lKzRxE3PCzTnsK+a5s+I9/1u
f8eJx78nUCz2d56G14747nuDf2K67/W5iJh9tOiI8YfH5qlA/EWMn/sDxe/D
F4RWZT1HUEOV2c33Ej18D/Crl9kqp7h+riXWvpWlH+RdayDt3X/HmuvgwHkg
ED8bfDsPB//wNZGG6wYtOnTs4DVibDzq+1j4kdDD2zon7iPKtMhJD498uJKe
BS9qfXpeQ/Ek0FfEmDfxuZr6id9hXBG3cmGq9Yy1bKS9TxML4kqCIwhdz21y
4v95MhCHzwgr83xB3Czsaclnf77Wy8MXxH778eAfDiU0R+EjutGu7V0RB9UW
zusCTgfMILy06609D9hafKp9hiYqj8YenE5P2m/+ngjz3cXa/HCm+Kl+cLlZ
/hv0t113mn3+a/8/ibOUfdJI9zgjU6zrE/b3K6vCWY+3OoNUcSk94JOv1EsI
5x4Dm18V7v45+76tqhiRsfZ9Q1UY/yf5e1V49mft++aqYkqetu/zqsKPo+3Z
K9X7xXOZXhH+9jH42SqyOb9sZT+2H33Y8qZZ+sOiNC3fYe1OFfP3P8v/oCj9
xlmWvrwq/asd4D1Kxff/muVdUZVOYCvLfy2VbxN9ntmpfK1o0f9cEv4CjalZ
qXyh08EhEsPGfsXy56Syzbxu+cOr0iBivkI/7ER8FlamUaq4jqfs7+dWhW3/
JJWuOT6dPy3vgLLs1ht4LmVhhzda+nRLXwa/4L9sraTP8cnZ56dE8TJrrczh
ZWHb11v6+LLiuddZundZGOrllv7Mfut/9LOl05L4s9+19Kiq+IYhyByG/cXK
v2951bK4M+F5ha+Tc8qHlr9VWdyKc9AsJb6DeHu46BLFpJzIeR1/uY2l1cSk
V7V+bgFm2cqswK5ieZ+X5Tf+iRiFkuyCb1j6uqq4nNl3ofNEzN05cKik4tKb
bX+/tioe6DNjcVFdyfxjeSdXZQP71b7722eZpb+z7++s/llW/zeWfrEsDOMv
lm5Yli/uLDjVUnHOrbT8T8vCRPxY1Rh408p8z3MnnoH3ytI3Vf/hPXo+FR4T
bqRJqbAkd1udXVOdue8nVjLVWXacpXunsuW8YOn+qewBL1n6lFRryxuWHpxK
TxF9111SzRPnY59g7KbSghuVyg4wGN8l73Iqjcq7U+lUorv1RirNLbis7knF
Z4XO2Aup9MDQQJucSgcNHqZxqc6D6EcNSYXxR1/l/VQaK3Cro3MNr3pvS2+S
lx7esZZunBfX/yj73i/V/hrt9Nap5uZvsaNWpYGNzsyGVBozaFOgl40+BXoR
K1PpQMBljkY5fObwLrfNi3sZvsa98zpPoaPyQSotlS3t/bjL6u+QF39/i7y4
+NFk2CovPQa4b7vkdTaH+7xYEWYdfbxbUvF/LLL0iFS8FH9am5+xOr9JxYvP
e4tv9lfLH8d7lYob/otU9mC40pem8tOiC7Q6lS8CXY7vUuEcz4mlfzYqJx2b
uals5MszjVVwPV9nGm9otrzPO5bJBzXVfvPtonSzp4CjsM+qRGXgzcdX9ZLl
vVaUvjGc6E+nwgjDm/5EKhwu+lfM9axln2SaH8DGop/2SCq8Bnqh16WKr0VP
dUwqLhC0CIZlwtijbTgyVSwsWqmjU3GE3JlIkxgOq6Llj02FIULX6+xU8Rzo
ahJnQkwWOlGXpop7QHNsSFl8Gwvs2stTxU+gIXZBKr6HI9j/8M7b//uyB2Mt
SdU2tDTQSrgr0xxFPOeyquokNhStcrTnwM4QM3dTIA7Sa6zNTxXEHQrvJXrk
LKlzLH19IM7SPTNpAoLjQ88cXbx6DGAmXRJs0vtm0iXBLt4yk/Yf+KztMun0
gS+b63WWfT8w0vcPaMWjTwdOB815tAXBxxH7eHMgPs8dM2kCooEzzNo8tiAO
UvZCN/g+B530XWKd9TgD3hqI8xO+TdJwacL1fXsgPi54R2+z9KY5cabdEYgj
93qrf0JBHIZwJI4OxI28zNPwJb7vfQUXKJyftwTioSUuYRfr9xd8b0P+tjlx
K90ZiH8JjfI2sewAxHqOCsR32iqTlhkaRFt7/8Ap2jGTHhP2e3jt4eOu58Z3
7j4wRO9l4jAENwTuv5/bLgrOZwiu/N1MvH/Mhwsy8fiB6W5VUZwttq+3M+kL
gxu6zfdd2JTmZtIfBAc3JxNvIRi0OJPW3hT/3RN8nxZm0heGX+edTPrCzM+p
cwmCF4Nb/r6C7JPNnSMRfDc88PCtf+C2kbvcHgJfNlzqxPyem0lXBfwv+9sR
wT/cv4xt+3PukEyaIMxd7NWv8334wEwaKOihHJ9Jwwhs1DaZ9BzBYB6bSV8D
n/AJmXSF0BuiT/r5PXbLpA2BP+3ITNoi+LiOzqTlAXamuf8uvMdwGl8biH+e
daxvSbFjh9t4mQPe0cbOlpY+w9LbWPplfPup8Agz8X2nwhd05sxo5Y6x/zez
71+t/A5WfitLB1ZnK0u3tnQrS++DToul/22fIyzd1b63xlZr6ePse0f77Obl
R1g9n6P1ZOkbLb1HJB3y/6TOF2LpDql8LkdZmdDq/4+V6WbpmVa+haW3YP9m
6a0s3cw+p1m6aSSN91IqPrYlVqZvVbiYZ63OA1P5Lz63vBOrimlbat/9qsK/
zKf+kjjh+sJzhc/F2nms5W/HvRGryj6wKv6A++37fPvMTRQP2sRjQl8t6GyA
3wQt9PapuD3Q+t43FRfIvVZ2oH3G2LX32fcl9Btrtv3GTfa7y0JxvvcPxAl/
sP29JTbuSM/iTCvzIRqbdv02sc4LxJ1f7M+d950Yb7jZG7JHjzX/vO1jA75r
5t6hPk+y1yTu+hmfcy7x+Zm9AHFHxBxNtXquLglny9x+qY9/zrBXB+IDZx9E
rClxpmN4Rva5JdEcS5y5/Td3N+3nPJOIo/uaQO2/x/LO5uxg+c2wvVr+rAZq
A3Ze9iRTrY07p+Lka20Nf9jK72T/n2z5zVNx+7XEr4jt1f5/LRwMqezJQy1d
SMWBxxg+y350vvXhi3btNqk48L62/m0U1cP5ckXLax3rjMy5fpif5evs742j
enhzro5nG2s+x+9G/Dl+sTlWb2y/sbPP51f63I6uzoJUWDbOG/0T2cqwfa10
G1cza9fhzjsA78FfYf0WJvdf5vKi/t/LY/+XM+cXlb/B/t/UvvcrinOB+Dz0
cmZamcOcS2Gppf/wuLlJll6E9mso3zd5n3o+dVF/Q871Vn4pscwcZeyeNrPP
Evv/DPudQ6u6flPPX+r5maXvxAaOXmFUT5meO9Dyh8XSX0Aja9dAOlnEw3XB
Vmb3vjZUHL1l1euGdXUbZoui3kneR/oKbbCVVv44j7v/Kic+hPXe5ku8DLZE
dILQeWLfQp80sfwvwXXAxRdLx4FnXuvPndj/Gm/zFfb37YqqN+f5lJ+Ercju
8RPL/yhUDDu8bQv9/0Ny8j0Ri0gc4lqP0fvQ8jt5/N28nOIm0fJ5Jad3njL4
ZUb5tayJaJFt6fVgE0Z37bca3Qv5aJZh+0XTiLg8/OloTD6ErcZjPF/N/aM9
iZ8dffNDYul2gau5IhRuE/8dMX6slbRlmbf5AI83nJ9T27bw9lD3514/Y4cx
hFbXoVb+B0sv8b4qc7bMSatpM+//1R77T199HKovibkLrF2rw3pzS33d/Aa6
TptbPe2L4r/ozHOw7wU59Q/tQVOmCb7uorgzDrQyK3gelr8PsWP2WcSchp/c
Pp+wdjsPyeKcuBqYiIhbZ7xtVax38+b2t+/mrFmWfgI7ot3LO3ZNYt95+7yH
zqSn51r6p0jfe+c0R88LxZX0dqjrVuU0NzBHvMv/I6WZK/g/afg5OY+hl8Me
AH6MMxLFilIf9fby5zUxlDYQvrqZlq6rlQ/sFUsHtYqlOiMUBm+U10lf/Wy/
+4GlD2H/Zu0p2ef9UJojdxblr8Qn+qblFWqlIYJmyVx/Z4llRcMOn+sbViZf
K12kO4ryP6IThN7Amzlp96An9FZO/rBZVj6sVX+G9rtNc/INv2X5Rcsvento
HzomaJbgv8M39qrlRbXSGEK/B+0e4miJp63XE7R+KhVls0V774BAbcBnOinU
/vP3UFwNPN8ekdbtZTmtB3BQEBvON/8/3fJ/idTv9Hl353n4Mifejz99vqLO
Pz1/26LmDeYzuCB+ZhznpCN4cKB+wK+NVhb+x19DzW204dSi9hI2ZeW2KapO
6v7V+TFoDz7EqaF82fhD0aCiEaM9zXyCL/u5UNpYPK+DAvUVfuTnQ/mXiVF+
NlScMpoOaDm8YWWa43ssabyhLXVErGfa0tJnJpqrmd/QANvovvspoXzH+Emn
hc51Y2VmWHqTWvlAKc96hAYEujKzc9KcGlnUWoB/qouPK3yf061841rZKa4K
hanjvkpu9wbj999Q+Dr8O2hD4pchbjouat9CTHdSFF8N68Iuvnag5dgmkK4c
sd/oC+JXIg6bMrSNmG/0576rkb2DMj/VKMadWHd01mL8IJnmNHyXaFj+UiMd
Nsp843P1/aHmTJ4R8fb4kTnnozv4XE75Lb08bWjj7RzibaCdrBcPhoq1J7Ye
Tbvn7doUv4y1Ybk/l/u9nwuWvz6TbZBx8qCPDdZQtDBf9Pt9PFRs+F3eNtrw
lfXb6YnunfdrXKjxwDNC/5IxgPbdzoH07/7W5vyxRhp86HLNyinenj6Z6s/3
9lB+RmL+R4XCxOL3vDWUz5c1ooXvW1jv7gzlN0Qr5LBY43mkvR9/ZPJ1wjUy
JtRahv+R8n/7Lu8K5X8EFzo6FMaVPmweqK/QCNw+0PrCM90uUF8Rzx4UtZ7S
b+i60ee1vj9kD4MP7NNAuGiu3TbQ/cJ3co+P1RAeKWvnFzXSuesWa66Gw6G2
qP0evBANi/I5EheDrufYnMbbLT4mG+L7y+RnZIzd6v1ZY/mrM/mRN9q+9xdL
z6vRsxjp7wIb+V8z+UbhXro7VFw/nAmnJrovuCduDoVzZt2519eIRnbtb5n2
qPiLeXb4eelDeB/YU8ExsFMgngHGz8Oh+uEiH2OMYWJ70R1/JCctxasK0l6E
7+G6UJwPYCxIT7Qy67HTcFavUWwv175do/Wu6vsc+CSGh+KUIEb4WtbTGu0H
Mt8XEa96fqhYXbQgD42lzwjOZmgoLDeYmOH+Hp3u9fOMwFSjLw52Gk6OG0Jx
QRD/e32omF/4Dsq+92BeQo+QvgUXfWkofDJYE9JgmEvYq2ONQ54FfFj4nfFB
F/1aOD9GhOKaqNf+DYXRHeD1M/7BVF8eCvPMPNPMx3M91sfnEzCxl4XCysL5
QT68H3AYDfP9wAGefrNGuKyStwHNNXTIsO3cbteeG4oPBDwnesnE+RKnjK4w
eFRs04N83IIFRcsZXOh8MGIFxZV/ZOl1BWHLd/FriU0m9hyd2idzupetfF5l
/IzwOQptssNjrRFwmTwairMC+/hgH7fM1Y+Eer68j4xD5jHWvvGhODeYS1v5
fE7sAPrT4P/B3qNhD94eHNUQn5fq9VfDf2LtSRMLTBz6WaHizRlvjAHeccZD
xdOMyYGh4tOJVSdNDDs6uV1jjR9w12hXEx/H2MsHei+IWaANxCDs5u0E38u7
cJa/R628n4nLxj51vvfhTv6MwAwTO8A4Jx4BDEltICwHNvrZlp/WKi4ArVZi
Y9EHRj94bo1scDuHig8lFrVVqNhAND7Q9hiYk41v+1C8Da/jk4nF14Gfo20o
3gO0MNC9GJSTv2S3ULH5r2DviOVjQltkWFG8tfhOtgsVE0rMbOtQsa5onVxd
FG8tfoXP6sT9QkwN8zBxN1/YGBuQaF1YbN8nJLoX/HOfF8TJUB8PHrrOhaX3
D8Vfgf/p24J01b/wfDTQ6/1bBcULozOCRsiFOcWobhOK+xQb5Q6h4iuJzdwx
VHwrGMHdQ3FEUGdL/y30XC4vipMKHRk0WuDVRIcFnZhzc7Kx7hQqTpPnsqxO
vATEnR0Y/hNTfFCoeFJw6ejcgwmHv2bvQHsVcPKnhPKJ3Gz5A0Jh4zkPnhbq
nPiB3ePvBcXfsWdu79cyB54UKpaNmLiTQ2ny/m7P7qBYcwsavp1j1U/c+uHe
t8QAohNMDD7xC8eFwoHj6+oZCg8/0vL7h4oLYG45zsft3xrDYMXXWf1dYp1P
ia2jPY/7HNLH55/E7/2mnHS30RfnLECc4Amh4hN53/v6ewRmnjSxBvRnv1D+
Ytq2X6h48DnWJ78UhGN/x9I/FxSvwV6xg/cPcX9oORNXuInfF9cyn/C7xCfi
P+sdCtvPO9vL58bQ80f4e3FYqNh8ynf0/K8tv5OPJeZw+Jvg3yD9Xp3m7S5W
fo6n8em/WBF+mflnUZ34NLBHgufGJsn+BM1j1oLOnmavwrow1+thDVrh4415
FW1j1iN+l99ifWlg81i/RGsu68h73rYvYmmHX+zrO21418cw9TA/s2dDO5yz
NnrKZ2Sa99AVn1entZ71fb6n2T8s8PQhnua+wIZhN3vR50bK87v0yUfeTnir
+ibaJ1DnQi/DvX/g/YDeN3rw7BmI8XnH28Z6+qGXYZ/wcZ3q4b4+qdNehTpp
M/sH2rO8Ttwp3O8K7zd8dsMr0sABH/yfUNwyaBuhdYR2APsfOLPm+D0u8Trh
ZOjg8wxaP+gbDc5JFx0dd+wt8GbsGYobB19Lu1CcP8zbnS19nc8PB/g7stjr
hJ8BPod9fb4l5mifUPoOaMGjLT3R52TKwIHwno2lTvaMr8/9oy1Nm4n3bx9K
HwGM3Ld12ouCFTi3oD6Bs+xbx86R/s7LsNZ/43012NM3Otbu+zrhA7/yd2G4
j8+v6rQ/JP2ljwHim/YKxe/U0cfYBH8uX3p5nt1SHz+9MsUvwcGDXjYa29f5
OFzq97XG303WLPAKPxbEKcEc1c3nN85HHQOd++C/rITikETjcK9Auopo3aNz
D14RzvlNQ/E9/mS/f2tBZ95r7PkOKorrHq2Baij+SWIeNg/Fxw4+HK0p8J9j
rPwlRXEYXur1c/7iXN8tkJ0QjvctQnFF3gxfRFG8gpzLOnmb0Z/aL9azm2z3
uKQgnkkwEJuF4q4nbndloPhN4g1I13N9W53PZYr3BE+zV6y40e5W/sdAnJ9w
FH8bCN94KH7/TLHDxPZ+FyheuBvxPZk4JDmn7+ln8Oss/8KiOA9vtPTgovgJ
4U6sCcV5eDI+w0z8isSQUCfxwvB+NggVX4yvcetQsfycK7u5bRk9juaheFMv
sXrOK4rDjXiJKBQPIRyopVA8qPTtkX7tOVZ+YFFxtfCnFkJxqG5t7/oDJe05
iT8phuLTJgYmH0r/YkvfdxGPSQxMEkp7Ars39WOTucjqP7eoGG24YT8qiHsT
btiFBflZLgCXVFSM86mWfiMTbyE8hA1D8UyeAlY9Ez8hcS/lUHzaxFM1C6Ut
0gr8QKIxg55F01DaK7fatUOK4jPk3g8LFI9AvM2WoTRT4Jr+IRDWdAerZ0xB
tqYz7dqzixoPxIPXhnou6JCjQQ6nMdyPYSi+SvgVG4fiaSQWJQjF1QkXbF0o
PtjtKuJQpn82ycR/iyYcsT3fBHrW8OXt4e/CcfiEM/FUdwKjlCl+mfdx30B2
IXzG24biEmHPf5Tv8+Gu/C0QRyV7qvZuS+xl9byUiRuT83hHtz3Cm/1zoPij
akW8e9hVmJe6h4q5G2t9/F5BfL/gI9cEwsrCjflHIC5Nxn+7QPYrNFb3C6TT
yjx/ZPgPD9KRPucvAUMTa28GJ0nXUPtq7I37+zvOXqVLKC4R7n2fQLa+lXbd
yILmJXhODgm1h38CLFpBHAK/+b4OPiLiSY/1NYLzy9GhYgZrPJ84U+bD/d3O
+a217cBYZ1jiRnuEWjsY/0f4ueNaK38M+6IaxYxjryYmmue4u7dzILiZQNhg
eDy+CsS/AZbr60Cx/49am98uiBMDrYHlgWL6vrffv7Egf9Cl4OAy8YTA4b8q
EG75XGvnnrE4QIi1/zxQ3D1x7owr+AT6WPkVgfDVXYg5y8T1cTCYpUyx8OhQ
fBEoxhDcNvV0z4nPZFkgrpJBYJdicX2g1/BloLjCB8AkFsVbC4/BX35fJ4K/
yMRT+ozd47yCfPrwrK4NxMPcB7xDJt2W+xpJuxd+SOx7bd1+eAxYiUzcDpyF
yWd8wiuyIVB7iN//KXBOACs/MRP/A9ouGwPps6Bfsz6QngtcK+sC9Rvjand/
78A7to+1lh1h7f0q1TrLGb+l+7yOt/wfU8XZ42/CTwaP5Z72fVekuOPmVscY
S4/OKR6Z/LPtXna379si8VbBYUUaP+b8srityb/B8kZE0lcqez3w4N1VFh83
8wl+J/QUj3T/HZzU+PLQWgcDDN/7GkvvX1Wc9Q927YiS2gZfO/rpcLZvVhSm
8wXuMRNOErtIIVY7aMOgTLhN7BatI/Fc04adquJuhrd5KDb9SHxZ+FZH+33d
bt93RmoDDmHSlG8W62/XWXbJ05RhzqR+eHFftLr7VqQrC4aMe4RzG5zrCZb+
Jie+979i8aXj4z7R8+F9Jw33OzjUkyLpvA+27yGRdPE6V4SXw78PPvVkLwPu
+ZRImuzwzzdIVA9c7rWJ+PnhnK9JnI+d86mV/565AlBAXvyCaAE0iuXDxte2
m32iBpr3R/qzaxqLD/zinDhO17mflXjaiyNptKHLhy4s2nxgCGg/2HhwpfCJ
w329fVVc2KR3qIpjnb6i7lH+XIr+W6TPtjbf4s8XXtb17iuFY75/pPsaALbQ
Pl/F4rv9Opb9G1zL3ZHmvesycbTy7pbBxeRlW11NzAQYVCu32NJHgBex9FvW
rj2q6n/G9T0+tpvE+nsH64eW9n1lpLgJ8JH3+G9tyGRTu7eROH3B9uGLgIP/
t1g8/OgS/BFLm+BZ65/r/b3IwBjktYaPyqTdQCwy/Lu/xPLzXGNlr/Wxt5N9
D4+0D0Qvb6ilN7P87YlxtvZ3hPs/Ey/6C36/7cG7WJmGVfmfnmokzXD4b9lT
35ZJTwGsFpzJHexzqZU/EIxoLJvZekv/nIoHiPnkt0iYBOaNNZH80fgZ96yq
PfC7fx7rHPyLtaFdVX5bMEOXR9JqwQeILxDunZ5Vcec+GSk+hX5uAk7P8k4q
iccefx1+O9KNrc5CXvwWjSwd58XDwZyz2t/HfZkbqpovwFpd4b8LLghf/qvW
5vaRMBmP5eRvB8+BHQxc16WR4to22L2sScXHsF2kPmf8g8/gWrg6GUv/qarN
4LeoB+zH5rHG2qGW7mT1LI5l68UPTxuw8/9h+ctTzcfYFC7z370lk34H2KU9
SoqDQJMCHYZ+keYW9BA+ScSTcbSlL4hlYz6sIKwtWNwBYGhj+ff6W3pQLJt3
L/AzibgtsRngS8Bu0AcsJJgq+/8hVub8WLaucyw9OJb9/hhLz0vEl9mmIKww
/IvtLH1urD3IruC6E8Um/Gntn8x7m0h3IxcLe0As9Fn2/x+xU7EWeRqdjgax
tDqa1ip/OphDq/OVRNjj7e3vOxWFMwE/x1jCp9zVypwXyx72iY2L01NxSa+z
NrxobXgX+5PlX5VKp46xgf8e3/0f4LhjnRfXcm2s8yXaEc8l0o/AZ/W1938P
yx8RC8MIngW8CzoXT1sbNhKnWSs8T8eq1tkrLP+iWP60cZausTYstvSzlk4s
/UOttFnAKjXKae1Y4evFUfZbN8TC/PYFYx6LP6Ch/y4YG7RO/oqE2SA+mzgX
/NpwnC9JZCeoxXYba67tZX+/N5NGyXrW20T6bN/gz4q17qGhMSER9z+c658m
ih1kXgbLwr4IXYXpibict7H0q4kw4b2t/kncu9UVWP7URPjtzNJnxeLxLRcU
IwEnNDwU/X2NI/5nYCSMRzt7zo0SjQHm/wsz+dnoqz6RtGzo/+MjYYquioVJ
Ig2uureXAYcF3gudFzQlwBOAJTjP8i6IpDmLhsnx/hzhwjjN0ivZy9n3Mfb5
ydLX2HUHFbW2/uz1oE8BruyAorBkcDfwW6TBPnUqClsFxgqsFZomV8fCcuED
ZVzxXpPmmfb1NoC/pG3g9+CG4FrqQQ+ocSx8Gvo8rPXsAdBLOdbrR3Nnk1j4
N7AP5H+Zk8ZOT+8HMJ/ne/1RrL6gH8ANnu/3e63ld7F2/pCTzszpkXRk0JM5
w9MtbC+3l425mZbepKJYbuK4GdPnRsLhVCJdS3/+y77PjFQnWJ5z/FmjL0Sf
12sSRZof0KNBp+hUz0ej5kzPPxR7RlEYpuaRfos2HI5toyjcElrAF0ba54B5
vSjSXgX84qBIGsFry8IZgzEGNzTI27yp90kzS0+0+2tbVf/0wvZTFDYLfaKa
WBpFcaz9HHuJrSP9LvVv5vmtc9Jsqo2Fl7o5k14SOHFwoWDKwZPv7WsxuHT2
RGBm2RfRb5l9gFiVIvUXUyrPZ3is/kS3Gbwo2s1gOOERgEOAvtzM59iTLe92
K1/TQM+Fuuy/uQEVxWXUWn6rWOX5LfaGYGbZH57mv7vS21Dx9PVFYWvBoYET
O5p9fCScWHf7dI3UR+TBNcH9gxsDG/92pPRiXws2tQ8hJ6zj24KxtvTQorDQ
4HbQLiPODv0y9lPgo9lTsd8HH81+8ntvG/eFBh0xcXBR3lAUjpp9Pn35Lx+H
Kz3N/caR9tzMRf2IlSjL97g7+0n75O1vbYqKJWOf3ta+dwWDZeV/iHQPtJ98
Yhepi71lu0jnL7Q+iEnERtHT6q8r67zOPhtcI5oCzIWJt+EB+94r0r70vUi4
QDCBaIMTa4M+OOcPNKY4a9A+5gXa09I6oHVRONsBnv+9z2PcSzGStlfRxxLn
ErStOHdwjzsX60Pd63Xm0WNDiw3MMDw7nAnYv7eNdF5gvWLd4rcae5r2oPkM
Vhnd59jvizpZ4xkX2K/+jIVL7GL/P8f6ZF1ZGIGLLF1b0T5/fKR1B/xkd6uv
U1UaG+dZmQ1l+cBZHxpUtEZcYOm/ysKD/CvWPA4eDIzYUZFwYqHnM9e1835+
3NJ32rVjS5pTryE2oSI7PXFFSUX7/CuJqanIFzQuEmaftYA5F+wxsQ/3FIXn
B//Zoyr9Jvb1z0fCX4K9fNDqea6kuW19LOxxt0iYyeM5t1j6CisTVOTzWRSp
/s/s2ssYPxVhc1jXjvQ23GH5T5akl/QQ8SAl7afAXUaOvQR/Bw4PraX9PUaA
My+4ZPb67PMnR8KAgv9kPiWNDQ3OV+Jb4X2dankH2WdhTnYFrmXPw7zMPWK3
R4cTrD5anCMqioEtYEcqKi6A8YPtgXMF5/TpkcbCxznhq8nnrIHmJ/h2dD+Z
f3kXwPbfZ/c4oSRdszGWfrqk9RxuIO6RtY8zPXESvPsPEI9T0pr2eyy8K/eA
ztSGWH3C/mh8SXukDyPhv8F+302cTkn7cc7S5MMfdY/lP1PSWf+jSM/wUysf
RJoneKdutXufVxK3Fs+mh4/DgwkCKMvXWmd/37sq/CQx0uw90MZaZdeeVJZN
a6WlTyjL5vStpfuVZUNiP4w2GGerVy3/wLJsaYdZ/TVl+X5n49ssy2b2rqUP
Kcsm95alu5Zl89vX6tjPPq/lFMsGbwKcCcT5NS7rfNEx0nwFBvsX/l6Wr2Af
K/NHSf5q1kziTVg3iYWBvwDuAuKuiL/id9ZY3oCybNus4azlrL9ohO1c0r3v
b3WuLYnv7SBLbyzJ//wR+9VUfKsHWP76kvjh5lqdh5XlMyHuepj3CfdwVaSz
/E2ZNAQ5g//Xz0FgJD+tSEsOLSa0blbF8vOgb/NDLN/14op02eCFHZlJ6xAu
pdDudfO8sBU3ZNL4w/ZM3CDabJxhzyhLy42zPLo8nEXxP3LOpQzP/UC79zZV
9T92i73cdrHQ6utels11AX1Zlt9gZ58P2TtwvuZ+OXf3sTaEZWFtOlcVZwRO
D78S9gTsAx2qmpuYl1Jr//Z58Zcssvp7lGWPh4egZ1m29qWWPrYsW3I+1nXY
KPJ27U55cZaA52YPBB6bfRBp9mDo6XAOB5+PXa21X7uzp1nraddO3jbsNLu7
reZK+83vKtLcnmDf7crik7iTeMeK7CvcSwv79LZ6JuGrL4uL6ylLLymJLwE9
NOI68enwnhGHRZ/jW55Tkn/5Kku/a+n2tYrfhBcDTowdvW3UP5J5rCS+sfst
/VFJOrc7W5/sWdQe4AbLn1sS59mmvjdgD/ac5bcvi6cEGwlxYTyvh9nblMTN
1tyfO7+JXQQ7FHaG7T2NbeFxK7+oJB6Upt5X/B3MN2db7B7EFDDGsHWATceW
Aa6eM9YWkfbe7Peb+Tp4rtU5iz6xOgdbenZJvCwXsD8sidcHHP6WUb1psf57
c0+zX66PJ7P0VCu/f1n8Iu/6Hr2p2zyJmWM/fDn2q5L4LcBc7FsW7gJbC+3E
pnSx5b9ZEhcRv7Oltxlb7JSS7LEnVTUHMf/0t+9pJXGBYNsjXo89+YmWP7Uk
DgziwxiH2IKOw2ZWEofHCVWNb8b2WJ8DweXCdTG5JL4L9gtNfS9xquVPL4nf
iPi5Zn7vxBdxlufsiU7glERc++hirUjkB5uRF5cE79RE318Rjw9/Bes360OV
Z1uVXQ77Ehpm2KnYp7AvBE+Ibfc+n0No/wz7jLc6llQUl0fM/sFuH8Q2iJ2I
a9lP/mXtWZ+KT3SnkuYI5gdwEQ/5b02IZAtmX8r6P8X3AC/YtVvatTUNFSMJ
9x++7pcsv2Wqs9euVek14o94wfdJ7E+wuT3kbZ5bkL4bPM2cwR70+7rY2nxX
LP6nLNZ6wbMgtvPeSPa39+3agan47xkDM+0z0cqWKtLlAt+IbfEpbz/Pk+dK
Pr6Sp30uqsYqd5fPvT3dJjkBu2ms9ZHff8zbMBu/cSrtdOL1iNcFx8eYYo7D
vgeum/Lvu/+RfgPDP7mi+Ef4Fh7KC2/EmOdZd/c97Y8VxVfil+Pdvc/vd6tY
f2eP+klFsZnwM7Tw/uHMiJ0Oey5jhnPko94GMJ9jvf2PYnuO9W6+Y/fSN5We
Nrx29AnPa5bld0plb37B8l709jMGJnu6TSauDPhJ2OuxryXW4Dswqqn0NIhB
mBjJXoRtf6KX+d7KzEil09U6E68F/Cd7WP7CWJjK57xO9snY9J+1dKNa/dak
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
S+9/7JmX+DgBB/V/TfqOxw==
         "]], Polygon3DBox[CompressedData["
1:eJwtnWWYHEUXhSe7Oyuzm90d2QkS3N09BCe4BAgEJ3iAkOAOIUDQ4O6uwYK7
W9CP4O7uBJfvfTnzY57p27eqWma6uurec07NMmLPoaOaCoXCwx2FQgvfy5cL
hY34PNJZKJSaC4W1uguFi3oKhTNaC4V/+hUKK2PfiP0odjcVp6kWCuvUCoUp
Rbap/yp1z8e+CX8f5V/CvrdeKFxAnV7sGuVXx/8U5fso/31/jofvSeyb8Z9M
2Zv57M7+qbTfn7LjKDg95/cR9nOVQuEY9p1C+39T/m3avxH7OezpsLfrKhRu
pb1nsdel/cXxj+DzBddzB/5D8Q/Dfgb7Lfwzcj5Dqf8+x58e+0f843sLhdk5
3pmUnwn/xvg/xj8Qfw/2itj3YXMqhfloaxs+n9JeG/aCbG/L5zPsdtvnXI6l
vTlo7zPOfyvu39Ps66HwPNgvU/Zk2ruQ8614v2h0AvYF2P28fo43GPsujlf2
+Gwfzf2YhfY+wb8IO7fj8znHu436g/BvwjWswzHuoM5y1L+FfS/RXo3yU7mv
2+D7CN8DlH+Guvdwv09jXwf2Ctgb83mC9jr5/dfkfM/DN4H6f+F/F9/NtPci
9vTY0+E7huubjfP5lPan4D8d/+X4q/gP5HjrUuZ+jvcx5/8y13ca/svwN1P+
MM51M+o8z/Hexr8029vz+QabQxc6Obc1+HyL/RDtXUj9c7BP5ZgrcsxluL6b
aO957x/t1dg+lvuzKL5vsF/Efojyz/j/456/QP3j2XcW5f/1/8bxt8b3Ief3
J8fbDHs77M+xZ8Y+gXOZn/pLcfyzsS+g/iD8J3H8ZTnGD/hfor0Kbc9JeydS
fxP8z1B/KuUvxT4D+wCONwD/h9yPcdQdQN2jsXel7XP59LH/a+wS7Q/FrlBv
W+zf+D6b8utQ/kLsQ7DX8j/P+UzxeeX6b+P4r9F+netdlrob8umm3LyUmYub
eDrH3x//T9Rfk7K34t+MfS9wjq9zvMvYdw/+Tu8f5XfB9xe+pyh/FOe1M/af
2D9xvFE+y3xmZH8b5f/keyT+ftR/hvKP0N5o2tsF+1vsubCP5PeYjvM/BnsR
6q7L5w/O7X+0N8TjY59JGwdSZweOfzvbb3q/aP81rvVi2rvd66P+69j3U35i
T+7nU9Q/EP9B+H/G3pH6d+N7H3ta6l/I+d2G/Qb2QPsf6q7NZyrHPxT/Kmxv
xKfG/RrEvtlof2s+H7B9FeXfpP2r/A9Rvz/lZ2f7JK5nA67nV+w6ddfh8wvl
z8F+krq7UWYryrf6fODbmM8A2udnLOzB9vl8ZuC8ipQ/iP3n4diI9p7F/wr1
z6b+tT6v1N8K/wTOfzvspfC/gf9q/A9jT4N/YXznUH9d6v9Ce5Px749/X/wl
/EtwrA349KeduTjHE/EviD3Y/oL2nuD69qP8PpT/kfJz41uLz8/4D8C/JfVO
5Bhb4F8Sewvu7w3Yd9m+/THtrU/5Lsp1Uf8h7PWwO7H/ofxsbK/J5yfa2xV7
MepfTv2Lqd/k+4NjH8f9XJrz/w57W+pdi38i/tUp/zf3aQ/sNuxnab+N+nva
V2E/Z3+PPRm7zPM3L/VXxD4Ve3f83+Hvh707djP2ZK+P6z2K483M8cZj78u5
3cVnU8rwVViJ5+kezukj3ye09yzXcxD2wT4flD+T8xtF2Xb7L+wfOb9h2JN5
Pm7F/sXnnd9jddq/wOeZ42/p/xn/3dizs306/tXw/0T7j3E+e9P+KNr7Hv+x
9k20eaHl2Lcyx9+Kz7vcvzL98ZtsX0+ZJ/1/+/6j/nXYT2D30N7h1N3C/zvH
+4rrGcj1bID/bezpsKfDXg/7dexpsQ/kfI/nfObnfB7H/oT6J2Ivg32i7wPK
30n5d/y/0f7xlB9K+09Q/2fKz8v2mZQfQvmf8XdSdiz3tw/7A+wq9Vdl32OU
56uwDfWvps7VtLeazz83fTif2dj/FeV/5/gb4H+E8hM5/tNc7xgq7kr5duwj
8W+Pfyr+H6n/Af678X+If0b8c+I7i/NZuyPjh+G0O8b3Lf65HJ9wvy6i/G3Y
Hfjn9Le3P6Pcgfifor1R+LfH30Z7Zc5/ZZ9/jlf1eu07+cxE+WOxf+N81qP9
B/BfT/nB+DbhMxD/grR/Mf678L9HezPgXxHfMJ9//GviPxj/+vgfpv4ntHc6
+3fDbvL5oHyV/88O2L/gfwJ7MbaP4vqm4fo+pP5blF8FewSDjb3sXyl/CWXO
pX4B/zlsn0eZ6RncHc++T7mIJX3eKH+a4z7qns85rMx/61navIbyg2hjPspf
R/nzsc+n/owtGXMtxvZg/Atg30z5RbDnx65jX4J9FuXnxe7DPpzyI7h3d3O9
Z9kfcIyZONaWPhP4H8G/D/Yq1LnW9w3/8f7Yc+Lvxj8v/l2xP+ZzI3UXoP39
2V6b8rdT/n3KX8f2JbS9cEt+00XZXpb682LfSPmFuNbbOf6CjlG45lmpvxP+
Ufg/pvxn1D8Y+3js7X2HU+5Z2vgcu0r5r7lf3/n+Z/+/7Lu8lvfPZZRZCvsj
6t/G9tFsb0T9Exwb4r+YfXOw7yr8S9L+3GxfwfFm5/i7YI/B/hJ7fC3j4wsp
Pyv7Huc4l1BmTZ91zv8x7Iuw18B+HXt6x1PUX4uyF/m+tG/1P+w7hHtyAseb
Hn8//Jvh/5DtxfAtzrWc6vuJ+otiL4a9Bf+XAvZffF5pzpj8FerfwrnsTf2F
uJ7/Yd+EPRp7Huy9PDeekYnc+5scs9nXcoz98A/CP4Wy89H+QNrfkfaXti7+
A/B/yPl/zP1c3PGZ58Ph36X+XvgPxL8y9Y/i+bzH3482pqfMMtTfB/tgfy/q
n03di7negziPGuc8hu+l/I9z7nv7e1N+Jso3U/4M7H3xb8L5Ps25Tvacafc4
9s1N3XPwn0TdWSjfQvmtneNQ/w/8/2tOn7Uf25tS/znqvsDnFsqvRvlBlJ9M
+b3xr2R/RtnH8O9Ty3j6XN/3lFmY79ko38r2WRxvFOW/4HM77W+MvSfbX/K5
A3tz7JNp62zqdLRkDLUHvvmdQ9D++viXwjfCPgH/FOyVsB/G/sZjlejTfT6w
h2CfQ/1ruJ9ncs8OoOzV/B7HcG6PO77kPhzO/Z+W7ydo42XKf8X9/8exOvYN
2BdjT6T++dQ/jPqTqD/Z66LOi/g2xb4W/1n4D8R/LfbN/L4V7OfxH0b7N+G/
EPsI/Hfi37me3+/K3vSXy9oWbRa5vqH83stjv4Tdjr0Z9g2010v9p2jvUNr7
leu7hjJH097D1L+B9s/Dfyj2Ldi/Oza3D+T8J1DnC/sK2jsFexR2Ed9E6p9O
+Rcofwd2CfsxfCN5Pr5xbOOYm/L7sq/D+S7+Myn/kteLXfYc8e1J+a+dZ1H+
dMrvw75fscdT5kLsY7Ef4twe4XpPZt9l7Pse/z2O+dg+GP/1nP+5lDmE9m+i
/RuxL8A+HPt27D8pfy/lr/T3pPzKbD9OW99jL8rvvQr2806UuF+DsG+l/qXU
P4r6Dzp/5VyfpMy7lG/lft6KfSL3cEH+b1dQZlbsp/B/gL8L/33YZ+MfhP8h
/Hdhn4a9BPat2Pd6L7CXw37A/wT2BOyFsK/CXpG2JnE+b9DerJxPxf4Gezbs
ofwfe7EXxp4Zex3s2aj/DHU+we7P8R/DNz/7ZmD7eO7vLP723L9b2P86ZdbA
fhr7Fer0cM2LUPY5tn/y/0+dxbFf8BnGXgp7F8pewufq3oy/nsbX32NyL4dh
X+67Bnsy9h4cby223/X9Rdt7Uf8W7uclHHMc13a/8zf+j4tiz4/vFG77qrT3
NuVrlF+L672Z8hfjP9J75fuY7T19P9HuPPaJjq35bIE9jDp1+w/qL8H57sf9
WIP9r2NX8O1O+dWo+z72AOx1aP9Z/g/bYm9P+QGc8z3Y1zjfb8mY9U7sqxxb
tGTMtgHtv0b5XurvSHsf0z9dyfHHse8cymyDvx911sH/Fv6XOf5E39H8ngWO
ty3bb/G5FPsD/C9Rbw7K9LJ9tON/tq+2j8X/I9f8PPa1jomxf8b+h+Nd7ZyR
evdxvHXxTWb7H7ZXoY1XKX8z+0ZQvovjDfZY+B/B/xzXNwj7TucA+G/BXo7t
M/HfjP967Neof6tjQvzd1H+P+309x3uQffux7w1+r7nZ182xTrD/8NnFdwq+
XSi/Cdv/0N7qXP/xlHmL8vNSvsb2iZQfhv9Trxn/yf5+2O/bB1G/nevbkO3v
8C+Ofyf8G1H3Io7/AvtPpsxWfL/O5wK2H8E/1PtJ+Srld8N+FHt2zqmH7U34
v2zp78XnfMrf5zua7V8ovyzl78Qejv0j9lLYt/h+dH7rmILyp3E/lmL7eGN2
3J/x3i/eXb93JXbwBde7IvZf2Jdjf4f9r+M39rXx7tqWTz+fZewS2yP4NGEf
ymda2t8ee2W27+ezL/a7tL8sZX/tylznc9qbG/uIroxl/8beibIf8LnW34f7
NSf+w7sSC/oD/99sH4C/gn8o7S+J/+iuzF16sLfnXv7AZ2XuUZfxCu7vddh3
U2dP6qzG90N8DmL7b85nN9/t/J+PpuyaHK8Z+zA+0+HfkfZWZPtK7s/j3J+X
Kb8C9t3Yn7bknbW8/zfsj1ryzlkJ+z4++zj+wh6ijf8L/NNy/1fFvhn7Nexf
8a+N/QSfIyk/L/612H6cz1js2bGLnP+1xi+o8xJ13ua67sC/K/7p/D14Xq7B
fxH+B/Gv6fWx/TXbM1F/M+x2rm8zru8G7D+p/yr7zqb+ftR/h//v/MZb8J3E
PTyvlnjNufYzlJmZ71Vpb7mWzCFn8b/JZ/XmxFBfo/6c1G+3/6X+nD6Pjjl9
nvHfb6zSmAJtrEsbc+G7zDkQ/j+MAXE+Vzinwf7U8VU9/fcM7D/G+Abtz077
TbR/HPYalJ1CW/2LOee5sffHHkfb3dzPWSl7m/Mz6v+FvTD+653j0v7q2Juz
XTI+4fyb+g9jz0zZDrY3Nv5hPI72NvT35Hyeouz1xvyw26j/MPaG+Nf33eyc
kPoDsP+i/VbsxSk7BHt5/PcYI8ffif1Zc2LGbdh92L/bX1L+Wo49jn2zYB9P
+Udpf1P8Q6n/C/7rHLvgnxX/ifiXpP3h+DfG/wz2RX15Xx1Bmekdk3O/H8C+
lnKbOiZn/3V8Nse3Iue/DtsfUX8mzmUw1zyv/28+G+GfFv/SbE/is7PHczxP
O3NzDnXK7uD9wXcM9c+n7bH4p/Ndjz1nS2LSizn34rOtzw/+ss8S/n+xN8T/
g+9O9h3n+JX/3wP45jG+SfvH8n74g+0p+M/Cvw/+cbwfz+B65mJ/H2U2dazN
5wz8Z2L/6PvcPgx7S8qvz/Y3tLkI17ct/ir2jNhNnN+mHP9FtmehTgnfOI63
Ry3x1FMotzhtdHp9fOZku9eYFdvN1HlLH/YhlD+P8qezfxn2DfTba2hJDPus
WuJ157B/Rft8vv+1T2e7iL9oefqsgfQto/i0+qzzmQn/F5zzALbncXzQkhjS
KthPYf+G/SP3sxu72/E75Rcy5uX9cExazDuoC3s8n7nw1/FfyPNT4j9yB3UP
4i93ku9zftNLnQPhvwx/F/778B+M/y7qFrk/92Ovzu/dhH9d/CNp+0ru1+Oc
+461/JYt+Mc4dqD8nvgvpn6Z32tDyo9xLIX/PuwdKL+BsQTfIZQ/xMCmcxfs
/bEPx25zvMRugyZrUX8H6l/O8Xqov3ZfxiI7UX4lx6vc3+M5/01o8wDqj6V+
f+o/QPXT8L/B/ViVfdtT5wHsnTn+MMp+Tv0nOP9davkvFLE7nc87V6fsmxyv
l/Lr9eVduzP+1TmfRyk/lfIz458Z/0H2RxzvSPzbc/zHaON3/JsY78c+Bnu9
1uSv/qX+3pT/yrES9e+h/na0txb+j/EPwf8E9p/YsxrfKyf+cVRP4oVv83uM
4fy+of5hxv/97+Cflf/Oghyvj3KH4u/H+bxF/S/wP15L3zor5Reyb6TMGtgf
Ydexj8ZeF/sT7Hc439Wpvwvt7409K+d3SF/GKuOwX+7Ou3Q7/JcZr8O/PP61
sLfDX8HeGHt/7F2dH2FvwfEH0/772N8YJ6P+H/gnYO9Vz3hnY9/x/r6cy0H4
/8T/BnaHuQ/s37Ffx/6N9gbT/jrY52PPiH0A9l/YY2mvC3sF7HWxR2APND6N
/Qv2EdjNnMv+2L9iv0b9V7ie1Wh/Z+wrjB/jn8T5HMlxh3DOe3G+a+PfF/8l
dtH8PsOcb2Ffb3yS9jd1/og9kvbbqX8odgf36x38p+O/gfaG0MaulLmI9o6j
7Y1pu0z5WYxf4PsW3xTKb0bdF31fOr9mXzvHG+58gO2Jxrs532Ops5GxJ38f
tvej7M+OhfG/69gK+yfsw41fG8un/g/Yr+D/m/rr4T/CuTH2aM5nGew1sM/h
+pppbw/sN7Cfxb8f5Z9kXwvP/xzYD/N/2pQ2lzT/Zf7SOBb76vz/2Cz8yfnu
yfE+pP4LlO8ydkP9+Sj/Oudzjr8/9vytyRcO4P6M6svc4BDs0dR/i/Zn53iL
enzK78n5vI//DtrfEP8r+KfDvwD+q7jeF2hvDuP31N/UeAL3+0X2zcm+Xo5/
ENsLcLw38G9hf4O9OPZCxi/MN3H8j2n/UPyb0P6btD8bdRcx/8e1jcM+wfg4
/t3q6e+n4bi/Yj+P/1D8R5rfwZ6e7eNpb7C5Per/r9yI5/Xk9/7MuQPXs4Jj
G+wdOJ/n8E3D8bbkfLY2doB9BO0Nxp7M+R1Gm0dh/075Z82H1RKL/RN7Xc73
Bez+1J+b431nLhS7y98Lfwfbh3M+PRzvPfwvOH42B2z+3XyB/xeON5Ptc7yp
+KfU8u6fG/+v2K9iDzTfjH1wPeO32ag3kPbecO7gO5z7tz/+OYzl0d7MtDcF
e3fqz0L5+fl/bE776+F/AP9XxrOp/5H3h/Y/x56J8iOxZ6D8HJRfnvJrcn1P
4+/H8Wen/O5cyxfco92d53LMaWhrV2OubD+J/3LHz/aVlJ+N9r4qZ/zzeE/s
fzn+bpR/jfKTKb827T9by1huTuyh+O+n7Getub578T1I/fvY9yn7vqG9yexr
9Xxo72/qj+GcPnFuS/nd8M9E+Xk4/7U5/93xv075GR174t8I+zXsGbAXwl6H
491L25+YD8fe3Ngpdh/23NT/TCxFLWPnWTjeA2zfTJkHKfO1fTb+B9n3re8j
/JvR3kP4vjGfQXsjKPsI9k/YG9Pe7P6f+jKXOoryz3UnNr0S53+W+VLKL2lu
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
K5wYuTDic80vi/EV2yv/wNzzF/Xg+MxB+2L8qB7eh3yPoyi/pDG+tnA87u4K
50Ouh3h74+9itMVmy1H5rSf4zGEc/wRzuvgXxz6kLRyU73qSXzT3eQD77uwK
R0Vuypn4v+0J/n196u/Pvp97wi9ZjvLjsI/tDsZTbKecFGP/8mPGFJID+KEn
fJdlKX8o9k894a+Mxn84dnNv8Pfb0/7Nbcmrioce05T8qnwYMdViqc2XnNOY
/00uhJNc6EnMwViDHIOhjfjDFYXkQ+Qvy3GS2+ScUf6m2g9rdWQOd1ZjPie2
UE6n3Otf65nHOX8zH+sc3Lm3mIau3uR716D8023J1Yp3MPdtzlautfyr35rC
uV6wJ5wsuVjOEe/tDjdqSlsw3vJD5CTIRTA/3dOb/PiazqfYtw/vqk98p/UP
f0gukXwasfxyihwPmE+6hnaO4Jof6mrkpNvChzC/bQ7Z3PHo5uTm5euIXTZH
/0hXcvLm4sWDy70Sr65ohxwsuVaf1YNjF78ut0X8+u5N4biImxYff1hT8NNy
qT6tB+cuvn2ZvvAbn+1On39idzDDYoXNJ/XrTf5+f3zXsu8dtjcyh9AezstJ
jfzN0+w7l2N8Yn3qDGkPZ2Jqdzg1cmnkMJxRSfzzecpfTfkfusN5kesip+GD
7mAJ92sP52W9RrxGbJKYN/EuckjkjsjHFO+yPmXGtQcDLbZP/N06vcH4mW+T
4yG3Y5ZicHnyP8TOic+Tqyj+/LimcBbFRou/Hd8UjPSRnO9XnO9j/cN3kT8k
Z0mukhwBeYryReXCyVeUzyGnSi7VofyeY6n/JfUf6R98slhl+W5iG8Usy6WR
72ZuWk7NfH3Jz97fnTGHOGn5UXKVxEuLr5aDIPfA/K18PDmrclXlMIj9lz8p
rl48/b894fOtRP2r24JjlN90USF4RvGTcljkrsin+qsnfIQtONfzKX97/3DQ
5J7JUXimO1j+P9vC4TmlOxwUuSfy2/r5vu4OD0/+3R894adsRnunYv/dE/yH
2JwL7OO6w+mRyyNG5LbucDrkcsgha6O9j+vBkYgfua8rHEW5idfhP53yyxpP
bAtnUeyrfByxoGJgzaXK7zHXak5V/KuYcrHk8klewF7P+SO2HDpxDuLZxT6I
dxjUiB+a2xYTIX5+MPuGtwejLd9Ajp3cukOak/cXv24u3/y/fFhz9du0h+Ow
Zl/4LC93BX+/YiNeai5aDIBcbvHuYnPldIuVFv8sj0vMtDho+WEXFoKHFjsp
/0qspRhKscvyMcQei2EW9ybfWWya+LeD1Q7gP7k053qoMdfe8Km2xT9TKWND
x4jyUuSjvIrdNCC8Pvl8B1D/ceov1RxNEceiDp5OoI3tjXE51u0Oj0z+mGMd
xzzyvOR37Uo7K3RlrChnaWe2l+9qzG2x3+gNf8ncdLWUubFz5EO7g698lvbO
7w7vS77XLv4eXRkby3FY0r6oEiz/IZ08s2y/V82zMkt7sAJfVMMPdG52HP7P
sH/FXqY93IS3q+Ej+uz5/L+J/WFLOFqHYU+pZixwmhoi2P/DfhX797boAc3F
+bR2hlMlFkX8v9okYlKOoPyrlH/bsR3tHY49H8dcnLJndqa/eB3/ey3hsDhf
/AT755Zwtl/vDV9jaFPG/PJX32ff3KVwONetZXwsd+Q1Y+Ccy6CuxB7kzBj7
MAZykM9ZU7Ad8vnVFhHjob6HmgBqAcg3EUsiX0htCTEl4kzkw4htdUyrnoMc
G7k18iMcqzpmlacqP1U9DzkuclvkH6nPJIdZ7rKcI/Ve5LjLbTfeIT7tPefn
pXBWxQ9+0puxtBzPDWsZn89A3feK4X983puxqRziD3vD75Kbu4D3pDd8Qrmd
85XCX/yiN2NhOcZf9obPJVdlNfZ91Ru+ldzTIc7PesOvFtu3pvyqvuDL5F3L
t16/lvnJQM7nLdr7tDd8MLGIjqGNjzq+nrE5mkuf9YYfK3djOZ+33vDbNykk
pjOe3/sj57COnfm9D8Z+CvtFc6/8vzavZH7tXG9p7OGVxAOcOyxqf8pvu181
Y/spPPtbVDL/vgB7sJg/7JuwH8I+yj4de5IxKezjsUdWMt90bH0K9qXY83AN
1xlL7gg2e69qYl9itC/BP6ecNcd2xmAqmQ86lj/LMQT2bN6DYjSMLsOev5bc
wtbGiCqJ5zjWWFWMZyXxMt8la4kRx56eY/7i/L4zelEb82nuCid/Zu7tSnw2
ZPtHyixI+W7q38v9vptjbFNJ/Mm57zDzJZXE827EHmFODnt22l+I+sfJgawk
Hng9/i3F+GL3Yt/XHA2rnbGvN0aD/zBzLpXE55xLnEj9HSqJB96GvTv+Y7A/
qGYuNFd7YhuLiQEuJsahltUMteTTzDUvhX8Gyj/G8d5h3zLYM/t7YH+CvSz2
rNhPYu/J8RbD7qsGO/pcI59Q8fyaoymyOPYAY5rGo8zReD/9vZujEXOC4xvs
vzm/1cyHYd9WzVj3Fc7/IOxHsJ9rCaZ2CexpsR+h/ivUPwD7rmrG/m853vZ8
fSaK0cBxfHyNv0dLMJx7qb9ijAn7Tuw9KolXGAu4DHtUJfED577XYJ+PXae9
i7wWc9bYL1YzN73ROZbXK8cR/3Xcj9H+X7mni7I9gc+wSuJfxmJnpvwY7Lnw
L4LvFD57Y1+O/66WcKQOxL4f+xnsD8yRVRJfE5s2Xv0k7G+qGXue3dCLksMq
d3VqKdg59UeWLARDp36anHm58iu3hA9hDszcl5zqpnLyo2LFjPmIb5TTKZdT
frj8EjHTYqXNsckXEaMqNtWcmFyXOyvh35v77VcOn1vux3jK/NUbvrDYyQNL
iW0Z4yr3hF/0d2/4xWIzDy4Fjy/4QCztLsXgB80JmwuWw/xPb/LPcsMOLQUP
KMdPbp/6I+JH5QTKBTTnKl9FzrVca3Ou8nHM0ZqblR/9S2/47WqB7Mi+33rD
txZLtwf21N7w609xvIP9c2/403LXtvOd0Bt+u9yybUrBU8ohlDtoDvr33uSn
5cbsWQpfxpy1uWrxZt/3Rj/hOPybsO+73vDTxdJvVAofzpy7uXbxGv/2Jr98
ifNjY2bc+yX5/91aDEbb2OaW/D/2bUmM8zTK/oJ/c/5Li/TP+3dnYzwtyUHI
ZZbT7PvO957cfDn6S9r3OW8xNlBLvsO8h7HXzY35tSQGa+x/R+yjWpIDcD72
LXZzMZwgY7ebmbNoSQzX3MZ21WCTzXGYi9gee2xLchLiHc2xm1uXgy736adq
9BCcO5xC+z9UM3beVIwb9i/YM2IfjH019qLyg3kebuhMLH9Z9ZaKiemfiT2V
8tMXw8lyPvgz9jTFcA7VClAzwPiHcRC5/MbUfP87DjjZ+SblOyi/IeVPdT5Z
zdxlK+wJ2N9ht2Kv3R4utZxq4zHGZeRey8F2vuC8Qb6OHF+5vY4ZxW+KWRCr
ICdVPqM5ZHPHcv7lB6pJoxaNnGf5GWrcqG0jR/rp3vB5Vy8k5mguxpzMNt3R
J5OPJUdabrS/webeG855AeouJz+lN/oeYvvXLkUfbgM+t5aiGSOOU/2XdQuJ
4feWk9+Wa3mL45e+6E2oG6FeRHc5fHi1uSZil8vJx8utnFQKf2nZrkbugPZ3
NHbUldyKHGOxs/Jh1WoUQyv2VH6w2pRiUNUHVTNErRDj6ervqWGkdpH5ALUG
N69HP8BctLFTY6gbd4ff8lRv+NmrFRKTFbOqXpBcF3MgZ3Nvfq1m7j62Pc+X
OYQ9nXdSfzG2J1WCLdu/M8+HOYrdHNOKiSwHL3JjITF++S0b8rmtFM2dnnL0
ddTOu4l9u8sXqgS7tI35VeyHK8E67NgafYO5yv9NFQv/Un4Wtmctp+//ic9O
bG/O5yXOpcW8hnpRPhPUH079ndR7wl6kORzA9nLwNjcVkqNYtaGfYNtbOJ7A
XofP7Wz/zWfacvSv1IJ7mjI7Yq8vxxTfP/KPufbWAeH5yO9Rb2GOcrRd/8Ku
l6O3pbbno9j/9kXPUh6O/Bv1or7tTS5iOi5ye/W7ON+Fm8MxlZ8rpkMsh5oO
6pHJoZA7IQbmL9orcvyBPdE77SwH7yH373LK9JWjl6S27CPYqzT0IDy34Zz/
vhzvUftU/GNao0+3Pp8rStEAq5aj9ySX5172PdeX8diG4mOwj6D+M/Y5YuFa
o3cxI593za/Q/u215Fdv6ArfcOvuaDqp5TSiJdp6b9Wjk6A+gtqR6m+pRamG
pHqSk9j3ams0udSeFX+vjoL6CWrPqqegFqkatGq7vl4Pr14+/c090Y9aS/xI
a/D1amne2BpNtet7osemtuKdrdGqe7MenTP1zS7riZ6Y2PPzW6Mvqhbmva3R
kLmpJ/pqavM+1hquqvo7ck3lrMpnVov31NZo8MhtVo9H7rAcZ/HyamKphSUH
Xr5EjfPZsjWaWis7/+V8Tu4f/oR4dDXH1BpTM0B+rFzJs1uj+aNesJpvar2p
l6auofpCagmrbyjvW/2tJQrhf6uvKFd67dZoMIzviZ6ZWPf1W8NzV99KbTv5
7upJqommFpp6ays4vqtGa25NOZjOT6rBLq3SmvzcgX3B64rblXs+dzX6X8c3
+qdVsNdrSY7ncvyrVRv6ETwXV+Nf2Xx/SzgA5rrXwt68JTnv5TneHNi/cbzl
W5N7X6OaubQ5eHNTg6vpK81RmTtaEXuNluSQ1O9Tw0vtLvXg1Moyx25uXdzi
IOcrlJ9K+0tRZqPuaPap1bcB5a/siX7fqtyiS/39a8l3XtEV/UH5HWqPXtMa
jTz5DGrUqU2nnofavW/Uo4Og/sEVPdGbU6vzktZoU5iDM/cm7nQ553fmYJvD
yZXroh7gQoVwXqZt5MPM9XzUFn1ONaXUklKzz9zzOuYrW5KDVovg5Xp0JtQk
kH+jNu6I1miofSUfujs6IOp/fNATvaIVOb/1sT/siV7WClzrBsYExSGxb522
aBod0J1xmOMxNfs+7ol+32Jyi9l3WHc0L9S6cMz/Xk/0RpY3PsC+a9h+iX1z
t0Xj6NOe6AfuwvVuxb7Pe6KXsQbld8A+BN+i2Nu0RWPwnZ7odywn3rktc2j1
yZbuF76zvFD1AeXWyg9Vi/TdenSe1HeSa6q+k1qXck7luqpfMrQQzqt8VDUO
1TZUA0o+rFzfL1qjcSJ/Vw1CtQfVjJLLq36U3F05vXJP1SvZqBAO6qjuaJio
XbJ/S/ipc1D/u9ZomshNVR9GLQU5qiO7o6milso+LeG7qwGm9pfP5Ks90ROc
n+MtwvW+3+DDqjuo3qB6xWpiqYWlfp58c7Wp92yNJqQ6wepLym1SL1i+k5qT
ak2qaaM2uPqp6laqV3luT/TK1K4+qTXc61fr0cWUg61W8Sv16O6pt6dWs3pc
aiWr2XxKT/TP1JLdrTV8LrnjY1ujeanWrPqTap2rObsz/vnwL9wWzUT1P++g
zNut0XRUC1R9R7WJ1QQ1fvMhxx/bHUzHyz3Rz1rceFVbYjjqyy0jvkr8Ry14
i4nsm499r/dEf3E77sdixnO6M29w/qCG42dyxbuj06g+4x5szy9+qi2ajXc2
9EPUDVMv7I2e6D8uQNtL2QblF/T/2haNxrd6otc4guMt4zNVjp6U79bXO4M9
GcrzvFNLMCiOf9fD3rYlmCT11zfi09QVTUb1rIeKD+uMpqTa3+qpqE2uBrha
6upRqa2rprpa6+pVqRWv5vrWjfGXdA81m4eXg9EVm+sYbKtGfOj9QjR01YJf
rPxfaPo/TXj1ddUUVUvUGNIpYp/4TQY3R6NY/q3X+N+1Mb65wv4U/yrGg1qj
vb5w+T+qyX8a7GqZqxfZvzma5uqtqxGjNowxG/WBN8R/H/blxWjtD+LzRiGa
++uVg7EWW+2YTq1v9TaLzdH8Xq4nGpxqbxrzuMD/byWx1Vs4nxPFSmEv3xwN
2CE90bBUu9KY22o90cRUC9OY3trlYLzFdjvGPEM8J/VXoP6VrdHKVz+zqzma
+cd0heMst1nNiBscL1F+NcejlJ8B32A+a+H7ips8sHF9a2J/WYoe2fTeT/Ey
7BvXFY603OiWzqwHoCaZWmTGtNRXVpNMLTJjWOrdq0mmFllnZ/TlHUM6dlQP
dGg5eme2/VBn9HUdUzuW7mvOegBqgqkF1m28vSsccLnf/fhc4/tPjmZz1jhY
tPF/sWwXnw7+z9dij8I/if9/D/YN2GOwH2+Lfv0CtDl9ZzSByvgnsm+v5mgM
+turlzakM/8B9dOm4/NaIfv6O54tJxf8YFv00Jbg02lYpjPrC8xN/Y7OaLQt
0Pj/eS/c10n968rBTtzdFj3oIdg7dyYn4Lb6arblPrmBG1SjJ+rc8hyuf0ol
sfzrW7MWgL/nm4WsCbCOc6Nqxlpn+k5xbiT+rCWazhtgL4G9SEs0vNd27lPN
WOZk+0DnEtgDsce1Bru3cTWxfzF8ai2pueT4xHGKWh1qNNnf2u9u6NyA8otT
fhL7Ko4V6tHCftF4VC3xLbFb8qfUPlMDzfG142y1odSIcjzhuGIt52K0NxPt
HSfeFv809XBB3zamZa5M/Br+B1uDTVoWe4WWYJTEHg2qJrYnBqlcy/ynVA7/
bqi5smrGvndTf3Xn+thV7L2xV3PuWs27bo/WaOEvWI1+su+6NYztYU/bEk0R
x9/zYLe1RJN9VfNH2P2xd/Z9iD0vdqklmvGu56DGstrKPpM9tN9dj5b586Vo
96hZaL7dvPsfbHdxDbtx7heKR8Puxh6FfXEp2LYW7C2Lwbj9jl2qJVZ4PvZN
tNdWCz/DubfxxiL2NsVg6lapBU9a9/kqZr0RNXTVzrWPECvXRJnhxWDmXP/A
Z9pnWX2J1WrBAw5ozpoh4uPFb03THA12tU3UqHO847hHrKBgVWOpYgbP4f78
xv2ZHXu8HEPu8Ql94XvJ+1LLQk0L8SfiUMRCDqsmliEmcoVa8K72Nfd6/rXg
V6vYdxajDSHmTaybvLyVasHL2vc8iP9G/H9Uw4cx9is3+Pdq+DhiY8Qy/lNN
LFVMo/PpXtoYg31pKdjGv/BvUAzG8fm+5HM24gVYKWXuf1o9eBdjAIfj27uc
XKo5oLPNfdaidT3EHDHbp7FvZ27Tto7HuD/7VoKdsU/7gO39KsG62IfV+xLv
36spmCv1L9RcEAtkzFysi5gXsa9yqNV3MJ8wuimYmg8ryTGYWxAjq76vfZ59
nRoNaj+YLxBLowaE2BpzCOYO1IFQX9g+175WjYrTq7kGz12MdpvxIuytjR/2
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
glEVm/p8IeuPmyM1NyqmwrW+ze+6Nq9rfrvWtflX1952zWvXXzWf6lrlYh5d
H1xMhlgMc8Kun3BtLdhHMWWuj7xxJVhLMQqu521O11yuOX7XhjD/61oMrhEh
/kI87WelaD4u0Re9j6Mou0R79AzU+ziiOWsUyuf+sSdcIDnnrkcxgjIXtCdH
59oC01Wi5eoaA64HIqZZLLMxouGNeJFrj7hGiOuvuIaI3GQx8q5PYkzJWJIY
+837god2LRE5z65dIv7etUxcw0TtWDVk1WdWp9n1rl1zQe1Zc7jz2rdiv9ue
nKJrfUxTydoZrvnhejG7sO+h9uRwXR9nZ6+5PTlc13c252uud2Qx67fs1Bdt
XHPC6i+bYzW3asxJLWE1hdXrVrfb9Qt2xX6iPRqDoxv5TNdecA0P14vfzZxd
e3LQn3N/R/ZlfQjXiXA9GDXE1R42R9y/lpy1uWo12rdpxMvUUlaT+fWuxMCM
fam7bG53FvuDQnK8agmoKeD6rSv2ZH13OW1y2dxnflhOk1wm1/U+ppGPFds8
J/uOxp4H/7Ecb5aO6DeoqaCWgphksaYzVbK2kJhT1x43n/5JU9YgN/c8I/ZT
heSgXX/kwkq0Ri8tZi2S6RzjFLImybHY1VrW6l60I/rRxgiNDZrT3rIR73Pt
BzWw1ZY2360WthrTe/Ulv+zaRWoAq1+tRrVaDMYYXdto+kq0n13jyLXZB3C8
JwpZo3089nyVxLLUUK3VwtGSm3VhMeu5X1CJ9unF2Pv0Jf/u2jVqCLvWj/gB
1wZyzZ+eWjAGYgtGFxNfVXNefvwz/cM/cQ0e+T7vdSf/Zc7MXNl2TcnHHllP
7ENNA/PpXo/8oc/FElajn+ca7eKHzL+rr6MecrEn+rJi1MWmqxH7cjX5NLnm
I5qCZ1AfSH3lak/yxUfVE5tRc8F8zgn1xFLUBFELeYZK9IHVllQLeEI9+sJq
ApsPObqeuZ2aIWoH7l2P3p8agov1RQ/IWMhC7cnvnVjPXFUOvHyKNWvRPx3W
FX2ay8rR61VjVe7tTeXwR+Tg+v8+pZ7YnZoZcruPq4ffL8dbbvc15fBR5XjL
1T6iHv1SOdvGm9W0V5/g2f7BpzielM88X3f0psW6iE2YVMhc2jm1c8EzuqNX
LQdF7okazs51nfM6lzhO3Hw1Y1bHquLjBhp/q2dtEZ8Jc0XyvdVBMWdk/N41
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
jfGva7nX8P8fCjgw2g==
         "]], Polygon3DBox[CompressedData["
1:eJwV1XmQz2UcwPFnKmyNo82x1TDFTHKUpZlqcyVXuZYQOXIf61prWbTrWFFI
rghbZK1jkasyaBplHNVKCjUTuckduRqpZno9f3zn93zez/vz+TzP83t+31/l
PsPbp98TQhjpKea5/lAIV8qHkPpACFcfDOG7UiFcxs5hjbGL2G5sbNkQTpUL
oXaJEGqKJ5UO4RLvd14j3gXeTvwEdhirhp3EvsTeqBDCFrlHi/ssE8KKkiGk
Y+2467E1WB6vjXgs/rzaBdhH5hphY7CK2FSsLdZKrYLEEDqr0xU7ZCOpvDd5
DXgrsWW8tdYxDuuKFVnLmftD6MjLxppjm3h7eHPVO61eoXorsPy4Juwqthbb
iO3GpmBD5c631jxsJnZHj1lYkjiBn2ff03y+h23U45y+L2DzsDlYI155453Y
ALmV4lnr0Zu3OcF6xTN4G+Q+it103sux97FX5C7F+tnHUGw6to73H76YNxqb
gi3FyvB+xCbp9TaWj53CauqbxXsLW4KVxIp4z2CjsKv21lG9ong5xJXsuYG4
VDwLuXOxBcZ7jB/22dxcHbkj8T/kvhrPVG4KNhq7Gb9/7BSWZL8b5Qy13/L6
HtM3AVuNDcbuxTZh+XoOl/uh3E/kbnXOmeIP1MxyRq3i3sylyr3pXp6wj/bi
IeZKc1rjA42b8X5R94y4m/xhxk089a09R1yIH3OW3/Daxfss7o6nc5p6WvJe
wv5Wc6/6dXnt1Z3AybLmJPO/YbPlTsOmYHWws9habCKWg1XGjmOLsKbq/aPe
PvUaYK+r11+cG/dr/rL9ZjqDWbwnnUPj+DvgdbLOxVhXXidrq+6ZiPWK63MG
F+R2UnO2eunYXayY3F7YKSxTrcFy54rn4EOc6ex4V+J5qbNQjxfxGnKPyt2m
XnNuOblbsNFYLrafd4u/GcvEJmI/YDeweeqtVC/DuABroV4K7yKviNdavYbx
jmMlrKes+f5YAj8LGyD/rH2NknudN0zcVr1Cay3kLuJeUase92XzKbx96h7H
amGPY09j27E07I4ePePdlpeN3Ye142XwOmD7493EzvHq8WqJh/P+0rM+rwUv
FSvy7MAG87pbS7l4zp53413BV8sN+q6XOwkbiE3AbsTfJTYZS4u/Tew29jF2
V60Fes83Po/1NddUvAO/pscT8Xdori12MJ6V+epYT6wbdgZ7Fnsq3ntskB5N
9Ogtd5Z6c+J73N1bxtuGrcPWONsD8d2E5WH52BLsYHw3YUux5fEdg/2KrcZ2
YRuwAixDj5F6bNe3mP1+oUcPzlZspnEuryk/DatmjVWsqyzeGRsS31/xnhsv
5M3D9+oxljsGmxf/A/TIFteSW1NuEifH3G7eALyD8TTeAt4I9bLVO28tSdby
Nbc4J8f3dq/71E+cyE3EpsbfEpaGVcQqqN8S/8k7qYv4Oj4I28S7yqur/nj9
e8f3Ia+1Hid5n+GVea9h5+X2wm7JnYx9JfdfufU4M+RmyW3G+5bXgXeN1x8b
xfvTvRoZ/4+4faOHdcEaYoewflgmdgnLwE5jW/WogB2xlnLYaj0G8pLj96FH
Gz2y9TjJq82rKjeZt4vXk3c0fidyD/DWq5eGPRf/q+V2w3LlvoMlyv2eV1pu
gdy1nEVYjr2twsbxZvIew27zKmKf8n5Wv53efY1rcB4x14N3GK9ivF+Pdfru
FDfjdeJV5d3ynd7A+nA/j+9qXgf++Pi/rXeK8RFsMv8Cr4fcEcbJchuZu4RN
wqbH9wCvMXYM6xX/Q+PdxqpjU8WT3aNk7+Iz1ryK/z8LyErp
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slLVWEYwOEvh2vqdSqssNKM7Ep5U4oCQQnc1kpb1S6ysqK2Fe1tsG0t
WutfUH9BrUQizJw1i7IcmoWg+XkT7uF7fofvnHt4z2k8faX78oaU0iPHt7KU
wmvWczUpVXN9eUrnuYEbuY8P8B6+wJ2xZ0tKOX2cd/E+PsW7OR/7uInb+IZr
rulDfJtv8hG+w/e5nYesefs7ytefq5WP8hNu4y5+zm8850/uzqY0pt/qX/oF
L/IZ9/ytx/U73av/6Aldx++d+6sn9Xa9pJN7TVl26OWYh57WO/WKLtA9jhnn
VnUhn3DM6g/6rH1Fek5/1MU8HzNy/pPO6Je6QX/WJXoh5qa/6lf8xfpAj/Jr
vsuPeYEH+CHP86B1q3nM8j2u5Wnu5808ybfsv6rH+Tr38Rhf4pM8yhf5GFe7
5pnu4Ap+yvkYCY9wPZfxMFfFzMwu7/kreRu3cEU8B+/P/h9l2sR+6bD/qIIY
8UHOcmm8Zy7lZps36gznuIQLeS9nOG7SxMWYi/fqRkXxXfGPeA/xTfL3eEfx
rdasf8//APP0Va0=
       "]]}, {}, {}, {Line3DBox[CompressedData["
1:eJwV0T8ohHEcx/GvCeXvQLFxhCyUSTEQCyUmBoqBolgMjKcYGAyMpxiwMZ46
hZHBcIqBSdhOMVCUvJ7h1/vz/by/v+e57mmYWRpbLIqIFae5LKKtOiKNA7iG
o5URhfKI29qIP/OPPKbblGdxC+fxV1/s1FRELJh39GncxXWs1VfxHbhhzugz
mPPcPXlf7uTq7AzhgflQn8UjzOGwvpGfxXPzhbsnXF4+xXuc49rtpPGZf9Bl
uQKe4QeucV12jvmM/Km75EqqIq6wDPf0b3yPvaxcrrvmUniDLbjLn3GDdvLY
qstzvXiXvIvvSzI3YqeA/eZHbgKfcBLf9eN8id8xlTzfvRduWX7FFSzlpu2k
cNVc0G8nd3EHm/TzfG/yn5u/km/nG35jN9Y7/7GjSFM=
       "]], Line3DBox[CompressedData["
1:eJwV0T8oxHEcxvGv0f8/A+omxQ1koSwGGVwWysUigz+LK84osd0NFIvCdjcg
N57xLlFMoixuoNzI5gwURXnd8On9fJ7n+dS3369rcS2erAkhbJhoQwi9rSGk
MIZpnG4O4b0xhId2Bfw1M7xdWQL3cBX/+LWmoymEpP2An8aCu0N6m+6UtekM
4I49w8/ihU6WPqYHZRGdCTyxn/HL8iKdoy9xUtats4xX9jy/hOf4hAl+v/zU
XYp+rr5D9oFF/MQ0f0gnp5Ohv3jXsvqWEG6wGbP8N/mIXoFu4d3Jonhf/VZY
5I/LH7HP/sgfxVt3JXqMLsmmdCoYs7/w57CM8/jBn5XXecOC/ZX/5X6dfqM3
sV62pNODW/YKf796i4cY5a/I89X30ke8b1ncf/zBYYyYf0EnSSU=
       "]], Line3DBox[CompressedData["
1:eJwV0D0oxGEcB/DHoAznfygKt8jgfXMsiFJs3gaZrs7GeSnbDTYvZTYYFKcs
VoPyUgZWg+KURTYpL6duIHxu+PX5Pc/3+1z/rim9NLlYFkLImpZYCB3VIaRM
p/lzfq8MYSoewhtP6kKYtv/aj6rkrDBlUQgZ94HLrOexvIHV8lvvEvYNWSO3
2M1znSQbdPI6vfacrIeHHOO1zjh35c16k6V3sgleco43Ot/yeXunzgLzsgwf
uVY666wzKd9kwf0Gi3z2ds/+pLPPAZ0DRs45Xslr7Kf2F55xROeCbc6v8nN7
l/2u9Nu857jOA4ed8xzlB3/4yRn5F1POBc4y5nvK/feVTMvjzLqPuMoWRvJW
zsvbue2+jTss+pZBe63OEFd0+u1Tps8kzD8Wy0RP
       "]], Line3DBox[CompressedData["
1:eJwV0D0oxHEcBvCvlyh5zWFBUUqRs6G8xSBG5CWLxMgVRspKMSuToiir1UuU
wWLl6pRJyUAoonxu+PV57vc8/+7u3zCXGl3KiYg1p7k4oq0iYtZJOjklEe/O
RFnEXXXEmzwt55ZGnJRH5LHIXSFT7gu4zDqe6utZqW/kvue3dA3yNjt5ZtPF
Wpt7fY98qOvmEcd4Y/OtG5eb7KZ4oZvkFZd4Z/Nrk5LbbFaY1i0zw01e6u/t
tuQOmx1+6bb5zQM+6Q/Zrz9mhc/PnjuSE/I5X3jBYZtrtvr8anMlJ+UHfjDN
UZvH7LvSD7nLyCP85B+/OGPzw7ns/+QCy7Pv0vvPr/Eb5HmbKq7rEtxgC8ts
Wrmob+eu+yT3OMBb31ttMyiv2vTJ406vU+f8A6/RQ7o=
       "]], 
      Line3DBox[{2834, 236, 1501, 4663, 443, 1502, 250, 1573, 470, 1574, 264, 
       5237, 1649, 497, 1650, 278, 5284, 1725, 524, 1726, 5285, 292, 1801, 
       551, 1802, 5325, 306, 1877, 578, 4703, 1878, 320, 1953, 605, 4717, 
       1954, 334, 2029, 4731, 632, 2030, 348, 2105, 4745, 659, 2106, 362, 
       5467, 2181, 686, 2182, 376, 2257, 713, 2258, 5483, 390, 2333, 740, 
       2334, 404, 2409, 767, 4772, 2410, 418, 2798}], 
      Line3DBox[CompressedData["
1:eJwV0b0rxAEYB/BH2bwv6iiyoEzKUSYvC6W8lM0ZLAphu/MHYCQvxeZsCIlJ
lIWOgUyMhIGRkfC54fo8z/f7/Lpfd3VjM0PTBRGR8WkqjmiriFhgDxeZKov4
Kom4r4woZFFpxKhsSZfmMjMslpfo6zln35Cv8NRzm+ZVc4Ou0k0n1+xZ+T7P
3WybD8xdulo3Izy078qf9TnznvmaKV2jmzRv7Bf6Y92L+YSvzOia3azwzX4m
/81/F/+4Km/X73h23xzlEZe6BK9YxQP5u77bXc5cLbvVtfCOSa7rr3V9bl7Y
KnvQ9fORA3yVD+t/OWh/kk/wmZP8y/+m+oT3mrK/y+f5wQVWycf1LVy0f8q3
+MUsk/JZ/ZF36TVvy751I/7DH3awxucfZPBI9Q==
       "]], 
      Line3DBox[{3116, 2841, 2924, 966, 5204, 1508, 1002, 1577, 1004, 1584, 
       1041, 1653, 5239, 1043, 1660, 1080, 1729, 5287, 1082, 1736, 1119, 5327,
        1805, 1121, 1812, 1158, 5365, 1881, 1160, 1888, 5369, 1197, 1957, 
       1199, 1964, 5382, 1236, 2033, 1238, 5408, 2040, 1275, 2109, 1277, 5434,
        2116, 1314, 2185, 5469, 1316, 2192, 1353, 2261, 1355, 2268, 1392, 
       5509, 2337, 1394, 2344, 1431, 2413, 1433, 2420, 5523, 1459, 3036, 2895,
        4383}], Line3DBox[CompressedData["
1:eJwV0bsvg2EcBeBfiUW0iISIS9hcYjHQxoQyEAuJjRaLBTGJ8gewu+xYRWuz
sojLIjaxuW0WEpFIPB3ePOd7z/mapu1cXJteTUTEttNXE5Guj1hyMk5VMuLb
ydVGPDRGfMl5OZmKKNZFpJhyV8eC+1pusYsX+m426Xt55P19XY98wFFe2mTZ
YfOkHy9/rm6MJc7z1uZXl5O77RbKd7o877jJR5s/m4Lcb7PNN90W37nHK/2z
3b48ZHPIhOcDVvBFf1Z+Ty4ya3POVs8lXuvb5Bv5k7ecsrnnoOdP/Z2cll/5
wzfO2nzwVD/t7l2eYfheCb9xgjmbSq64r+AqW1hd/g+afAd52aadO7o27nKA
DTaDXNdneOw+zRNOsFk/yQ39iDznDDsdzj8dYkBV
       "]], Line3DBox[CompressedData["
1:eJwV0UsoJXAYhvEPwwbjkrAyc7DSzJQouZWSmTkSpRGlZMyUKJcoUWbK9mwt
XLKkrKZcSlmpmY1yKTUrZaVcVlYmC5rfWTy93/c+379zOicxMtU7mRERC+jN
i1hEZ1FEEjP5Ec0FESXmJtnDLSBVGHHNjeGtPpd/I7u4OUzxl9wwsvW/SiMy
3bwyJ/lZfHFzwffj/nXEk/1OfuSm0Wh/8O6Y78Y596A7k+38BPb5Ct0R34F9
7sa+J9v4zLKIcZmlO+BbsMZd2VflH+9b+VHcpr8nX4ef3F83L/wPcxP/Hadu
tvgafNNv8ifuRswN/FfsutngE/is/81/kvXcEFb4ZW7d23L5njt0807W8oPp
/8BNiitAsX6HL5IfuIH05/BLXA7+YZt/lNVcH7r4efuzucrvPoRKJPAf0HY/
NA==
       "]], 
      Line3DBox[{3068, 2993, 2995, 1438, 5630, 2726, 943, 2352, 1399, 2700, 
       930, 2276, 5488, 1360, 2674, 917, 2200, 1321, 2648, 904, 5438, 2124, 
       1282, 2622, 5604, 891, 2048, 1243, 2596, 5591, 878, 1972, 1204, 5578, 
       2570, 865, 1896, 1165, 5554, 2544, 852, 1820, 5334, 1126, 2518, 839, 
       1744, 5296, 1087, 2492, 826, 5246, 1668, 1048, 2466, 813, 5208, 1592, 
       1009, 2440, 800, 1516, 970, 2425, 5526, 787, 2903, 2809, 4388}], 
      Line3DBox[CompressedData["
1:eJwV0T0ohmEYhuGbyOD/JyZhUQa/pUQpRaKUiCglopT6UKRINgtlFZMUpaSI
SYkik1JKiVImZVJikuMbzq7nvs/rqbfnrRif6UukRMQy+rMiVjCYHzGAheyI
jtyIEud22cstYTsv4oNLoMY+j6+WPdwiVvk3bhKF9sfFERk6Bc7d/DwmdJ74
EfzmRPyZf2QnN4cu85d793w/XrlvuxfZzidwxtfY3fDduOY+zVeyjZ9GofmC
a8OB/bt5X96628pP4dd3nfJN2OCedaIkYt25hZ/Eq84hX4s5+333H/RmnZv4
cVzr7PKVGLTf07nTGXBu5EdxoLPF73ClsoW71GmWDfwINnQe+U2+COXcuU6Z
rOWHk2+ks8ZlIt3+iE+TVcn/hxP3h3RW+FTUe/8x1CX/Ff4BkcJA7g==
       "]], Line3DBox[CompressedData["
1:eJwV0EtERAEUxvGTNkXPRY9VpIhW00NEiqEHQ5TowZCJiDT0EhGt2tVsIy3a
VbSKVpH0EBGtosU0tIq2SUX9Wvx995z/d67rNmayowtFEbGOsbKIDUxUR4xj
tTxisDKi3vOAvK+NGOHXsVcV8cZn0c5V67TJYW4Nm3yBm8WHuzquRKdWpvgV
zOo88Wn8VET8mr/lELeIlPmB23c/Jgvch92L7OezSJhvuBRu7N/N1zLJFddF
zMsau3M+iWPu1Xwkb723j5/Dl+865buR4551duSlTs//tyKvc8wnsMI96izL
bm4GV/wB14K8uynuTmdSdvHTONTZ5ff4BtnHXej0yg4+jW2dHLerUyObuTOd
Jpngp7Cks8WVodT+hC+Rrdynu/H/ns4GX4xO/z6DDrTjD8IZQjI=
       "]], Line3DBox[CompressedData["
1:eJwV0c0rpQEYhvFHjBVmJmVrzoKlP2CcndU0WCjsj7P2tUJxio1iFlOIU1gI
zTRFOCKlaGqKfBQpdaQU+ViJhWzGz+Lpep77ut+3t95EqqOpvSAiekzV54hq
kymJqMPe0oiGjxF9OFsRMf8p4sXeKBvWSeGguw2H8BdfXhaRdv/k+3FEPoCj
uMLX8Bl3lp/EM+8d46bs47il800n657TWcVp+RrO4F8+zefcec/+0Tm0L3BH
uIgHOhmdCf5YltO5wyXuHpfxTOc/n9V7kG3rFMk2uA+4ib/5S3tOpxj/6VTi
DvcF7/ld+639WCfxTp2vuCdf52vt+/ZHfNBJ4rlOM57IW/AUX7HYd7Tik+eu
dDrtea4LL7DQP0nodL+/ix/Ba/ko3mAJn+R/uJ/5Bvd3U2/S5g3f0k5I
       "]], Line3DBox[CompressedData["
1:eJwV0csr5XEYx/FHKZHblOydTGbnLxCLWc0CWYmdOo0Vi2mUWJxcFhYjLFAn
l4WEsmDqGJeaBcoCJbdSLiUZ0UyJhWzmdRbf3p/n+byfX6dORVtnU0dORHR7
VR8iPnmpwojP2FMU0VAScVAe0SvPl0a8YaPdECeJA+avOIhL+rLiiHbzmD6F
P+x/uu+Th7OZU83pN6c5aRy3n8IJ3NJ/0U+bz93NcTLyjO4XzuIuJ8lZN19y
ljlH8oLuGBfxkJPiTOhP7DKcJ1zR/cVVPOekOf/Mv/V55g37fLxztynfyBlO
Ae5xErhtX4mPnB35QT7ifMySU4P79mv6WvlAfsYnTh1ecJrx1L4Fz/Ad8/yO
Vnxxd8v5Jl/pvuM15vpPEpyu7Lf0w3hvP4J/sEhfo590P2r3ymm0q/cavKT3
H0jZUA0=
       "]], Line3DBox[CompressedData["
1:eJwV0M0rpQEYhvHnbBT5XmBr4Q8wYm3HAovZcaxmYdiMDbIjH8WGOTZqpkFR
YmhqaqYpRcpXSpEoJ+U4UsqkrJSP8juLp+t57ut+395zqj/1fvySiIhBU18W
0WDGCyOacKgoIlkSMYwLFRHLpREFxRGdsimdPpzg+nESf/E1/IB7lp/GM8+l
uK/2Gfyn06iTci/orGJa5xv30/4dt3WSOmvuFZ1Nfte+yO3hEh7qDOjsuzP8
b72MfY27xnU81UnpZN0b/Av+kb/iX7zkE5We0XmT7ehUyDa5StzKfZN339r3
darwSKc2d3Mf8IE/sD/Yszp1eK7TgsfyVjzBJ3zj2/CK/4wX8m5MY/i/q3xD
j/uOH8m9Tz6KN5jP1/Fj7kf+B97L5/A/lvN5fkuzzrzsWScpazcdpsu8A+Ns
T8g=
       "]]}, {Line3DBox[CompressedData["
1:eJwV0Lk2XQEYR/EvLSFmiZnePAQrxsQ8XzRKDRUFSeU1jMG9SBAxV17C+DRK
P8Ve/7O+vc8pTuX8cmLpQ0SsYSE7oqggYgbFqM6JOMV6fsTsx4hveREZuRGd
NtPWcP+wwe96t8P9k3u3zbK13ILvJLGp2dN0cdlcr82xdZp7/sxuafY1PVwu
98M+cCuo5/9jW5PUfOfyNP32kV9FA3+OHU1K08f9dL/DoOd8fSN/gd+aA82A
+xNfwA17LrRN/CV2NXPcLYa4z9yo/WKb+SvsaV75Q98a4Yq4cVtsW/hFLoV9
3ZFmjCvhJm2p/aq5RpL/w0+4l7kn7LP3fqGVv0FK81czxZVrZmyFbeNuccAf
89PuL96r5GY9V9l2Pv39P+BEk2bfAJKwO9Q=
       "]], 
      Line3DBox[{4456, 2847, 2930, 799, 3937, 1512, 971, 1519, 800, 1515, 974,
        1525, 3939, 801, 1521, 977, 1531, 3943, 802, 1527, 980, 3946, 1537, 
       803, 1533, 983, 3949, 1543, 804, 1539, 3948, 986, 1549, 805, 1545, 
       3951, 989, 1555, 806, 3953, 1551, 992, 1561, 807, 3955, 1557, 995, 
       1567, 3957, 808, 1563, 998, 1573, 809, 1569, 1001, 3960, 1579, 810, 
       1575, 1004, 1585, 811, 1581, 3962, 1006, 2932, 2765, 5644}], 
      Line3DBox[CompressedData["
1:eJwV0LdWlkEUheFDT1iEZWXDIoPYQAeSwc7CQlSQDPKTc7wDbG0o9RYIokTJ
qUPux2eKvd45e+/5vpkpHpp9P5MVEeuUyY94+SLiHZ1Z1+FOQcSHooitnIgG
65LCiG7zX/ln3OV9xD1spFL5J/O5/At+s68H92VvqEzea76QD+COf/zi91kf
YBOV6/Sbv2dHDONv3iD+wWaqkA8l395L3xmzPuSP4BG20KrsiUZ5VzoZPOZ/
xRNspR/ySt8a513rTOEpfwLP8J+8Dat0Jnk3OrPp7rxp3JZnqN1crTPDu9VZ
wAn+M82lt5B3UI3OvPlOZzm9AW8RL7GTXsmX0j3tu9dZS2fnr6TzYRfV6qya
H+Sb6Uy89fRffEs/7X2ts8F71Kk351Ie5dB/FUpFFw==
       "]], Line3DBox[CompressedData["
1:eJwV0EkuRFEYhuFjARKFmBlYgb7UEvT9Cgy1Uz1BEARBkKoKgiDYARag73uL
8ZzBm/f83/+de29uSddAe39OCGEE3YkQiotCaMG9c5Kv80MYLQwh7dyDWnNp
QQhjsgedSb6RjfMt16HMfsL8aD/Dve59YMr5zr4e5TrT5ieded7MDWGW7+0a
UGE/Z75w71lnKb5PvhCfy42o1Fk0X+q86KzG58mX+ZmbMGj3hRXZq84Gv8jX
4szNGLL/xrrsTWc7Wr7JGXlf/CfmKu/bkr3rZKNlac7a96PVXK2TkX3o7PGA
/Ac7MbNvQ1Jn1/ypcxgt2+cvbkeN/YH5Kn67zonzt/yIf7gDKZ3jmNuf86/s
lP+4E8Pu/uIs3tFJOSeQjzz8A2eqUUI=
       "]], Line3DBox[CompressedData["
1:eJwV0bkv5WEYhuFPLxKxlMQfIYKxb2MZRK/RSqiFRjGFQqFQKBQcx9iNEBOT
sYQQQgiNgjnHbsYyY6mo5prizf2+z/18+SXnZLW0N7UlhBA6TGtyCJnpIbxi
Lr7gUWoIDSkhvLtn0kKotx/KnrlpfMID/CSf5utw3/1XPo5/8NzbPXstN6VT
g7vuRy6KD7iD1fJJ/iNuu1e8u+eG7He4hVXchE4XFzebst/cIP7CDazUGdeJ
8BX2ddktN4A3uIbl8jd+TK/Mviq75vrxCpdxkO80X3RKdX7ILrk+vMAY991e
wo3qFOOS+5zrxWhiCN+wSB7lC3HR3ezdsemxn+kuYAE3ovMB590Rbz9jnJ/D
fHmEz8Ov7pi8G3/iLObKh///dkn+J/epPMc3TrARs02G+QcbR1b6
       "]], Line3DBox[CompressedData["
1:eJwVz1kr5XEcx/EvBqOkbHM952kMD8LODI5zztguxJUbj0dubQnJoCGlppQt
Mo3INDIRnWPfXi6+vT/br/7/RGaoYTAvIkbcQHlE4lNESUVELX7Eu6qI/sqI
Z369OqKPvpUV67awCHPYK1/T92CWL5Rv4rJ3GXdNd+t+2nzHK/6DzS8swEvM
yFf0abzg094duQ063+Y/pnRLNsNlEed8nnwdA8+wS7+oH/MuSf+TvfqvVXzB
v9gpf9Iv2HXQp7Jn3Qo+4Qm2yx9t5m2+0ceyR90PnCj1XfhVPqtvwz/8g34B
l7xLud90q27GpgUP37/vPXdz9L39ATbrpm2acJ9P6g/dDH1ns4eNukmbBtzl
b+VTeIM7WC8f1496V0dvy3K6Gj6L9fjFfXZvHzVXXg==
       "]], Line3DBox[CompressedData["
1:eJwVzsdK3FEUgPHjCwiW6Nroa+g+W2EssUV3lmn2XlPtdeYJ3IuIiIjYEB8h
IAgRQRAEQRDiIuQ3i8N37v2++5+p6krXp4oiYrwwJRHVFRGfTI3pKo3Il0W8
l0fk8NLdmGbbfvMhYgc7NVv4V7OJo/w6XvMb+IXfLI5449ecR/gVvOJXsYNf
xld+CYf5RbwovPeunf/l/ML/xCF+2v+4MGeaH+7aNN/xWfMNBzVRGbFgP9V8
xVbNPD5p5vDc+wHdjP1EM4stmml8LHzHb/fzk87H/BR+5qe82zUPmgl3Wc0Y
HmnGsVlzz4/a/2hGMKMZwkPNMOb5Jt2g/U4zgGlNFg80/ZjTNGoy9ltNGlOa
JO5rUtjA9+FvvheT/D/vuu17mh5MaOrcJUyt+Wj+A6LoTbw=
       "]], Line3DBox[CompressedData["
1:eJwV0Dkz3WEUx/EjGuJGbNe+NryYdBq91ow1dklhTBrjJVBQEPs2kxQUzBgK
DWOsEbHE8i58nuI333PO9/yfuec2tXe1duZExFhKcURzeUSbtEhPScStnGcj
PlRELPB56unSiI84g738X7nQ/+TzcdY8g3PYx3V7a1EuzRbtFOA8V4gL+NXO
f/4Or8yW7HzCZa4In7lx6ef/yXVydj7jup0SfOEnZIC/lxuzFTvF+MP8QMrU
2/YH+Qf5o1+1U4qv/C+uXP0bh/jHdL++IxORxR3zStzFYe4p3a7P9d+seadC
vcdV4z6O8D3eXUq3pd9qpwoPuVo8wtF0e7pLv8HX4LF5Pb75blLG+Od0l9mm
nTo8sdOIp/iNe0k36bf4Bpzy3ZE0qc/sfOfL9F9kO92M7w88Th4=
       "]], Line3DBox[CompressedData["
1:eJwNzskqhnEYhvHnM+6UeW2hOArWlhYOwDyzl3mWAzAVyiyEKBTKlHk+As7C
+FvcXd33c/1734LKtvLWRER0yGhmRFFeRJkUS3tWxGt2RHpuxKc+LiOcR9u7
7QnbOA+Ypt/jsPsNvum32Oo+5t2qpNqubUOcC3zVL7GFc44p+hkOup/ii57I
91/eNnNObMm2YxzgjNiv5Nl2ZGviHGKSfoD9nGH3S3my7dsaOXuY0BcyIvo4
O/qjvosN7tsY+od3g9LL2bQ92LawntNvX5G/nIgNWw9nDe8561jH6XVfll/O
qq2bs4R3nGnfruUs6j/uC9jlPo+37n/e9UgNZ872zZnFTs403nBmsNp9Cr/c
J7HDvdu7c7nmTNiqOKV6hZRIofwD2sJTcA==
       "]], Line3DBox[CompressedData["
1:eJwVz0lS02EQhvF2T1GlVNiDyBAGZVa4AitWVMnKA8ABWDijBpZ4EwOIoKdg
RkBC5oQgcgB/36Lr+fp9uvPvdL1anl96EBErKvcwItsZsaAG1etHERVVyES8
1H9T3d77HRE9eIBv+Kq61uftP8ZDeS8e4VuuZq+GRdmmmSd4zPXjCb7j6mbq
WJJtmenDUy6LZ7jBv+cbqizbNjOAv7kh3GmP+MA108367/wgNuydmxnxvsCP
/E26Oe2YGcammUvumfcfXOVb6W79IpdXT72vuDEs4Cf+Nt2tX26LGMVr+QQW
8XP6jr2/6WbZD98axxI3hWX8wt2lm/W7/CRW5M+xil/t5/h/6bdke2amscbN
YB3XuPt0r/4n/wJb9hrcbPpvuM53yubULzMZ/A+JZFko
       "]], Line3DBox[CompressedData["
1:eJwV0bdWVVEUheFFFIlyr6SSnkcgSJIg8ZIzSI9j2PEMDFAkNzwBtPIMdpbw
EuScv1Os8c9/rr13cU7t9x+ZpayIWDYr5RF1lREZU5iKaMYbrK+IuMVzvoqn
6YgGXZH8Be+wEe9xzZzZN/FiuRX/uveQvCc/4q/kLWdaeIn8FY+ceZLb5Gf8
bS6caeeLdhemS37Rd+ArrptLZzr5P/tS3iO/YTeG3R/5pDTiGy+T+zFL34vZ
uKE7cPdK7tN94hnM4QOYi5f2m/preVBXLo9gHh/CffufZkt/oxvWpeRx/F8S
MYr5+m3dLY7xtDyFH/gEFuCO7g4n+XFxxCx+5NNYiLv29zjDP8sLyT/gc8m3
xj3dYfKt5XldBW/h1abGVJl3ZfNB6g==
       "]], 
      Line3DBox[{2873, 3091, 366, 2197, 3415, 692, 2198, 367, 2200, 694, 2201,
        368, 4181, 2206, 696, 2207, 369}], 
      Line3DBox[{2782, 379, 2267, 3423, 716, 2266, 378, 2261, 714, 2260, 377, 
       4202, 2255, 712, 2254, 376, 2249, 710, 2248, 4199, 375, 2243, 708, 
       3421, 2242, 374, 2237, 706, 3420, 2236, 373, 2231, 3419, 704, 2230, 
       372, 2225, 3417, 702, 2224, 371, 4188, 2219, 700, 2218, 370, 4185, 
       2213, 698, 2212, 4184}], Line3DBox[CompressedData["
1:eJwVz1dWFFEUBdALdJNzaECCIDk5CWACOIMmZwHJOf+wHIrMw5HAnwLdKiCw
+bhrn7rnvVpV7enlsaWciNg2V1URn1MRg9URoxzgZV1EVW1Esj7iWa6UL9iv
W2Qfz1lh/8RynrHXfoG3pRGnLLN/ZClP2KOfZzePWWL/j8U84o17c+zSH7LI
/i+/+66sOZA7dbPs4D4LnfnDa32BvCd/0s2wnbvMt0/4l6yclHfYppvmR26/
f2tFRIYJ/RZb7afYwox3b8p5ugfmcoPNukn+1E+ZdTlHd8/gN07aP5gJucn5
Nb7WRNzxhauc0N+bcfmDMyv8r/vNZ35lo32aDVzmk/0v/nDvUV6S63UjnlP8
wmEzZN4Ag4A+lw==
       "]], 
      Line3DBox[{4493, 2881, 2983, 1434, 4371, 2747, 1432, 2346, 1431, 2745, 
       1429, 2340, 4231, 1428, 2743, 1426, 2334, 1425, 2741, 1423, 4228, 2328,
        1422, 2739, 4369}], Line3DBox[CompressedData["
1:eJwV0DdOQ0EUheExmQphcsbkHEwOokIgIdHQ0bIAaFkC2TiQc25hHbAfKsL3
iqN/7v3P6Hmc2Nha24yFELblqjyE0eoQViUpb/EQ5ipDyFWFsFIWwiU/Yy7l
ZvGVn8YsP4UX/ASW8JP4wmedPySjM253rpPEYrsxfNYZxTQ/gmf8MBbxRTXu
4ZPOkN2xziCe6qTtv6RQBuwedfoxpdOHJzqLfnMB32t+4HvwiO/GT/ucTqdz
vnMX3ut04KHOt92xZHXa7PKc2/FOJ+X8Lgd6CbuMTgvG7FrxVmfBt/f55uht
fCMGvin6D/BGp8F5T6c+eptOHf6Z59295mvNu+aa6F18Ff6aq/GKr8Qdc0X0
Ln7WvR9z3HzJL/vOuizJiPwDhiM3dg==
       "]], 
      Line3DBox[{5679, 2979, 2981, 1397, 4363, 2723, 1398, 2280, 1399, 2725, 
       1401, 2286, 4210, 1402, 2727, 1404, 2292, 4214, 1405, 2729, 1407, 4217,
        2298, 1408, 2731, 1410}], 
      Line3DBox[{4220, 2304, 1411, 2733, 4366, 1413, 2310, 1414, 2735, 4367, 
       1416, 2316, 1417, 4368, 2737, 1419, 2322, 1420}]}}},
   VertexNormals->CompressedData["
1:eJztwTENACAQBLALJFhgxhISPmHG/4YJxrar7j4tyZhJDwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAPw82ZAHM
    "],
   VertexTextureCoordinates->CompressedData["
1:eJzVnc2PpMlx3oeUbcD+BwxdBFPcpf0n+CCgYRgQP2Rf7LsN2PCBJpcU7LsP
hg++EKSaNCTAPvWBlzGg8oicJT0wxhytlr1qjbqqt2aau1MzVf3WzltT/VFz
sS+W5LXYbz0RfH7R2UVydfFggdroyK/IjIzMiMx83s/8i6//k3/16Tt37vyN
v33nzk9/+W//jS/+5X/39kT/zjX9KOhn99/6y/+O9jz9SdDX7GdPg/5w+EPQ
//fjn/6bo/wu6M/+lNz/COX1QV+z31ijPRdBf+36D1dBX1f38eugKSd/Ja9o
yevpToKWvKIlr2jJ6+V3QUteL68PWvJ6ey6ClryiJW9rHCknfyWvpz8JWvKK
lryiJa+X2wUteb28PmjJ6+25CFryipa8LT3lOFJO/kpe0ZJXtOQVLXm9/C5o
yevl9UFLXm/HRdCSV7Tkbc1D6inHkXLy1/X5BPp8An0+gT6fQJ9PoM8n0OcT
6PMJ9PkE+lztDOch9ZTjSDn5K3lFS14vvwta8no5fdCS19tzEbTkFS15W3aU
dobzkHrKcaSc/JW8Xn4XtOT18vqgJa+35yJoySta8rbWCdpR2hnOQ+opx5Fy
8lfyipa8Xl4ftOT19lwELXlFS97WOsh1gnaUdobzkHrKcaSc/HX73ME+d7DP
HexzB/vcwT7XdV7ycl2g3aRd4byjXnLcKJdo/kpe0ZLX23MRtOQVLXlb+xi3
Vz3sVV/WCdpR2hnOQ+opx5Fy8tftVQ971cNe9bBXdZ8mebmuc93jukC7SbvC
eUe95LhRLtH8lbyiJa9oySua+1DJ6/PiUVnXue5xXaDdpF3hvKNectwol7cn
f32/cYH9Rt1nS17uy7hv4brOdY/rAu0m7QrnHfWS40a5RPNX8rb8CMnrdu0R
+in3adzHSF7RXAe5TtCO0s5wHlJPOY6Uk79Dew/id8j/IOi3r+t7N+gh33HQ
b143YBr056//54Ogv3pd4POgv3D9P2dBD/2xDPq6uvsvUd8K7TxH/ZdBD/2z
acrFX8knWvKJlnyiJZ9oySda8omWfKIln9e3Qr+fo/7LoCVfa5woF38ln2jJ
J1ryiZZ8oiWfaMknWvJ5fSvo0Tnqvwxa8rX0juNEufgr+URLPtGST7TkEy35
REs+r2eFeXGO+i+DlnyteUS94zhRLv5KPtGST7TkEy35REs+r2+FeX6Oei+D
lnwtu8B5RL3jOFEu/ko+0ZJPtOQTLfm8vhXs1jnqvwxa8rXsHO0C5xH1juNE
ufgr+URLPtGSz+tbwQ6fo/7LoCVfy27TztEucB5R7zhOlIu/kk+05PP6VlhX
zlH/ZdCSr7UO0W7TztEucB5R7zhOlIu/ks/rW2GdPEf9l0FLvta6ynWIdpt2
jnaB84h6x3GiXPyVfKIln9d/GbTk8/S5T+C6ynWIdpt2jnaB84h6x3GiXPz1
9WGF9WGF9aHue7hP4Loq+WinaddoBzhvqGccF8ohmr++PzvH/qzu43z9uyz7
BMnHdYd2mnaNdoDzhnrGcaEcXn/++vpX96WSj/sc7gu4jnLdoZ2mXaMd4Lyh
nnFcKIdo/g7p70FPD+LvHo+mf8HzFvobPH+h/8HzGPojPJ+hf8LzGvorPL+h
/8LzHPozPN+hf8PzHvo7PP+h/8PzIPpD9xrjdK/4DzefC6WfdPM5SvoZN587
5D795jh97nNvjmvnPvHmOHDus26Om+Y+5eY4Y67zN8flcp28OY6V68zNcZ+0
0zfHSdLOef2bci5Jf0jjoHT0/3ycjoof6PPupPhR4mu86IeIr/HiPl58jRf3
wd7+ruwjxdd4cR/m7evLPkZ8jRf3Ad4/F2UdFV/jxXXI69+gP+9FP/q8PUH8
6Bh6kud14nu78txOfK8nz7l8nZwG3+NPx7CHJ4hHHcMeniA+dQx7eIJ41THs
Yca1xXd7eIJ4Vu7TvH8ugu/28ATxrmPYwxPYwzw/pb+qftR40T93O3ZU/HVf
l06K/y6+funH6+8aL/rB4mu86Ed6+7vih4mv8aIf4+3rix8gvsaL+2jvn4uy
DxVf48V9nNe/QX/eK/43z0cZb+B5KeMPPD9lPILnqYxP8FyVcQqeQ9LP57kd
/WSec9HP5LkQ/TSeo9DP4bkD/QTG6bnP9vo36M97JZ7A813GT3jey3gKz38Z
X+F5MOMtPB9m/IXnxIzD8FyVcQyeQzIOwHM7+tE856IfynMh+nE8R6Ef5PVv
yr0lxkd4Ps14EM+rGR/i+TXjRTzPZvyI59uMJ/G8m/ElnnszzsRzYsZpeK7K
OAfPIRkn4Lkd/Wyec9FP9fo36M97WGcPyvk641s8b2e8i+fvjH/xPJ7xMJ7P
Mz7G83rGy3h+z/gZz/EZR+O5N+NQPCdmHIfnqoyD8ByScQSvf1Pu/fm+5yDa
qfESX+MlvsZLfN9v5P0B8X2/kfcJxPf9Rt4vEN/3G3nfQHzfb+T9A/F9v5H3
EXxdWqJ9fYkT6u8aL5dvhf65KHEq8TVeLv8l6t+gP+9FPRovtcP38xl/FF/j
Jb7GS3yNl/gaL/E1XuJrvFxvnwVf4yW+7+cznunt74Kv8RLf9/MZ7/T29cFX
v4qvX5dvVe4leP+el3N8l/8S9W/KvVmVo/FSPe5XZzxVfI2X+O4v5/0N8TVe
4mu8xHe/4QL7onPsUy+wDp9jX3QBu3+OdfgCduYcdv8Cen0OO3OBfsz4rvfP
Bfr3PP7u8ahz+MsXMV5ezj34aQflfgnjw7xvwngx758wfsz7KIwn834K48u8
r8J4M++vMP7M+yyMR/N+C+PTvO/CeDXvvzB+zXswjGN7/Zty71x/Z9xK4yFa
/e92Nf06+g3cl3Lfw3WVdpt2gXpHuYb678bv0H8Pgx7Kew/0JOihvCdBD+39
MOihnhdBD/pxhvqWyN8HfU3uvwp60O9ztOeqKQd/JY/Tk6Alj2jJI1ryiJY8
Xs8S+fugJY9oyePtuQqa40A5bv6dBC15REse0ZJHtOTx+pbI3wcteURLHm/P
VVOPOA43y5G/Ls8E8kwgzwTyTCDPBPJMIM8E8kwgT50H1KObxyHl4K/kES15
REser2+J/H3Qkke05PH2XDXnMefBzXo0Ke0WzV/JI1ryeH1L5OuDljyiJY+3
56pphziPb54Hk9LvbLdo/koer2+J/H3Qkke05PH2XDXtKO3QzfN4UvSG/c52
i+av5PH8fdCSR7Tk8fZcNdcB2tGb7VDOY84D6hHHgXLw1+31EvZ6CXu9DHlE
cx3z+dNj/vTFDnEecx5QjzgOlIO/Pn96zJ8e86euw5KHdp92k3aH85Z6T71h
v7Pdovkrebw9V819hOThukW7T7tJu8N5S72n3rDf2W7R/JU8rX2Q5PF1iuvw
pNh92k3aHc5b6j31hv3Odnt7rlDffejdO7B7j4O+Jt96P+hh/3wa9LBfnoFe
YF3ogh78k5cofxX00Lx10MNt+cugv33d4Lqvllz81Xi1/i759Xdfr+4HX+nV
P55+ErT4Sq/+E9/Xu/vBV3r1r/i+Ht4PvtKr/12+F0GL7+kXaO8Z0i/Qbx36
bYn6ukiv8fX290GL7/2zQn+/Qv+sIr30Q3y3C/eDr/TSHx+vnAfiK730S3zR
4nPetPSkpVf6u353/V365H+fBC2+0kufxPf14Z3gK730SXxfP94JvtJLn1y+
F0GL7+kXaO8Z0i8w7zr05xL1dZFe+uTt74MW3/tnhf5+hf5ZRXrpk/i+jrwT
fKWXPvl4XQUtvtJLv8QXLT7tcsvOtOxSS09aeqW/e/r236VP+rvvfx9D3yah
T+L7/vgx9G0S+uTyvQja9W0S+uTtPUP6Bex2h/5cor4u0kufvP190K5vk9An
7+9X6J9VpJc+ie/7nMfQt0nok4/LVdCub5PQL/Fd3yZl3W+tU611rWVnWnap
pSctvdLf9bvr79In/V36Jlp8pZc+uXwvghbf0y/Q3jOkX2Dd79CfS9TXRXrp
k7e/D1p874cV+vsV+mcV6aVP4kvfRIuv9NInH6+roMVXeumX+KIZD+G+h/uc
1r6otU611rWWnWnZpZaetPRKf9fvrr9Ln1y+F0GL7+kXaO8Z0i+wb+zQn0vU
10V66ZO3sw9afO+fFfr7FfpnFemlT+JL30SLr/TSJx+vq6DFV3rpl/iiGa/i
vvnmfXLdV/u+hfucui+6fZ2q69rtdqbapdv1pOqV/u7y7fr7Au09Q/pFpJc+
eX8uUW4X6aVP3v4+aPcnXoQ+eX+/Qv+sIr30SXzpm2jxlV765ON1FbT7Ey9C
v8R3/+FF8Ytd3xbQt+qXub4toG91X93a57T2Ra11qrWutexMyy619OR2vVqg
ve2/u74toG+L4Cu969sC+rbA/u4M+raAvi2Cr/Subwvo2wL7uzPo2wL6tsD+
7gz6tsB+7qzEXdx+pZ9OvvrN7Vf6WaLFV/rWPtn7PffVbr+6nfui1jrVWtda
duZ2u1T1pKVXXm638+9uvzrEQzrEQ5awX13om/fPKtK7/eoQD+kQD1nCfnWh
b6I9HrKEPesQD1mWuJ70iXGeVlxI+kQ/veXXt/ysll8mfeI+ubWvbu1zWvui
1jp1+7pW7UzLLrX0pKVX+ru3v/136ZP39yv0zyrSS5/El76JFl/ppU8+XldB
+/6tD/0S3/dvfYkbS598XrTjitIn8aVvosVX+paf7nb/8U4/S7T4St/aJ4vm
vrq1z/F1ivuiuk611rWWnWnZpZaetPTK+2G18+/SJ/3d/dMV4nOv4J+u4J+u
EJ97Bf90hXjcq3IuIX1yu9qOS0ufxJe+ebvf2RnnEc24kPRJ/F1+fcvPEk2/
rLVPFn3zvrruczz9Yuc65fV1O+1Myy619KSlV/q7fnf9Xfrk43UVtPhKL/0S
XzTPG3luwXOK1rmG9Ilx5lZcuhUnbMUVpU+M87TiQi0/veXXt/ys2/2yuk9u
7aulT9zntPZFrXWqta617EzLLrX0pKVX+ruPV/vv0i/93eO9V+VcVfrEc69d
5xS74sq74oC74ja7/OxdftGufeyufceudWLXvN41DqL5e82O9ze69/KonHsr
3dC+B9gnPcA+6aicYyq/v1e8G7TXc1LOpZR/6M/j4ItW/uH3aTlnUH5/73gX
70d0b+FZiRsrv79bvIv3JYorz0scUPn9Hd3doJXf3wtlXEf5/V3X3aCV398T
pZ/u47zE/Qaet/fF71L+IdlL7FteYp1Yl320j98K48d99kXZFyn/8JvrmGjl
93vvuc75+F9i/C+LXfL61O6HO/Q+cSaU3v2FB/APHmDcE7fi9nxHwZd9VDr3
Jx7Av02cBeUX7fP0BOVPojzNJ9bnch9HftEqX/NTfPdfHsBfyfr8HcU08otW
+f6e6CH8nQfwbx7A336Ed8UPg1b5/h4p76F6+YtSn8r3d7APg/Zx6sA/g750
pT6V7+82Hwat8v09VN7TVHnub2V9fIfp84FxvXpv0sdzVerju0HlF63yZV/E
1/qo8mQvWB/fubn8K8yvi+D7Pv8B9lkP4Cc8wrujh0GrfH8P9hD7ugfYBzzA
vvAR3sk8DFrl+74i8VdkJ1rrLnFwlN774V34k++WdV/tvt0uHQVfv46v8rjU
p3z+/rDmk/3y8ieRTvaE+dyuHkP+Y8Shnwbf75O+C//2XdjLI7x/fA+4F4/D
fonv91PfhT/8LuzlEd5Pvgechsdhv8SX/fLyF6U+le/vL98L2teBDvwz6EtX
6lP5/n7zvaD93OkjjE+++3b//F3Yy3wn7vOB5wz1nreP56rUp/Jlr5RftPu5
GaeR/XL8n3Wpz/VzBflX0OMLzI98B+p+4Luwl/luVPlF+z2Zei9Z5blf8i7s
5RHev76Hd4ePYf+OYL8mzX2/aLdf+T5JfNkT5pfdcPvV2vccBb9lJ1ifynf7
Ve2S268J5DiOdKxP+dx+1Xxuv/Idk9L5eddxaZfbrwneB78P+5XvilSen48d
w786gf2a4H3x+7Bf+c7Hy1+U+lS+269J0Crf7Ve+u3F96Up9Kt/t1yRole/2
K9/BqDw/hzmG/3YC+zUJ2se3vkvx8VyV+lS+269J0Crf7Ve+E1F5siesz/Vz
BflXmF8XmB/5Tt3jasfwD09gvyZ43/0+7Fe+o1B5Hrc5hv94Avs1wbvu9+E/
Jj4X76Mx7kAcQb5HpJ/D/JrXsle3+1VHwXc7nPsQ1qfy/X163fdIbr6XpJ1g
fSpf/d6yS0rHd5eOi3Ra6lM+fx9f8zlOVL6DdFyYWcmn8v19/RPgMZ2G/eK7
RC9/UepT+bJXfr/1OfzYDvwz6EtX6lP5/r7/SdB+L+cjjE/i5siesD6V7/gA
T4L2fqzv6Hw8V6U+lS975edUL3EOkOdYsl+OD7cu9bl+riD/CvPrAvMjcTRk
T1ifype9Un7Rfj+0vvtSebI/rM/1/xL6f1ni4t6eezEPWnFP4pzy/THjKMyv
eSd7dXvc5ij4sl/0c1ifync/t/pVsl9eft2HsD6POx039z3qV/FbdoL1OY7H
tGmXlM7fnX4I3KpZqU/5fBxrPseNy3fUnm5R8ql82Su/L/0ccbIO/DPoS1fq
U/mOh/Zh0H5P8COMT+J6yZ6wPuKA+XzgvbD67tfHc1XqI26Vn5vnPR/ZL77D
dbzEdamPOEsu/wrz6wLzI3F+ZE9YH3GBlF+03zeu71RVnuwP6yOOjet/ntv6
+83Eb5Sets5dXC8fRXrZL8ZpmZ+4zsrv9ivjHOLLfjGOwvqIQ6z8jKPIfnn5
1c9hfcTNdfmPyz5B/NY+hPUR51X5uQ9xPB3iTKSdYH3EJW3ZJcfnIe7D80jH
+oij2con++X8M+TrSj7iPiq/269F2C8fn8Qd9Ht/WR9xCn0+8J5qC6fgedgT
1kdcPeV3+7UI+yW+7JfKkz1hfcSBc/lXmF8XmB+JQ+b3OLI+4pYpv9uvRdgv
n1+JT+r3Ap7jHkribLn+5z0Sv6eQeKa8f81zX+LEe9yingMxv/RW9ur2c6ej
4Mt+MU7L+lS+x91rXFj2y8uvcRTW5+dmx5A/4yiyX+K3/BzWp/Ldb61+le9z
2vsQ1qfyfV9Z9z1uh9p2gvWpfLf71S55usSNcX3pSn3K5+NS88l++fgkLqrf
Iz4r7fJ4/RnsWeLbev/3GM9VqU/ly175vcK8By375e9nXkV5siesz/VzBflX
mF8XmB+Jk+j3ws5w/tghXn8Ge5b4vD6/Eq/X7ymd4fwxcQBd//Nem58/5r0T
jXPr3onvqx9FetkvnjMzv/RK9kr5RfOcRnzZL54DsT6V7/cn6rmT7JeXX+O0
rM/P5Y8jv2jGOcRvxVFYn8r3+xM1buN+QtvPYX0q3+9PVL/K1/H2PoT1ud14
Hvm5D/F51rYTrE/l+/2Japd8nBJ3SuV5Py6L3fP7EzWf7Jf3f4/xXJV8Kl/2
SvlF+z3SvAct+6XyZE9Yn8ud9/ZF+/y6CL7fO17Cn8v6VL7slfKL9vc1FbdI
5bn/t8Q93cQpdf3Pe7Z+z/MjxL/yXpyvC/fhtz+K9EM99R4L82vcZa9uvzdz
FHzZL1+3Hpf6VL7Hv+q5tuyXl1/PgVif6+0x5M9zINkv8VtxWtan8j3+VePC
Hv/KOIzK8/cGWZ/K9/hXjdt4/Cv9JC9/UepT+R5nqH6Vx7/65j6E9al89wPq
vsfjX2lnaCdYn8r3dbraJaXz/u8xnqtSn/L5PKr5ZL/El/1SOtkT5nP9XEH+
FebXBeZH4kz7vfmsT+XLXim/aJXv8a/EWVN5fs/7JeL3PeJfSat8j98n/rvb
+Xrv1vvlEc516z055te4yF4pv2j1k+yX+LJfKs/vT2R9Kt/vhdV7M7JfXn49
Z2Z9vi4eN8+1Zb/Eb50DsT6V7+eq9dxJ9kv8VpyW9al8P/eocWHZL/Flv7z8
RalP5XtcssZtZL+cX/0c1qfyPW5Q/SrZLx+fug9hfSrf9/V136N54/1f7QTr
U/maty27pHTiuxz5joz1uX6umvlkv3x+JA6+359YlXbJXim/aKWT/fL5ld83
8PsTK7wXSpx31/98h+TvVvLeP9+vqV2yP253H0Hueg+X+dVvsle33/s9Cr7s
l8rz+1hZn8qXvWrdy5P9In6pryPvl/pUvuxV696M7BfxUFWe3+PI+lS+fyeu
nmv7OWv7HIj1qXz/rlk9d/JzkHaclvWpfNmrVlzY45TtOArrU/myV624jccR
2n4O61P5slctv0r2i/i0Pp6rUp/Kl71q7Xt8HW7bCdbn+rlq2iWfJ4mbq/J8
npwXu6e/t/L59zATx1bp/P7WeWmXf6cjvw+idH5/Nb8Ponpa7474HVW3q/We
P/Pzu6zKL5r3asWX/eI9XNbH74gqP+/9yn55+fWeHOvjdy9d/uNyL0X81j0W
1sfvNCo/7834/dU8p+Y5M+vjdwWVn+fafn81z5F4DsT6+B085ee5k99fvWrG
aVkfv9um/IwL+/3VjMMwjsL6+J0xnw/Egak45vRzWB+/i6X8ormvEF/2i/sQ
1sfvOLn8qzLvfX5UO8H6+N2hll3y+6tX0ONL3P+6LHbP76/WfKzH91v5DtLt
2nugJ0H7/uIe9gP3sH7fw3qb5waev/q1ot3u30M/3kO9iVPucbtH8Isfxt9l
P8WX/P7e6gT8Ccp9Crv9JPh+/yFxKMX3+wuJG+jtT9wtPwfL74e7fPX74V5/
j3UpcUjU/94/F8H3fcgjnJ/fxzx/hHFN3Hj1u8cnEg9bfP2Kr/HR3zU+zp9g
XJ9i3XsSfPfPE/dTfPevE6fR2584Z37OfgT/NnHQvH096u+xrifui8bH++ci
+O7nHMG/SxwP7797OCe7G/3q9w8SP1p8leNxl/eCr1/nTzCvnmLf8CT4fv7+
GPbmBOfnj2F/8vvgfg+rfh/c5avfB/f6e+yLEmfH7Vd+H1x8t2cn2Ac8hn3L
9wZDOfldBfWbz9PEWxbf9STxlcX3diaestu1p9h3PYm/+z3fxLUV3+/RJQ6p
tz9x/PweRH4P3OWr3wP3+vO7ohof8TU+LtdF8N0PfYp9eOLUeP/dwzntXZxb
PEIc8SH67Qhxv/eC73qe+MO+rjzFvvVJ8PVLHGH/+xznJi/Q/sRN9PPX/P43
cRW9fT3q77EvTxwpjY/3z0Xw3U/O738TF4j3Rf2c++6en/s8Qhz2IfT2CHHT
94LvdiTxen1df4p9/5Pgez8mHq+PyxznTi/Q/sSp1Ph4vo8gX/3et9ef39XV
+Iiv8fH+uQi+44bl976Jw8T7cH5P4G7I5eOT+LduN46Cr/Hx+yon4E+wr3oK
v+lJ8H18Er/W58U8+Bofb3/igvr+rcP4JG6ot69H/fldYx+fBfZvHcZngf1b
h/FZYP/WYX9NHJv8nrf4Gh+320fB1/j4efwJ+JPgu53Pd1B+/+JZ8DU+bpfm
wdf4ePsTh1Xj4+PyEeSr3/P2+vO70hof8TU+3j8XwXdcvI+wv844AO8z+D2V
u9EujQ/xVcXX+BBPVXyND/FTXe6n8NufBN/fceQ7CF8X5jg3foH2J56p7w+y
n4l36u3rUX/+XeND3Envn4vg+/6gR5zlJfYHPfZviZOken3/ljgm4mt8xNf4
iK/xcf4Eevc0+P7ObI11Nt+RiO92Pu9pe/sT/9PvIa6h53nPyNvXo/4cF++H
Fc6p1ti/rRAHXmP/lnEe7797OK+9G+VqfMTX+Hi9Rzh3ey/4Gh/nTzDvnyJu
9CT4/o4o3wmJ7/f08x6+tz/xMt0/ze9zu3z1+9xef84L9aP4Gh/vn4vgu396
gThfxvG8/+6V77r5vYtHBe/Sx/2o4Ft6fO6k4Fm63X1a8Cs9nvas4FX6vnRe
8Cm9/Ykv6ffY0867fPV73F5/2iWNj/gaH++fi4In6e9Sr9A/V+i/ewWniOcT
PE9g/J/xesbXGQ9n/JrxZsaHGc9lXNTPuV9v23mwTf8a92xexzmM+NI78f0e
3mvci1H6Y/Anwfd7cK9xL+U17rG9xr2S17iH9hr3Ql7jHtnr0Dvx/R6Y2rsM
/jBfX6L+PvjD7yr40jvv3/Pg+/nha8TrX4feaVw4Dux39jP7lf3IfmM/sV/Y
D5SbclIuT6/x2cSv5z/Yzr/8p797vG4/fn0dexD5h/LvR7qhnodB+/2FO3eG
P78TfOmx5z+O9H5fYj/0WrTfL7hzZ2jf+8H3+N8+7gvcueP3GfYRD9zH+f+d
O34/YR/xwX2c5yv9AuWdoV+X6M8O/bEMWvqh9H4fYD/mjedfoX9Wwdc88vE+
j/RaR308z9H/l9CnS4zXFfprE+ndju/H/BTt7X5Q9Mzt0f1IL72jnrn9eCfS
S++oZ27PHkd66R31TOmlh0ovvaOeKb3jVEvvnxc9U3rpoevBWdEzT7+I9NI7
6pn3Zwc9qHqm9I5Trf6seub9k3opvaOeKb300Pu/6pnSSw99XlU9k95QLzju
HFeOG8eF/c5+Zb+xXyg35fL0r8v5rP7u9vwA9+EOoF/591Y+t+8HuC93AHt+
gPtuB7DfB9Gfot1eH+C+2QHs8wHuix3AHh/suf09gP09iPEQ7fb2APetDmBf
D2K8vD9eBe328wD28yDG0/sn9yVuHw/CfnpcZoPx2y/j0ho33x88DNrz7zfG
sY6z8osvmus4x72lF17eJGjPv1/0pKVHyu9xpc0e9wHUq5beKb/HoTZ73CdQ
D1t66uP5AuXlPoJ629Jr7/8zlJ/7DOp5ax64viyD5j6E86I1b7z/eoxvrh+c
R6155vr7KmjuYzjvWvNS+T1Ot0H+/TJPW/PY9fkqaH5XXvZ7yH+v2HPOe85j
pfd44OvmPOe89fXlKOjWvOY89fafIH+dx5yXvl4+Dbo1bzkPvb+eoT/qPOW8
U3qPV75uzkvOM68v1/vWPOS8UnqPd75uzjvOI29vj/bUecZ54+OV+4/WvOI8
cf25CLo1jzgvfLyv0J46b0Rrvmhe+r2h/dBn0dJPt6tPg/Zz332cM+7H+Lqd
/wjlpT+m/vT2XATtcTD6Q/ea85rzlPOO84jzgnpOvaUeUq+oJxx33hdUPEL2
SLTsi9MZx2LcinEqzU/RjENp/nj+jDNJv0UzjiT9E+3yvoZe7WMc03+lfzqU
l/4n/Uv6j/QP6f/Rvxvm6UvUt0I7q1/verxB+v//59lgf0Yhz0BP4ceeIr4x
A38OfsW1cHpd4iVOb0CPcC6R9xhUvvNHOKfIew2+vhxB/pNIL9rbfxLpNX5K
L1rpnT/CuUbeg1B6549wzpH3IpTe+aPQD++fPF93/gjnIHlvQumdPwr9cnnz
fbTzRzgnyXsVSu/8Ueinj1fiJDh/BP3NexdKT/2WvVJ60Urv/BF+u72/aeUs
915u7bjL+6NI/4+3tNJ/+vrv/zPSD+v2H0f639vSSv+PtuuA0g/2axLpf3tL
K/2XtuuE0g/6mvr5nS2t9F/friNK//3rCj6M9D/Y0q7/H0KfUz9nW1rp396u
Q97/Z5Hex0HvS8+gz6mf+1vax2sZ6Qezlvop2vU/9XNo36tIL1rptQ4q/dC/
qZ+iXd7zSD/0xxX6p+JyKP2gr6mfX9/SSj/brq8D/3A7H/7zlh7vfeO6wfLb
puALf+u72/JO975r6+Dp3tj0ud97d5t/4K8L/aNteWrPsP7+MNrzk+16r/qd
L3zp/xH1PxgUIOj/c/37MNrzD7f5VT/pf7stT+0ZivujaM/3t/sN1e/8aeRT
/X/3unveCfrzNh/7va9s86t+0r+yLU/lDvX/abTnL67THUf9ztf793HUP+jD
Y7RnEu35g21+1U/6zW15d6xd02iPnyPV30Ffn0T9gz6+H/RbZk80796P+kl/
aVue2jOsNz+J9vg51RR84ct9EPXz95tmr/q9z2zzq37Sb23Lc31+Hu3xc7Ap
+MJbeRH1D+M3C/p7Zg+Fm/I86ie9vy3P9WcR7fFztin4+n7fGdqzCFp+gdqj
/Kqf9LNted4/y2iPn+NNwdd8W0b9gz3qgh72M0v0zzLqJ63y1J6hfS+jPdrv
q37nC5f+ZdTv991OsV7o3t3LqJ+00qk9g31bRXuGdKuo3/nSn1dR/9DeVdC+
Hun9xCrqJ72/LU/tGX7Poz3yd1S/82V/zqP+oT/XQft610e9rd83t+WpPcP+
5zLa4+eoU/C1fl1G/cPfk/b1VH7QZdRP+gfb8tSeQd5NtEf+nvdH0kN9r6N+
v+9yuveBrde6V7mJ+kmrvCG99m+5nrt/lnF51ef+1Rz52+c73j8qf4P8o/Df
XV8fRXvEV3vcP5sjf4f0S9BrlM/vvY1wr2IKf26Geyun8P/myN8h/RL0GuXz
+03a3x5jvE6iPeL7eJ1Eezx/h/RL0GuUz++xjMp67v7oDPd2TuG/zpG/Q/ol
6DXK5/cVRmU9d393hntDp/CP58jfNXEU1R4vn3jpo7Keuz89w72lU/jfc+Tv
kH4Jeo3yiX88Kuu5++sz3Js6hX8/R/4O6Zeg1yifeKajsp57PGCGe1uniB/M
kb9D+iXoNconPuGorOceb5jh3tgp4hNz5O+Qfgl6jfKJN6b5nuu3xzMSf0rt
8fjHHPk7pF+CXqN84geNyno+2KuLaI/4ao/4ao/n75B+CXqN8okHMirrucdj
Zri3d4r4zRz5O6Rfgl6jfL7vH2E9z/Mu1ef8eh7l/A1oxU/SH74Pepj/vx/7
i9+19XW89VfuRf0H5q8vi3/u/ne/97+sfNm39Ie/BnqY7z+K+l/Y+jre+5at
v93evzR/fVn8c/e/+73ftPJHUW/r1+Nh4+3+7N2gP7D1t9v7s+v6fxztoX/u
/ne/leePoz3yr1U/6WG+T6J+/v6Orb/d1p8coz3pn7v/rf17xuvkX6t+0kN9
T6N+X18V38h43+f3f9ZfXxb/3P3vHuWPwr9W/aQ9Xkh/fVzi3V82f31Z/HP3
v/utv5zxRvnX3h9JD/oxj/p9fVW8JeOV3zR/fVn8830rv0f5o/CvVT/podyz
qN/X13GJ139g/vqy+Ofuf+udV67X9IdJezyV/vq4nAd8xfz1ZfHPvfwe5Y/C
v1b9pIf51kf9vr6Oy3mD++uM59bfz1r5o/CvvT+S9ngw/fVxOc9wf53x4h7+
t+4bZDxZ/rX3R9Ieb6a/Pi7nJe6vMx7dw//W+708T5F/rfpJezyb/vq4nMe4
v854dw//W/ot/jTWyyH/Kc5bZljvZrEeaj3/Bvzh/wJ/1/Nv9v7ath9E/1db
X3Ve9r2gPZ59CP54e96S56nOn8b6K/n+2zABgvbzotne37P8s4h/i/b1dhbr
seT/XfTHU1vvu71ftfK7vX+6LV/pvwl/fmH++hLtX0Y8X+Or9qv/SXv7N3u/
Zu3ZbM/Tfhj0byH9l23/oXjFH8I+/lGMl/PH2/3Hoxgf509jf6Lx+fXr9uX5
gJ/XzfaeW/5ZnA+I9v3ILPYr6t/voL+/h3jFUyu/2/s32/KV/ifb/ZLoH77l
8Q1v/zLOOzRear/Gh7S3f7Ot7w+D/m2Td7P3n5B+WI9/jPn1J0H7ecgh+OOt
PTqK8XH+NPZvGp9BP/L8xM9L5Y/8SdB/YPXPsF+bxX5O/fsc/f3n178Zz/k1
K7/b++/b8pVe+0nRn9rKqfHx9i/jPEjjpfZrfEh7+zd7f8fas9na4z8N+utI
/1nbvyr+lvch1O8aL+drfp1EOudPY/+p8Rn2J3m+5OfVs217GV97P2jfz85i
v6v+/Tb6+7O2n+628y3395/etlPptd8W/bltfo2Pt38Z52UaL7Vf40Pa27/Z
1pfxvk9Zf2/ifF/0F2x/P9ruL0+D9vM02cPTGK+3zZ+Ygj+N/b/G5y+2v6L3
bX8/Q/5ZnL+J9v3+LPwB9e/b6O/fNH+j29qf06Df3Jav9B9s/RHRX9jm1/h4
+zOupfFS+zU+pL39G7RH90p/EvR9pP+K+T/aP+d9ID9vPASf/tYU/Gn4L5Jr
sP95Pun3NWbl9/NW/wz+0Cz8JfXvM/T3V8wf67b2Mf3DL23LV3r5a6K/ts2v
8fH2L+O8VeOldml8SHv7tR5lvPiLJu8m7reI/pb5h/IvFkH7eewh+LluaHyc
LzuS8d5B3jy/fcv8wxnyz1C/vs+Y6eVPqh38/bz5q91W3kXQb2/LV/pvbf1Z
0Yw/e/uXcR6t8VL7NT6kvf0btEfzKemPkV7+tcZnsH95H87Pqw/Bp78+BX8a
/q/GZ+j/PN+W3Or/Nyz/LM63fTwz3i5/W/27j/5mvP3XrXzdv8v8v77190U/
2+ZXO739+Z0mjZfar/Eh7e3foL826O9N3O8S/VWLL2g+ZXxhaG/GE5zPeMYU
/Cnuh+06/1e8mOcfL4P2eEPaIfXvm+jvr1q8o0P7upBP6b+/jYeI/to2v8aH
eD3+HrWP9mt8SHv7N2jPBv29QfxG71DyfGSoP88n/L7DIfiM90zBn+J+3q77
EcJFWwX9Vat/hnjMLOI16t+30d+DfHle4+3rQj6lH+ZznvcM+7WMF3n7k9Z4
qf0aH9Le/g3as0F/bxDf2iD+pXhm3scdfjMe5XzGw6bgT3E/ctf9kdl2fa3r
tGiPV80inqX+/RL6e5Avz7O8fV3Ip/QDP8/Dvr3Nr/Hx9iet8VL71W7S3v4N
2rNBf28Q/9sgPqh4Rsbv/L7MIfiMF07Bn+J+6q77NcJd5PniZdDPtuWJVrxP
/fsc/T3Ynzzv8/Z1IZ/SD/w8L/zcNr/Gx9uftMZL7df4kPb2b9CeDfp7g/jo
BvHTEcZ5hPtEh+Aznpp+nsZD943Uv5+y/DPcL5pv/efsr6F9ed7p9Xfb/szz
T7/ftET9fdSv/vP21N/PmfyyP3ejP0gP7b0f/eP8MfhT8KfgJ26p+pO00rt9
yPjzoO95Xuv557iPtUT+vtBe3xrlrdH+DfJv0B7dT3gY/Tfo84OgyR/08Z3o
T08/BT1G/jHwuE9Lfk8/RX2JE6v8pL38OcrTfjnPqz1/4tJqPDx/j/b2he/1
53fcRHt9a8i3QXkbtHcU7/40Hn6/7LDwHY9lXO7DOT1G/nHkV/8yv6efor4Z
3imeFtrLn6M8rQ95nu/5EydY4+X5e7S3L3yvf13u83l9a8i3QXkbtFfjNYnx
GMo5xnglf8j/fvS/p5+CHiP/OPKrf5nf009RX+Io+3gl7eXPUd4M9w075J/j
PuMS+Xu0ty98rz+/M+jjNQna5dugvA3aO4p3sxoPvz9xWPiOR1TfR/D+hecf
R371L/N7+inqm+Gd72mhvfw5ypN/k/dBPH/iaGu8PH+P9vaF7/Wvy31Qr28N
+TYob4P2Kp72YYyH3y85LHzHg6rvR3g/xfOPI7/6l/k9/RT1Jc648pP28uco
b1buy3j+xDXXeHn+Hu3tC9/rX5f7sl7fGvJtUN4G7dX9gbyP4/dvDgvf8bjq
+xre3/H848iv/mV+Tz9FfYn7rvykvfw5ylM8Ne8Tef7Emdd4ef4e7e0L3+tf
l/vEXt8a8m1Q3maP74X9ftEh7icdFv5QXsZDeV+Z95s8/zjyq3+Z39NPUV/i
8Pt4J+3lz1HeDPHbDvkT91/jxftX3t6+8L3+dblv7fWtId8G5W3Q3nx3rPHw
eO9h4Xv8r77P4v0vzz8u8VDm9/RT1JfnMspP2sufo7xZuY/m+fM7DP73vI/m
7e0L3+vP796K9nLXkG+D8jZo7wjx40Pcbzss/GE/k/FQTz8t9+M8/7jEQ5nf
009RX36nQvlJe/nzRnw87+t5/vwuhvqN9/e8vX3he/3rcl/f61tDvg3K26C9
I8SPNZ8yXk3+UH/GQz39FPQY+cclHsr8nn6K+vK7IcpP2sufN+LjGQ/1/Pmd
Eo2X5+/R3r7wvf78LrNor28N+TYob4P2jhA/PsT9yMPCH37zvqKnn5b7lZ5/
HPnVv8zv6aeoL7/jovykvfx5iY8P+pzxUM+f343RePH+p7e3L3yvf13ee3h9
a8i3QXkbtHeE+PEh7o8eFr7HF+v7UN4/9fzj8h6T+T39tMRTxVd+0l7+HOXN
yn1Yzz/He5d6P9bb2xe+178u72G8vjXk26C8Ddp7iHjiGHRf4o2DPb0f+T2+
NQY9K/FVz9+BvwS/R3kb8EeIvx0ifjMGPSvxRc/fgb8Ev0d5G/BHiC8dIj4x
Bj0r8TPP34G/BL9HeRvwR4ifHML/HoOelfiQ5+/AX4Lfo7wN+CPEBw7hX/J+
06zEPzx/B/4S/B7lbcAfwf89hP80Bj0r/r3n78Bfgt+jvA34I/h3h/APeD9l
VvxXz9+BvwS/R3kb8EfwXw6x/+X9i1nxzzx/B369b8L3oc4fYX9+iP0d7xfM
iv/h+buf8z5F7iedP8L+8xD7F56fz8r+2vN34LfuC+T+yfkj7K8OsT7zfHhW
9o+ev9t5Hu7lbcDXeWiu/77+8PxzFunVHs/fgd867831zvmjsv5zfXd+t+M8
dAM6v4/xsdml11Gf8+eg10h/CXoDWv2rf6Ptfbl/H/zhvFp4Tg+R/rDQ+5Z/
DP41vXj5z/7Db0hepZe8/25YEEPeB1beLPCl1L8q+WfG++//6j//zm+I/o/X
+RPf4h9Yed3er7z9s/ItUd4y2iP6u9a+HvL10V6Nh7d/s/evQb82eRTfyvF3
PK9Z8EUP87mlD3l+r/Z4fu3nkv7Ctjwfz3x/7PQ0aLXX+T34a/BHqE/2MOv/
Itrj7T8M+dQ+0q7vFa/F++cU/Pw+gfrT29dt75cn7emXge8i2vP3kK+HfH0Z
P2/fBuXpfX/On33T3zn47e+nqHynFe943ejfHrT+pZ35+ewIy6120f0Knuvz
3Jjnkjz34rkK4/aMCzPuyLgW4yb0y+n3zSBv3hv52Nqhf8Q15Tk4z1l5jsdz
Ip5DMM7NOCrjdIwDMc5AP7baKdePJeTl963qOuf6wHsTPJfnuS/PFXluxXMR
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
EtfI9XkMfa7njcTZaeG8iHb9rrgxru9j6Hs9z3SauBaJgyHa9b/iavh8GO/A
dag4D7fjuO7CFU3c0o+3eufzgbiWU9yfOYX+E1cxcRuV/nZcvynu35xCv4kr
N8X9nFPoM3HNpri/cwr9Ja7WFPENfqeAuE5TxDOIk09coSnuBxGnnbg2iZuj
9Lfjqkxxv4g41cT1mOL+0S7c3104tKfQx4qLSpxV18+Kyyn9Yn6lvx0H8hT6
WXEJiXNI3Enpl6dflPxKv+s+OnH3pF/i8/zC9bPiUkm/mF/ppV/iS7+YX+l3
nXe4flZcGJ5/uH7Oyrty16859GkOfZlDH+Z7xL24GXeCuIX8LkvGD70/5+iv
OfpjXt7Fu//SwX/pMD86+C8d5kMH/6WD/nfwXzroewf/pdu7GRck35MRp4M4
gTfjZnyE9hDHIt+jEVfC/ZcO+tjBf+mgf13BFXJ96wpOgcZnGK9ljI9o18dl
jI9o189ljI9o4tBofLy8jG8Sx/RmnJbEAyRuCnEab8YxSVxA1/9ljI9oxjs1
Pt5+xj8TZ8vny7LgOvn8qfHNFg686CFdxSEX7fv9Ng626JtxsysOs9efuM0t
HGDRxA1u4dCKJm6t7296zL+Km9rC4RRN3E4flx7zs+JGtnAIRft+u42D5/Wv
MB4Vh02076fbOGDe/7xflTj1xEHX+IomjjNxgolDS5xT4mj6/q/iAPr+reKY
tb6D4OVV3H3Rvh9bw161ccVFt3CsRbdwk729FafX21NxYV2+ikPq9VfcS++P
irMouoXr5/1TceS8vfldCrdPxB0j7hdxt4h7Rdwp4j4Rd4m4R8QdIu4PcXr4
XQ1+R4PfaeB3AIgzTxxz4mQTh5k4v8SRJU4pcTCJs8j3ZlPsz6bYj02x/5pi
vzXF/mqK/dQU+6cp9ktT7I+m2A9Nsf+ZYr8zxX7mFOM1w/7mFOM3w/6G8YAZ
9jf0/2fY39Dfn2F/Q/9+hv0N/fkZ9jf032fY39TvCvr+pn7Hzvc39btpvr+p
3+ny/U39LhS/g6P+F+32eA77O4e9ncO+zmFP57CfuW/0/Hnfwe3hHPZvDnvH
7/7kd2VEu/500JcO+tFBHzqMf4fxzn2r50//wsevw3h1GB9+pyi/gyPax2eJ
8VlifJYYnyXGp97X5+8nva/v9mCN+b/GfF9jfq8xn9eYv2vM1zXm5xrzcY35
t8Z8W2N+rTGf1tC3+t0g17f63RN+V4PfbXB9q7jz6lfPn+etrm8V99f1reLS
ERdMfMnp6XfjhHn63ThhTlecL29Pxfny/Ltxvlq4e6L3jX99vvQzOHrE2Zui
/Gnwh3adAh/mFPnbOHOivbx5E1fv5v6q73FbOHuiHUevR/2Jayfa5bkEvQv3
boP3mMSZI87hFOkrTh71zekp5E8cPdHeX6c7cBGvx+dGHETR3r4e7ak4ht6e
Ndqz3oFrWHHqnN6Ns/cM88v5FafO6THoadDe34nr6Pw1+H/1OHvD33N/7+8V
lrjfr/VvHPL4+7lTvJ87xf3Bev/f/T29T8j4jt6rqT9031200ovWOEgefvfX
8cYOwT/c3n/O9zs/sHjU7vc4Hm8Z7/3Zdfk/jvHw+jq0J/0OtdfxkSRP3n8Z
fs8b/IpTLT0Rzfednn+K9k2Bd1O/A/4N2+/M935o8RzF//N+9adNXq13HwT/
TatP8zHvW/+5tbcr33nnd8T9u9T5HV7vl9yf8rukw983Zfykf29Yezdb/Uw8
v33rL36Xun5nV/0+lF+//6JxVv9rHG+muX86hB7lu13Xl2WjXN4f6BvlZnzA
+7G+n/P6p8iX54jejg5/T/3yfLlPvrkdHdrbIV2P9lKuNfKlXfP+Z7ynQ3+N
Sz96P9PvOkR7xqBnpR+Vz9tziH4fI/0Y6VnPFP2fcUiOg9rlcszQL2z3HH/v
0B/Vv2Y/uzw92ku9qP6Gyz2C3Oxftpt6Ut/DunzUS47zIX7H+J2ivGr/vbxx
Q85DyJV64X+v391S+dQH57OdeV6s9tzcbtoJji/nb4f6O8jX+t4Y7wXwe2A8
t6He0A5OQdPucF7mvGM/ervW6MfaDu+P+l7V5aXdpB07hXwztH8O+Wborzny
13iS179G/Wv022bv/wGqLo0S
    "]],
  Axes->True,
  DisplayFunction:>Identity,
  Method->{},
  PlotRange->{{-1., 1.}, {-1., 1.}, {-1., 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5442751258125*^9, 3.5463644244870276`*^9, 
  3.5463646890010924`*^9, 3.5463652676419134`*^9, 3.5478113398156652`*^9, 
  3.5478143262332373`*^9, 3.547818367141149*^9, 3.5478557937938967`*^9, 
  3.5522139328788695`*^9, 3.5522144236328697`*^9, 3.552216327130706*^9, 
  3.5522171834318595`*^9, 3.5522173105278597`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SideViewUnpol", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"SphericalPlotUnpol", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}], ",", 
     " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndOnViewUnpol", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"SphericalPlotUnpol", ",", 
     RowBox[{"DisplayFunction", "\[Rule]", " ", "$DisplayFunction"}], ",", 
     " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
     RowBox[{"ViewPoint", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", "0", ",", " ", 
        RowBox[{"-", "15"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Amplitude scattering matrix and Mueller matrix", "Section",
 FontSize->15],

Cell[TextData[{
 "The off diagonal elements of the amplitude scattering matrix for a \
spherical scatterer go to zero so we simply need to determine ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "1"], TraditionalForm]]],
 "(r,\[Theta]) and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "2"], TraditionalForm]]],
 "(r, \[Theta]).  This has been done already in the phase function sections \
above and these function have simply been copied from there."
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S1", "[", 
    RowBox[{"a_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
         RowBox[{"l", " ", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"an", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", 
          RowBox[{"pi", "[", 
           RowBox[{"l", ",", "\[Theta]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"bn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", " ", 
          RowBox[{"\[Tau]", "[", 
           RowBox[{"l", ",", "\[Theta]1"}], "]"}]}]}], ")"}]}]}], ")"}], "/.", 
    RowBox[{"\[Theta]1", "\[Rule]", " ", "\[Theta]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S2", "[", 
    RowBox[{"a_", ",", "\[Theta]_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"LastTerm", "[", "a", "]"}]], " ", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
         RowBox[{"l", " ", 
          RowBox[{"(", 
           RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"an", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", " ", 
          RowBox[{"\[Tau]", "[", 
           RowBox[{"l", ",", "\[Theta]1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"bn", "[", 
           RowBox[{"l", ",", "a"}], "]"}], "*", 
          RowBox[{"pi", "[", 
           RowBox[{"l", ",", "\[Theta]"}], "]"}]}]}], " ", ")"}]}]}], ")"}], "/.", 
    RowBox[{"\[Theta]1", "\[Rule]", " ", "\[Theta]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AmpMatrix", "[", 
   RowBox[{"a_", ",", "\[Theta]_"}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S2", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"S1", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.5462533482326565`*^9, 3.5462534005436487`*^9}}],

Cell["\<\
Display the amplitude scattering matrix for light in the forward direction.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"OnAxisScatteringMatrix", " ", "=", " ", 
     RowBox[{"AmpMatrix", "[", 
      RowBox[{"r", ",", "0.000001"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.544278984484375*^9, 3.5463644321154413`*^9, 
  3.546365267688713*^9, 3.5478113399560657`*^9, 3.5478143263268375`*^9, 
  3.5478183672659483`*^9, 3.547820813170244*^9, 3.5478557938718967`*^9, 
  3.5522139329668694`*^9, 3.5522144240478697`*^9, 3.552216327252754*^9, 
  3.5522171835728593`*^9, 3.5522173106188593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mueller matrix", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[{
 "The Mueller matrix elements may be obtained from the amplitude scattering \
matrix.  The relationships used here come from Bohren and Huffman's text.  \
Using the fact that ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "3"], TraditionalForm]]],
 "(r, \[Theta]) = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["S", "4"], TraditionalForm]]],
 "(r, \[Theta]) = 0 simplifies things substantially.  We are left with 8 \
nonzero elements, only 3 of which are independent.  I prefer the usual \
Mueller matrix notation, representing each element as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "ij"], TraditionalForm]]],
 "where i and j range from 0 to 3.   That is;\n\n\t\t\t",
 StyleBox["M",
  FontWeight->"Bold"],
 " = ",
 Cell[BoxData[
  InterpretationBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "00"]}
         }], "\[NoBreak]"}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "10"]}
         }], "\[NoBreak]"}], 
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "20"]}
         }], "\[NoBreak]"}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "30"]}
         }], "\[NoBreak]"}]},
      {GridBox[{
         {
          SubscriptBox["m", "10"]}
        }], 
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "11"]}
         }]}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "12"]}
         }], "\[NoBreak]"}], 
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "13"]}
         }], "\[NoBreak]"}]},
      {
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "20"]}
         }], "\[NoBreak]"}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "21"]}
         }], "\[NoBreak]"}], 
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "22"]}
         }]}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "23"]}
         }], "\[NoBreak]"}]},
      {
       RowBox[{"\[NoBreak]", GridBox[{
          {
           SubscriptBox["m", "30"]}
         }], "\[NoBreak]"}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "31"]}
         }], "\[NoBreak]"}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "32"]}
         }], "\[NoBreak]"}], 
       RowBox[{GridBox[{
          {
           SubscriptBox["m", "33"]}
         }], "\[NoBreak]"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[{{{
       Subscript[m, 0]}, {
       Subscript[m, 1]}, {
       Subscript[m, 2]}, {
       Subscript[m, 3]}}, {{
       Subscript[m, 10]}, {
       Subscript[m, 11]}, {
       Subscript[m, 12]}, {
       Subscript[m, 13]}}, {{
       Subscript[m, 20]}, {
       Subscript[m, 21]}, {
       Subscript[m, 22]}, {
       Subscript[m, 23]}}, {{
       Subscript[m, 30]}, {
       Subscript[m, 31]}, {
       Subscript[m, 32]}, {
       Subscript[m, 33]}}}]]]],
 "\n\t\t\t\t\t\nIn that case, the elements are defined as follows;"
}], "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m00", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"], "+", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m01", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{"S2", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"], "-", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{"S1", "[", 
         RowBox[{"a", ",", "\[Theta]"}], "]"}], "]"}], ")"}], "2"]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m10", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"m01", "[", 
   RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m11", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{"m00", "[", 
    RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m22", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"S2", "[", 
        RowBox[{"a", ",", "\[Theta]"}], "]"}], "*"], " ", 
      RowBox[{"S1", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"S2", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], 
      SuperscriptBox[
       RowBox[{"S1", "[", 
        RowBox[{"a", ",", "\[Theta]"}], "]"}], "*"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m23", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"S2", "[", 
        RowBox[{"a", ",", "\[Theta]"}], "]"}], "*"], " ", 
      RowBox[{"S1", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"S2", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], 
      SuperscriptBox[
       RowBox[{"S1", "[", 
        RowBox[{"a", ",", "\[Theta]"}], "]"}], "*"]}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m32", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"m23", "[", 
    RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m33", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
   RowBox[{"m22", "[", 
    RowBox[{"a", ",", " ", "\[Theta]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m02", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], ";", " ", 
  RowBox[{
   RowBox[{"m03", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], ";", 
  RowBox[{
   RowBox[{"m12", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], ";", 
  RowBox[{
   RowBox[{"m13", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m20", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], ";", " ", 
  RowBox[{
   RowBox[{"m21", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], ";", 
  RowBox[{
   RowBox[{"m30", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], ";", 
  RowBox[{
   RowBox[{"m31", "[", 
    RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], "=", "0"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.544278993546875*^9, 3.544279003015625*^9}, {
  3.546253437365755*^9, 3.5462534378297815`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MuellerMatrix", "[", 
   RowBox[{"a_", ",", " ", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m00", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m01", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m02", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m03", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m10", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m11", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m12", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m13", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m20", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m21", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m22", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m23", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"m30", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m31", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m32", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}], ",", " ", 
      RowBox[{"m33", "[", 
       RowBox[{"a", ",", "\[Theta]"}], "]"}]}], "}"}]}], "}"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.54427901134375*^9, 3.54427901421875*^9}, {
  3.546253446307266*^9, 3.546253448726405*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"AxialMM", " ", "=", " ", 
     RowBox[{"MuellerMatrix", "[", 
      RowBox[{"r", ",", "0.0000001"}], "]"}]}], ")"}], "//", "Chop"}], "//", 
  "MatrixForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.544279027109375*^9, 3.546364436748649*^9, 
  3.546365267891514*^9, 3.5478113406736655`*^9, 3.5478143270132375`*^9, 
  3.5478183679367437`*^9, 3.5478208262865562`*^9, 3.5478557944802976`*^9, 
  3.5522139342898693`*^9, 3.5522144247028694`*^9, 3.5522163278820057`*^9, 
  3.5522171841778593`*^9, 3.552217311108859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormalizedAxialMM", " ", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["AxialMM", 
     RowBox[{"AxialMM", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]], "//", "Chop"}], "//",
    "MatrixForm"}]}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0.0007995972602446939`", "0", "0"},
     {"0.0007995972602446939`", "1.`", "0", "0"},
     {"0", "0", "0.9999996803220595`", "0"},
     {"0", "0", "0", "0.9999996803220595`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.54427902721875*^9, 3.5463644380746517`*^9, 3.546365267891514*^9, 
   3.5478113407048655`*^9, 3.547814327028837*^9, 3.5478183679679437`*^9, {
   3.547820827955745*^9, 3.547820837222086*^9}, 3.5478557944958973`*^9, 
   3.5522139343318696`*^9, 3.55221442492787*^9, 3.5522163278970118`*^9, 
   3.5522171841968594`*^9, 3.5522173111298594`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interrupt", "[", "]"}]], "Input",
 CellChangeTimes->{{3.547815786784589*^9, 3.5478157882509413`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5522173150118594`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coated Sphere.", "Section",
 FontSize->15],

Cell[CellGroupData[{

Cell["\<\
Note that this code has not been written to account for the possibility of an \
absorbing external medium.  As well, it does not include all of the plots \
generated for the uncoated case.  These can be created in an analogous \
fashion to the ones generated in that case. \
\>", "Subsection",
 CellChangeTimes->{{3.5462534604100733`*^9, 3.546253462335183*^9}},
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
This section considers scattering by a spherical core particle with a uniform \
shell around, and in contact with it.  To start, we're going to need the \
optical and geometrical parameters of the core, coating, and external medium. \
  We next must calculate the relative indices, the size parameters of the \
core and the coating, and finally the final term taken in the series \
solution.  Note that all parameters which have analogies in the homogeneous \
sphere case above now have a \"c\" tacked onto their name to indicate this is \
a \"coated sphere\" calculation.  This way, the old variables remain for \
later comparison between the two cases.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Enter known parameters. ", "Subsection",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell["\<\
The parameters used here correspond roughly to a spherical human red blood \
cell with a 7 nm thick cell membrane surrounding it. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", "0"], " ", "=", " ", 
   RowBox[{"0.632830", " ", "*", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], "               ", 
  RowBox[{"(*", " ", 
   RowBox[{"vacuum", " ", "wavelength", " ", "in", " ", "meters"}], " ", 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "core"], " ", "=", " ", "1.402530"}], "            ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Real", " ", "part", " ", "of", " ", "refractive", " ", "index", " ", "of",
     " ", "core"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["n", "coating"], " ", "=", " ", "1.3630"}], ";"}], 
  "             ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Real", " ", "part", " ", "of", " ", "refractive", " ", "index", " ", "of",
     " ", "coating"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["n", "outside"], "=", " ", "1"}], "            ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Real", " ", "part", " ", "of", " ", "refractive", " ", "index", " ", 
    "outside", " ", "particle"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    StyleBox["k",
     FontSlant->"Italic"], "core"], " ", "=", " ", 
   RowBox[{"5.5430", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "6"}]]}]}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"Extinction", " ", "coefficient", " ", "of", " ", "core"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    StyleBox["k",
     FontSlant->"Italic"], "coating"], " ", "=", " ", 
   RowBox[{"5.5430", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "8"}]]}]}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{"Extinction", " ", "coefficient", " ", "of", " ", "coating"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox[
    StyleBox["k",
     FontSlant->"Italic"], "outside"], " ", "=", " ", "0"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Extinction", " ", "coefficient", " ", "outside", " ", "particle"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", "core"], " ", "=", 
   FractionBox[
    SubscriptBox["\[Lambda]", 
     RowBox[{"0", " "}]], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["n", "core"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox[
        StyleBox["k",
         FontSlant->"Italic"], "core"]}]}], ")"}]]}], "                   ", 
  RowBox[{"(*", " ", 
   RowBox[{"wavelength", " ", "in", " ", "core"}], " ", "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", "coating"], " ", "=", 
   FractionBox[
    SubscriptBox["\[Lambda]", 
     RowBox[{"0", " "}]], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["n", "coating"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox[
        StyleBox["k",
         FontSlant->"Italic"], "coating"]}]}], ")"}]]}], 
  "                   ", 
  RowBox[{"(*", " ", 
   RowBox[{"wavelength", " ", "in", " ", "coating"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["\[Lambda]", "outside"], " ", "=", 
   FractionBox[
    SubscriptBox["\[Lambda]", 
     RowBox[{"0", " "}]], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["n", "outside"], " ", "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox[
        StyleBox["k",
         FontSlant->"Italic"], "outside"]}]}], ")"}]]}], "          ", 
  RowBox[{"(*", " ", 
   RowBox[{"wavelength", " ", "in", " ", "external", " ", "medium"}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", " ", "=", " ", 
    RowBox[{"2.7`30", " ", "*", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], "   ", ";"}], "                       ", 
  RowBox[{"(*", " ", 
   RowBox[{"Core", " ", "radius", " ", "in", " ", "meters"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", " ", "=", " ", 
    RowBox[{"2.707`30", " ", "*", " ", 
     SuperscriptBox["10", 
      RowBox[{"-", "6"}]]}]}], "   ", ";"}], "                  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Coating", " ", "radius", " ", "in", " ", "meters"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["m", "1"], " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["n", "core"], "+", " ", 
       RowBox[{"I", " ", 
        SubscriptBox[
         StyleBox["k",
          FontSlant->"Italic"], "core"]}]}], ")"}], " "}], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["n", "outside"], "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox[
        StyleBox["k",
         FontSlant->"Italic"], "outside"]}]}], ")"}]]}], "      ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Relative", " ", "refractive", " ", "index", " ", "of", " ", "core"}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["m", "2"], " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["n", "coating"], "+", " ", 
       RowBox[{"I", " ", 
        SubscriptBox[
         StyleBox["k",
          FontSlant->"Italic"], "coating"]}]}], ")"}], " "}], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["n", "outside"], "+", " ", 
      RowBox[{"I", " ", 
       SubscriptBox[
        StyleBox["k",
         FontSlant->"Italic"], "outside"]}]}], ")"}]]}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Relative", " ", "refractive", " ", "index", " ", "of", " ", "coating"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["q", "c1"], " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     SubscriptBox["\[Lambda]", "outside"]], " ", "a"}]}], 
  "                                  ", 
  RowBox[{"(*", " ", 
   RowBox[{"Size", " ", "parameter", " ", "for", " ", "core"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["q", "c2"], " ", "=", " ", 
   RowBox[{
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], 
     SubscriptBox["\[Lambda]", "outside"]], " ", "b"}]}], 
  "                                 ", 
  RowBox[{"(*", " ", 
   RowBox[{"Size", " ", "parameter", " ", "for", " ", "coating"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"LastTermc", " ", "=", " ", 
  RowBox[{"Ceiling", "[", 
   RowBox[{
    SubscriptBox["q", "c2"], " ", "+", " ", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       SubscriptBox["q", "c2"], ")"}], 
      FractionBox["1", "3"]]}], " ", "+", "2"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.544279045765625*^9, 3.544279097359375*^9}, {
  3.5463644442210627`*^9, 3.5463644528478775`*^9}}],

Cell[BoxData["6.3283`*^-7"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.552217187101859*^9}],

Cell[BoxData["1.40253`"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871038594`*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871058598`*^9}],

Cell[BoxData["5.543`*^-6"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.552217187106859*^9}],

Cell[BoxData["5.543`*^-8"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.552217187108859*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871148596`*^9}],

Cell[BoxData[
 RowBox[{"4.5120603480147696`*^-7", "-", 
  RowBox[{"1.7832310545261684`*^-12", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871168594`*^9}],

Cell[BoxData[
 RowBox[{"4.6429200293470207`*^-7", "-", 
  RowBox[{"1.8881662305701055`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871188593`*^9}],

Cell[BoxData["6.3283`*^-7"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871198597`*^9}],

Cell[BoxData[
 RowBox[{"1.40253`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.543`*^-6", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871218596`*^9}],

Cell[BoxData[
 RowBox[{"1.363`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.543`*^-8", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871228595`*^9}],

Cell[BoxData["26.80751596698147`"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871248593`*^9}],

Cell[BoxData["26.877016934303274`"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.5522171871258593`*^9}],

Cell[BoxData["41"], "Output",
 CellChangeTimes->{{3.544279083296875*^9, 3.54427910015625*^9}, 
   3.5463644534718785`*^9, 3.5463652679071136`*^9, 3.5478113407516656`*^9, 
   3.5478143270444374`*^9, 3.5478184840311995`*^9, 3.5522139491218696`*^9, 
   3.5522154043228693`*^9, 3.5522163298748026`*^9, 3.552217187127859*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate series coefficients ", "Subsection",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["A", "n"], "[", "l_", "]"}], ":=", " ", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{"\[Psi]Prime", " ", "[", " ", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "1"], 
         SubscriptBox["q", "c1"]}]}], "]"}], " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "2"], " ", 
         SubscriptBox["q", "c1"]}]}], "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["m", "1"], 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "1"], 
         SubscriptBox["q", "c1"]}]}], "]"}], " ", 
      RowBox[{"\[Psi]Prime", "[", " ", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "2"], " ", 
         SubscriptBox["q", "c1"]}]}], "]"}]}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{"\[Psi]Prime", " ", "[", " ", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "1"], 
         SubscriptBox["q", "c1"]}]}], "]"}], " ", 
      RowBox[{"\[Chi]", "[", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "2"], " ", 
         SubscriptBox["q", "c1"]}]}], "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["m", "1"], 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "1"], 
         SubscriptBox["q", "c1"]}]}], "]"}], " ", 
      RowBox[{"\[Chi]Prime", "[", " ", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "2"], " ", 
         SubscriptBox["q", "c1"]}]}], "]"}]}]}], ")"}]]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["B", "n"], "[", "l_", "]"}], ":=", " ", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{"\[Psi]Prime", " ", "[", " ", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "2"], 
         SubscriptBox["q", "c1"]}]}], "]"}], " ", 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "1"], " ", 
         SubscriptBox["q", "c1"]}]}], "]"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["m", "1"], 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "2"], 
         SubscriptBox["q", "c1"]}]}], "]"}], " ", 
      RowBox[{"\[Psi]Prime", "[", " ", 
       RowBox[{"l", ",", 
        RowBox[{
         SubscriptBox["m", "1"], " ", 
         SubscriptBox["q", "c1"]}]}], "]"}]}]}], ")"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["m", "2"], " ", 
       RowBox[{"\[Chi]Prime", " ", "[", " ", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["m", "2"], 
          SubscriptBox["q", "c1"]}]}], "]"}], " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["m", "1"], " ", 
          SubscriptBox["q", "c1"]}]}], "]"}]}], " ", "-", " ", 
      RowBox[{
       SubscriptBox["m", "1"], 
       RowBox[{"\[Chi]", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["m", "2"], 
          SubscriptBox["q", "c1"]}]}], "]"}], " ", 
       RowBox[{"\[Psi]Prime", "[", " ", 
        RowBox[{"l", ",", 
         RowBox[{
          SubscriptBox["m", "1"], " ", 
          SubscriptBox["q", "c1"]}]}], "]"}]}]}], ")"}], 
    "\[IndentingNewLine]"}]]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "nc"], "[", "l_", "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]Prime", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["A", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]Prime", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{"\[Psi]Prime", "[", " ", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["A", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Zeta]", "[", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]Prime", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["A", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]Prime", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{"\[Zeta]Prime", "[", " ", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["A", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["b", "nc"], "[", "l_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "2"], 
      RowBox[{"\[Psi]", "[", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]Prime", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["B", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]Prime", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}], " ", "-", "  ", 
     RowBox[{
      RowBox[{"\[Psi]Prime", "[", " ", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["B", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "2"], 
      RowBox[{"\[Zeta]", "[", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]Prime", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["B", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]Prime", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"\[Zeta]Prime", "[", " ", 
       RowBox[{"l", ",", 
        SubscriptBox["q", "c2"]}], "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           SubscriptBox["m", "2"], " ", 
           SubscriptBox["q", "c2"]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{
          SubscriptBox["B", "n"], "[", "l", "]"}], " ", 
         RowBox[{"\[Chi]", "[", " ", 
          RowBox[{"l", ",", 
           RowBox[{
            SubscriptBox["m", "2"], 
            SubscriptBox["q", "c2"]}]}], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the Cross Sections and Efficiencies ", "Subsection",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["C", "Scatc"], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox[
         SubscriptBox["\[Lambda]", "outside"], "2"], 
        RowBox[{"2", "\[Pi]"}]], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"l", "=", "1"}], "LastTermc"], "   ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              RowBox[{
               SubscriptBox["a", "nc"], "[", "l", "]"}], "]"}], ")"}], "2"], 
           " ", "+", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", 
              RowBox[{
               SubscriptBox["b", "nc"], "[", "l", "]"}], "]"}], ")"}], "2"]}],
           ")"}]}]}]}], ",", "4"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["C", "Extc"], " ", "=", " ", 
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{
       FractionBox[
        SuperscriptBox[
         SubscriptBox["\[Lambda]", "outside"], "2"], 
        RowBox[{"2", "\[Pi]"}]], " ", 
       RowBox[{"Re", "[", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"l", "=", "1"}], "LastTermc"], " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "l"}], "+", "1"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["a", "nc"], "[", "l", "]"}], " ", "+", " ", 
            RowBox[{
             SubscriptBox["b", "nc"], "[", "l", "]"}]}], ")"}]}]}], "]"}]}], 
      ",", "4"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["C", "Absc"], " ", "=", " ", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{
      SubscriptBox["C", "Extc"], " ", "-", " ", 
      SubscriptBox["C", "Scatc"]}], ",", "4"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.54427911978125*^9, 3.544279121890625*^9}, {
  3.544279183921875*^9, 3.54427920075*^9}, {3.544279308125*^9, 
  3.544279311171875*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "Extc"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["C", "Extc"], 
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["b", "2"]}]]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "Scatc"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["C", "Scatc"], 
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["b", "2"]}]]}], "   ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "Absc"], " ", "=", " ", 
   FractionBox[
    SubscriptBox["C", "Absc"], 
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["b", "2"]}]]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.54427914084375*^9, 3.544279143921875*^9}, {
  3.544279210453125*^9, 3.544279211828125*^9}, {3.544279312328125*^9, 
  3.5442793138125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<\!\(\*SubscriptBox[\(C\), \(Scat\)]\) = \>\"", ",", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SubscriptBox["C", "Scatc"], "//", "N"}], "]"}], ",", " ", 
    "\"\<        \!\(\*SubscriptBox[\(Q\), \(Scat\)]\) = \>\"", ",", 
    RowBox[{
     SubscriptBox["Q", "Scatc"], "//", "N"}], " ", ",", " ", 
    "\[IndentingNewLine]", "\t  ", ",", 
    RowBox[{"Sumplify", "[", " ", 
     RowBox[{
      SubscriptBox["C", "Extc"], "//", "N"}], "]"}], ",", 
    "\"\<        SubscriptBox[Q,Ext\\\\\\ \\\\\\ ] = \>\"", ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SubscriptBox["Q", "Extc"], "//", "N"}], " ", "]"}], ",", " ", 
    "\[IndentingNewLine]", "\t  ", ",", " ", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SubscriptBox["C", "Absc"], "//", "N"}], "]"}], ",", 
    "\"\<        SubscriptBox[Q,Abs\\\\\\ \\\\\\ ] = \>\"", ",", 
    RowBox[{"Simplify", "[", 
     RowBox[{
      SubscriptBox["Q", "Absc"], "//", "N"}], " ", "]"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.544279286640625*^9, 3.54427928684375*^9}, {
   3.54636447131831*^9, 3.5463645238904023`*^9}, 3.5463801145333195`*^9, {
   3.5478119088432274`*^9, 3.547811944021227*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5522171911078596`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculate the anisotropy (i.e., the g factor) ", "Subsection",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[StyleBox["See the section above for a homogeneous sphere for a \
description of this section.  Note that the anisotropy expression is the same \
as before except that now we use the new coefficients from the Mie series. ",
 FontColor->RGBColor[0, 0, 1]]], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gc", " ", "=", " ", 
   RowBox[{
    FractionBox["4", 
     RowBox[{
      SubscriptBox["Q", "Scatc"], " ", 
      SuperscriptBox[
       SubscriptBox["q", "c2"], "2"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"l", "=", "1"}], "LastTermc"], " ", 
        RowBox[{
         FractionBox[
          RowBox[{"l", 
           RowBox[{"(", 
            RowBox[{"l", "+", "2"}], ")"}]}], 
          RowBox[{"l", " ", "+", " ", "1"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["a", "nc"], "[", "l", "]"}], "  ", 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["a", "nc"], "[", 
              RowBox[{"l", "+", "1"}], "]"}], "*"]}], "+", " ", 
           RowBox[{
            RowBox[{
             SubscriptBox["b", "nc"], "[", "l", "]"}], 
            SuperscriptBox[
             RowBox[{
              SubscriptBox["b", "nc"], "[", 
              RowBox[{"l", "+", "1"}], "]"}], "*"]}]}], ")"}]}]}], "]"}], " ",
       "+", " ", 
      RowBox[{"Re", "[", 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"l", "=", "1"}], "LastTermc"], " ", 
        RowBox[{
         FractionBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "l"}], "+", "1"}], ")"}], 
          RowBox[{"l", 
           RowBox[{"(", 
            RowBox[{"l", " ", "+", " ", "1"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["a", "nc"], "[", "l", "]"}], "  ", 
           SuperscriptBox[
            RowBox[{
             SubscriptBox["b", "nc"], "[", "l", "]"}], "*"]}], ")"}]}]}], 
       "]"}]}], ")"}]}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{"\"\<The anisotropy value is g = \>\"", ",", " ", 
   RowBox[{"ToString", "[", "gc", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   PanelBox[GridBox[{
      {
       StyleBox[
        StyleBox[
         DynamicBox[ToBoxes[
           FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
           StandardForm],
          ImageSizeCache->{299., {3., 9.}}],
         StripOnInput->False,
         DynamicUpdating->True], "Panel",
        StripOnInput->False,
        Background->None]},
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftSkeleton]", "2067101", "\[RightSkeleton]"}],
         Short[#, 5]& ],
        Background->GrayLevel[1],
        BaseStyle->{Deployed -> False},
        Frame->True,
        FrameStyle->GrayLevel[0, 0.2],
        StripOnInput->False]},
      {
       RowBox[{
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
             StandardForm],
            ImageSizeCache->{54., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 373, 23250822753566109351, 5/2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
             StandardForm],
            ImageSizeCache->{60., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 373, 23250822753566109351, 5 2],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
             StandardForm],
            ImageSizeCache->{92., {3., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>OutputSizeLimit`ButtonFunction[
          Identity, 373, 23250822753566109351, Infinity],
         Enabled->True,
         Evaluator->Automatic,
         Method->"Queued"], "\[ThinSpace]", 
        ButtonBox[
         StyleBox[
          StyleBox[
           DynamicBox[ToBoxes[
             FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
             StandardForm],
            ImageSizeCache->{78., {1., 9.}}],
           StripOnInput->False,
           DynamicUpdating->True], "Panel",
          StripOnInput->False,
          Background->None],
         Appearance->Automatic,
         ButtonFunction:>FrontEndExecute[{
            FrontEnd`SetOptions[
            FrontEnd`$FrontEnd, 
             FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
            FrontEnd`FrontEndToken["PreferencesDialog"]}],
         Evaluator->None,
         Method->"Preemptive"]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[1.2]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    DefaultBaseStyle->{},
    FrameMargins->5],
   Deploy,
   DefaultBaseStyle->{Deployed -> True}],
  Out[373]]], "Output",
 CellChangeTimes->{3.5463652786243324`*^9, 3.5478113541052656`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculate the Intensity distributions (i.e.,  phase functions) for the 2 \
orthogonal polarization states for subsequent plotting \
\>", "Subsection",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"IntensityParallelC", "[", 
     RowBox[{"\[Theta]_", ",", " ", "r_", ",", " ", "\[Phi]_"}], "]"}], ":=", 
    " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       SubscriptBox["\[Lambda]", "outside"], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox["r", "2"]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"l", "=", "1"}], "LastTermc"], " ", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["a", "nc"], "[", "l", "]"}], " ", 
             RowBox[{"\[Tau]", "[", 
              RowBox[{"l", ",", " ", "\[Theta]"}], "]"}]}], " ", "+", "    ", 
            RowBox[{
             RowBox[{
              SubscriptBox["b", "nc"], "[", "l", "]"}], " ", 
             RowBox[{"pi", "[", 
              RowBox[{"l", ",", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
        "]"}], ")"}], "2"], " ", "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], ")"}], "2"]}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntensityPerpendicularC", "[", 
     RowBox[{"\[Theta]_", ",", " ", "r_", ",", " ", "\[Phi]_"}], "]"}], "=", 
    " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox[
       SubscriptBox["\[Lambda]", "outside"], "2"], 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Pi]", "2"], " ", 
       SuperscriptBox["r", "2"]}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Abs", "[", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"l", "=", "1"}], "LastTermc"], " ", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "l"}], "+", "1"}], ")"}], 
            RowBox[{"l", " ", 
             RowBox[{"(", 
              RowBox[{"l", "+", "1"}], ")"}]}]], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              SubscriptBox["a", "nc"], "[", "l", "]"}], " ", 
             RowBox[{"pi", "[", 
              RowBox[{"l", ",", " ", "\[Theta]"}], "]"}]}], " ", "+", "    ", 
            RowBox[{
             RowBox[{
              SubscriptBox["b", "nc"], "[", "l", "]"}], " ", 
             RowBox[{"\[Tau]", "[", 
              RowBox[{"l", ",", " ", "\[Theta]"}], "]"}]}]}], ")"}]}]}], 
        "]"}], ")"}], "2"], "*", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}], ")"}], "2"]}]}], ";"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4349999999999408`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.546365279919135*^9, 3.5478113555560656`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"cIntParallelC", " ", "=", " ", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "r", ",", " ", "\[Phi]"}], "}"}], ",", 
      " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"IntensityParallelC", "[", 
        RowBox[{"\[Theta]", ",", " ", "r", ",", " ", "\[Phi]"}], "]"}], 
       "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"cIntPerpendicularC", " ", "=", " ", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", " ", "r", ",", " ", "\[Phi]"}], "}"}], ",", 
      " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"IntensityPerpendicularC", "[", 
        RowBox[{"\[Theta]", ",", " ", "r", ",", " ", "\[Phi]"}], "]"}], 
       "]"}]}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.498000000000148`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.546365281276337*^9, 3.5478113571160655`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Plot the phase function in  log-polar format. ",
  FontSize->12],
 StyleBox[" ",
  FontSize->11]
}], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[TextData[StyleBox["Generate lists of the phase function data for both \
polarizations and the average.  Then shift the data to center the plots on \
the axes.  The first cell here tales a long time to evaluate with an angular \
sampling of 0.1 degree and large size parameters (say > 100).  Increase the \
sampling increment to speed it up.",
 FontColor->RGBColor[0, 0, 1]]], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"parListNormC", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{"cIntParallelC", "[", 
         RowBox[{
          RowBox[{"\[Theta]", " ", "Degree"}], ",", "1.0", ",", "0"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0.000001", ",", "360", ",", " ", "0.1"}], 
       "}"}]}], "]"}]}], ";", "\n", "  ", 
   RowBox[{"perListNormC", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"10", ",", 
        RowBox[{"cIntPerpendicularC", "[", 
         RowBox[{
          RowBox[{"\[Theta]", " ", "Degree"}], ",", "1.0", ",", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "]"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", " ", ",", "0.000001", ",", "360", ",", "0.1"}], 
       "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CompiledFunction", "::", "cfex"}], "MessageName"], ":", 
  " ", "\<\"Could not complete external evaluation at instruction \
\[NoBreak]\\!\\(8\\)\[NoBreak]; proceeding with uncompiled evaluation. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/CompiledFunction/cfex\\\
\", ButtonNote -> \\\"CompiledFunction::cfex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5463652814011374`*^9, 3.5478113572408657`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CompiledFunction", "::", "cfex"}], "MessageName"], ":", 
  " ", "\<\"Could not complete external evaluation at instruction \
\[NoBreak]\\!\\(8\\)\[NoBreak]; proceeding with uncompiled evaluation. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/CompiledFunction/cfex\\\
\", ButtonNote -> \\\"CompiledFunction::cfex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5463652814011374`*^9, 3.5478113572408657`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"CompiledFunction", "::", "cfex"}], "MessageName"], ":", 
  " ", "\<\"Could not complete external evaluation at instruction \
\[NoBreak]\\!\\(8\\)\[NoBreak]; proceeding with uncompiled evaluation. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/CompiledFunction/cfex\\\
\", ButtonNote -> \\\"CompiledFunction::cfex\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5463652814011374`*^9, 3.5478113572408657`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(CompiledFunction \
:: cfex\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5463652814011374`*^9, 3.5478113572408657`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"34.61699999999992`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.5463653104171886`*^9, 3.5478113921223416`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"parPlotListC", " ", "=", " ", 
   RowBox[{"parListNormC", " ", "+", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"Min", "[", "parListNormC", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"perPlotListC", " ", "=", " ", 
   RowBox[{"perListNormC", " ", "+", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"Min", "[", "perListNormC", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"avgPlotListC", " ", "=", " ", 
   FractionBox[
    RowBox[{"parPlotListC", " ", "+", " ", "perPlotListC"}], "2"]}], 
  ";"}]}], "Input"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5463801245708838`*^9, 3.5478114857530327`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PeakC", " ", "=", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Max", "[", "parPlotListC", "]"}], ",", " ", 
      RowBox[{"Max", "[", "perPlotListC", "]"}]}], " ", "}"}], "]"}]}], 
  ";"}]], "Input"],

Cell["\<\
Normalize the data to the max value across all three lists and generate the \
plots\
\>", "Text",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgPhaseFunctionC", " ", "=", " ", 
   RowBox[{"PolarListPlot", "[", 
    RowBox[{
     FractionBox["avgPlotListC", "PeakC"], ",", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
     RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParPhaseFunctionC", " ", "=", " ", 
   RowBox[{"PolarListPlot", "[", 
    RowBox[{
     FractionBox["parPlotListC", "PeakC"], ",", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PerpPhaseFunctionC", " ", "=", " ", 
   RowBox[{"PolarListPlot", "[", 
    RowBox[{
     FractionBox["perPlotListC", "PeakC"], ",", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", " ", 
     RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", " ", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell["\<\
Set up the plot parameters and display normalized phase functions.  Note that \
the particle resides at the origin and the incident field is from the left \
side.\
\>", "Text",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MyLabel3", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{
        RowBox[{"StyleForm", "[", 
         RowBox[{
         "\"\<\!\(\*\n\
StyleBox[\\\"Blue\\\",\\nFontSize->11,\\nFontColor->RGBColor[0, 0, \
1]]\)\!\(\*\nStyleBox[\\\":\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\" \\\",\
\\nFontSize->11]\)\!\(\*\n\
StyleBox[\\\"perpendicular\\\",\\nFontSize->11]\)\\n\!\(\*\n\
StyleBox[\\\"Red\\\",\\nFontSize->11,\\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*\
\nStyleBox[\\\":\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\" \
\\\",\\nFontSize->11]\)\!\(\*\n\
StyleBox[\\\"parallel\\\",\\nFontSize->11]\)\\n\!\(\*\n\
StyleBox[\\\"Black\\\",\\nFontSize->11]\)\!\(\*\n\
StyleBox[\\\":\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\" \
\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\"average\\\",\\nFontSize->11]\) \>\
\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.8", ",", " ", "0.875"}], "}"}]}], " ", "]"}], " ", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MyAxesLabel", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"StyleForm", "[", 
           RowBox[{"\"\<1\>\"", ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.05"}], ",", " ", "1"}], "}"}]}], " ", "]"}], " ", 
        ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"StyleForm", "[", 
           RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-2\)]\)\>\"", ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", " ", "0.8"}], "}"}]}], " ", "]"}], 
        ",", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"StyleForm", "[", 
           RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-4\)]\)\>\"", ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", " ", "0.6"}], "}"}]}], " ", "]"}], 
        ",", " ", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"StyleForm", "[", 
           RowBox[{"\"\<\!\(\*SuperscriptBox[\(10\), \(-6\)]\)\>\"", ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.075"}], ",", " ", "0.4"}], "}"}]}], " ", "]"}]}], 
       "}"}], "]"}]}], ";"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MySpokes", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]", " ", "Degree"}], "]"}], ",", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", " ", "Degree"}], "]"}]}], "}"}]}], "}"}], 
       "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", " ", "0", ",", " ", "345", ",", " ", "30"}], 
      "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PagePlot", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "PerpPhaseFunctionC", ",", "ParPhaseFunctionC", ",", 
        "avgPhaseFunctionC", ",", "MyLabel3", ",", "MyAxesLabel", ",", 
        "MySpokes", ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Dashing", "[", 
              RowBox[{"{", 
               RowBox[{"0.01", ",", "0.01"}], "}"}], "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", "i"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "0", ",", "1", ",", "0.1"}], "}"}]}], "]"}], 
         "]"}], ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"Circle", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], "]"}]}], "}"}],
       ",", " ", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", " ", 
      RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{"ImageSize", "\[Rule]", "500"}], ",", " ", 
      RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", " ", "None", ",", "None", ",", " ", "None"}], 
        "}"}]}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5463645711116853`*^9, 3.5463645752768927`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Show", "::", "gcomb"}], "MessageName"], ":", 
  " ", "\<\"Could not combine the graphics objects in \
\[NoBreak]\\!\\(Show[\\(\\(\\(\\({PerpPhaseFunctionC, ParPhaseFunctionC, \
avgPhaseFunctionC, \
\\*GraphicsBox[InsetBox[FormBox[StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\
\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\"Blue\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->\
11,\\\\\\\\nFontColor->RGBColor[0, 0, 1]]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\
\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\\\\\
\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\" \\\\\\\\\\\
\\\\\",\\\\\\\\nFontSize->11]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\\\\\\\
nStyleBox[\\\\\\\\\\\\\\\"perpendicular\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\
\\\\\\\\)\\\\\\\\n\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\
\"Red\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11,\\\\\\\\nFontColor->RGBColor[1, \
0, 0]]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\":\
\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\
\\\\\\nStyleBox[\\\\\\\\\\\\\\\" \
\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\
\\\\\\nStyleBox[\\\\\\\\\\\\\\\"parallel\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->\
11]\\\\\\\\)\\\\\\\\n\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\
\\\"Black\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\
\\\\\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->\
11]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\\\\\\nStyleBox[\\\\\\\\\\\\\\\" \
\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\\\\\\\\)\\\\\\\\!\\\\\\\\(\\\\\\\\*\\\
\\\\\\nStyleBox[\\\\\\\\\\\\\\\"average\\\\\\\\\\\\\\\",\\\\\\\\nFontSize->11]\
\\\\\\\\) \\\\\\\"\\\", Rule[FontSize, 12]], TraditionalForm], List[0.8`, \
0.875`]]], \
\\*GraphicsBox[List[InsetBox[FormBox[StyleBox[\\\"\\\\\\\"1\\\\\\\"\\\", \
Rule[FontSize, 16]], TraditionalForm], List[-0.05`, 1]], \
InsetBox[FormBox[StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
SuperscriptBox[\\\\\\\\(10\\\\\\\\), \\\\\\\\(-2\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\
\", Rule[FontSize, 16]], TraditionalForm], List[-0.075`, 0.8`]], \
InsetBox[FormBox[StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
SuperscriptBox[\\\\\\\\(10\\\\\\\\), \\\\\\\\(-4\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\
\", Rule[FontSize, 16]], TraditionalForm], List[-0.075`, 0.6`]], \
InsetBox[FormBox[StyleBox[\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
SuperscriptBox[\\\\\\\\(10\\\\\\\\), \\\\\\\\(-6\\\\\\\\)]\\\\\\\\)\\\\\\\"\\\
\", Rule[FontSize, 16]], TraditionalForm], List[-0.075`, 0.4`]]]], \
\\(\\({\\*GraphicsBox[LineBox[List[List[0, 0], List[1, 0]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Times[Skeleton[2]], \
Rational[1, 2]]], List[List[0, 0], List[Times[Skeleton[2]], 0.5`]]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Rational[1, 2], \
Times[Skeleton[2]]]], List[List[0, 0], List[0.5`, Times[Skeleton[2]]]]]]], \
\\*GraphicsBox[LineBox[List[List[0, 0], List[0, 1]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Rational[-1, 2], \
Times[Skeleton[2]]]], List[List[0, 0], List[-0.5`, Times[Skeleton[2]]]]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Times[Skeleton[2]], \
Rational[1, 2]]], List[List[0, 0], List[Times[Skeleton[2]], 0.5`]]]]], \
\\*GraphicsBox[LineBox[List[List[0, 0], List[-1, 0]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Times[Skeleton[2]], \
Rational[-1, 2]]], List[List[0, 0], List[Times[Skeleton[2]], -0.5`]]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Rational[-1, 2], \
Times[Skeleton[2]]]], List[List[0, 0], List[-0.5`, Times[Skeleton[2]]]]]]], \
\\*GraphicsBox[LineBox[List[List[0, 0], List[0, -1]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Rational[1, 2], \
Times[Skeleton[2]]]], List[List[0, 0], List[0.5`, Times[Skeleton[2]]]]]]], \
\\*GraphicsBox[LineBox[NCache[List[List[0, 0], List[Times[Skeleton[2]], \
Rational[-1, 2]]], List[List[0, 0], List[Times[Skeleton[2]], \
-0.5`]]]]]}\\)\\), \\*GraphicsBox[List[List[Dashing[List[0.01`, 0.01`]], \
CircleBox[List[0, 0], 0.`]], List[Dashing[List[0.01`, 0.01`]], \
CircleBox[List[0, 0], 0.1`]], List[Dashing[List[0.01`, 0.01`]], \
CircleBox[List[0, 0], 0.2`]], List[Dashing[List[0.01`, 0.01`]], \
CircleBox[List[0, 0], 0.30000000000000004`]], List[Dashing[List[0.01`, \
0.01`]], CircleBox[List[0, 0], 0.4`]], List[Dashing[List[0.01`, 0.01`]], \
CircleBox[List[0, 0], 0.5`]], List[Dashing[List[0.01`, 0.01`]], \
CircleBox[List[0, 0], 0.6000000000000001`]], List[Dashing[List[0.01`, \
0.01`]], CircleBox[List[0, 0], 0.7000000000000001`]], \
List[Dashing[List[0.01`, 0.01`]], CircleBox[List[0, 0], 0.8`]], \
List[Dashing[List[0.01`, 0.01`]], CircleBox[List[0, 0], 0.9`]], \
List[Dashing[List[0.01`, 0.01`]], CircleBox[List[0, 0], 1.`]]]], \
\\*GraphicsBox[CircleBox[List[0, 0], 1]]}\\)\\), \\(\\(AspectRatio \[Rule] \
1\\)\\), \\(\\(FrameTicks \[Rule] None\\)\\), \\(\\(Frame \[Rule] True\\)\\), \
\\(\\(PlotRange \[Rule] \\(\\({\\(\\({\\(\\(-1\\)\\), 1}\\)\\), \
\\(\\({\\(\\(-1\\)\\), 1}\\)\\)}\\)\\)\\)\\), \\(\\(ImageSize \[Rule] \
500\\)\\), \\(\\(Ticks \[Rule] None\\)\\), \\(\\(FrameLabel \[Rule] \
\\(\\({None, None, None, None}\\)\\)\\)\\), \\(\\(DisplayFunction \[Rule] \
Identity\\)\\)\\)\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\
\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Show/gcomb\\\", ButtonNote -> \
\\\"Show::gcomb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.5463645634832716`*^9, 3.5463645758852935`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the phase function in  log - linear format.", "Subsection",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"DataPeak", " ", "=", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{"cIntParallelC", "[", 
         RowBox[{"0.000001", ",", "1.0", ",", "0"}], "]"}], "]"}], ",", " ", 
       RowBox[{"Max", "[", 
        RowBox[{"cIntParallelC", "[", 
         RowBox[{"0.000001", ",", "1.0", ",", 
          FractionBox["\[Pi]", "2"]}], "]"}], "]"}]}], "}"}], "]"}]}], ";"}],
  FontSize->12]], "Input",
 FontSize->11],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyTickLabels", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"ToString", "[", 
        RowBox[{"i", " ", "/", "Degree"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0.0", ",", " ", "\[Pi]", ",", " ", 
       FractionBox["\[Pi]", "12"]}], "}"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyLabel4", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"StyleForm", "[", 
       RowBox[{
       "\"\<\!\(\*\n\
StyleBox[\\\"Blue\\\",\\nFontSize->11,\\nFontColor->RGBColor[0, 0, \
1]]\)\!\(\*\nStyleBox[\\\":\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\" \\\",\
\\nFontSize->11]\)\!\(\*\n\
StyleBox[\\\"perpendicular\\\",\\nFontSize->11]\)\\n\!\(\*\n\
StyleBox[\\\"Red\\\",\\nFontSize->11,\\nFontColor->RGBColor[1, 0, 0]]\)\!\(\*\
\nStyleBox[\\\":\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\" \
\\\",\\nFontSize->11]\)\!\(\*\n\
StyleBox[\\\"parallel\\\",\\nFontSize->11]\)\\n\!\(\*\n\
StyleBox[\\\"Black\\\",\\nFontSize->11]\)\!\(\*\n\
StyleBox[\\\":\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\" \
\\\",\\nFontSize->11]\)\!\(\*\nStyleBox[\\\"average\\\",\\nFontSize->11]\) \>\
\"", ",", " ", 
        RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.1", ",", 
        RowBox[{"-", "0.6"}]}], "}"}]}], " ", "]"}], " ", "]"}]}], 
  ";"}]], "Input"],

Cell["\<\
Normalize the data to the max value across all three lists and generate the \
plots.  This cell takes a couple of minutes.\
\>", "Text",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ParPhaseFunction3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       FractionBox[
        RowBox[{"cIntParallelC", "[", 
         RowBox[{"\[Theta]", " ", ",", "1", ",", "0"}], "]"}], "DataPeak"]}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0.00000001", ",", "\[Pi]"}], "}"}], ",", " ", 
     RowBox[{"DisplayFunction", "->", " ", "Identity"}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"PerPhaseFunction3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       FractionBox[
        RowBox[{"cIntPerpendicularC", "[", 
         RowBox[{"\[Theta]", ",", "1", ",", 
          FractionBox["\[Pi]", "2"]}], "]"}], "DataPeak"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0.00000001", ",", "\[Pi]"}], "}"}], ",", " ", 
     RowBox[{"DisplayFunction", "->", " ", "Identity"}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"avgPhaseFunction3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          RowBox[{"cIntParallelC", "[", 
           RowBox[{"\[Theta]", " ", ",", "1", ",", "0"}], "]"}], " ", "+", 
          " ", 
          RowBox[{"cIntPerpendicularC", "[", 
           RowBox[{"\[Theta]", " ", ",", "1", ",", " ", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], 
         RowBox[{"2", " ", "DataPeak"}]], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}], ",", "  ", 
     RowBox[{"DisplayFunction", "->", " ", "Identity"}], ",", " ", 
     RowBox[{"PlotStyle", "->", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "0"}], "]"}]}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}]}], "]"}]}], ";"}]}], "Input"],

Cell["\<\
Display normalized phase functions where again, the particle resides at the \
origin and the incident field is from the left side.  Limit the plot range to \
examine the fine structure of the functions.\
\>", "Text",
 FontSize->13,
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ParPhaseFunction3", ",", "PerPhaseFunction3", ",", "avgPhaseFunction3", 
      ",", " ", "MyLabel4"}], "}"}], ",", " ", 
    RowBox[{"DisplayFunction", "->", "$DisplayFunction"}], ",", " ", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"Axes", "->", "False"}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (deg)\>\"", ",", "\"\<Log  [Normalized Intensity]\>\""}], 
      "}"}]}], ",", 
    RowBox[{"DefaultFont", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Times\>\"", ",", "10"}], "}"}]}], ",", " ", 
    RowBox[{"FrameTicks", "->", 
     RowBox[{"{", 
      RowBox[{
      "MyTickLabels", ",", " ", "Automatic", ",", " ", "None", ",", " ", 
       "None"}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "700"}], ",", " ", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{"MyTickLabels", ",", " ", "Automatic"}], "}"}]}]}], "]"}], 
  ";"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Spectral Calculations",
 FontSize->15]], "Section"],

Cell[TextData[StyleBox["Note that this part of the code has not been updated \
to account for absorbing external media yet.  It works for external media \
with known refractive index dispersion where the imaginary part is zero at \
all wavelengths.  Of course the particle may have nonzero spectral \
absorption.  Also, this section is not as extensive as the monochromatic case \
in terms of the number and breath of plots displayed (partially because the \
spectral calculations can take very long).  Plots analogous to those for the \
monochromatic case can all be generated if desired, as can the spectral \
Mueller matrices, scattering matrices, etc.  Finally, notice that you must \
choose one of two way to load the spectral data .  The first way is to read \
the raw data from a file.  In this case, interpolations to the data are \
generated and used for calculation of the spectral scattering properties.  \
The second method is to directly load the interpolations from a file which \
was generated previously, and tends to be faster for large data sets.",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Obtain dispersion data from files.",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["\<\
First, set the directory to that containing the dispersion data files.  Begin \
by loading up the dispersion data for the scatterer.  The files are assumed \
to be ASCII format and to contain seven lines of header information followed \
by the data in triads of the form (\[Lambda], n, k).  Different file formats \
will require modification of the ReadList[ ] call in the next cell.  The \
wavelength units are assumed to be nm.  \
\>", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<c:\\\\Art\\\\Notebooks\\\\Scatterometer\\\\Mie Theory\\\\Dispersion \
Data\>\"", "]"}], ";"}]], "Input"],

Cell["Read in the scatterer dispersion data.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MyStream", " ", "=", " ", 
   RowBox[{"OpenRead", "[", "\"\<H2O Optical Constants.DAT\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DataFileHeader", "\[Equal]", 
  RowBox[{"Read", "[", 
   RowBox[{"MyStream", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "String", ",", " ", "String", ",", " ", "String", ",", " ", "String", 
      ",", "String", ",", " ", "String", ",", " ", "String"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"ScattererDispersionData", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"MyStream", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Number", ",", "Number", ",", "Number"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "MyStream", "]"}], ";"}]}], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Once the data is loaded, it is transposed so that interpolating polynomials \
to the n(\[Lambda]) and k(\[Lambda]) data can be generated.  These functions \
can then be used in subsequent calculations for any value of \[Lambda] in the \
range.  Note that high frequency structure in the dispersion data (e.g., \
noise) can cause a high order interpolating polynomial to oscillate between \
these points, resulting in bad (i.e, complex) values at certain wavelengths.  \
This can be avoided by using a low order (e.g., linear or quadratic) \
piecewise interpolation, by simply lowering the InterpolationOrder option.   \
For high resolution data, this should be an acceptable solution. \
\>", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nScat", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "ScattererDispersionData", "]"}], ",", 
        "2"}], "]"}], "]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kScat", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"Take", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "ScattererDispersionData", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}], 
  ";"}]}], "Input"],

Cell["Plot it up to make sure all is well.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nPlots", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"nScat", "[", "\[Lambda]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", " ", "200", ",", " ", "10000"}], "}"}], ",", 
     " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "0.01", "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "0.05", "}"}], "]"}]}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wavelength (nm)\>\"", ",", " ", "\"\<n (unitless)\>\"", ",", " ", 
        "\"\<n(\[Lambda])\>\"", ",", " ", "None"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"kPlots", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"kScat", "[", "\[Lambda]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "200", ",", " ", "10000"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wavelength (nm)\>\"", ",", " ", "\"\<k (unitless)\>\"", ",", " ", 
        "\"\<k(\[Lambda])\>\"", ",", " ", "None"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"GraphicsArray", "[", 
     RowBox[{"{", 
      RowBox[{"nPlots", ",", " ", "kPlots"}], "}"}], "]"}], ",", " ", 
    RowBox[{"DisplayFunction", "->", "$DisplayFunction"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}], ";"}]}], "Input"],

Cell["Read in the medium data.  Same as above.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MyStream", " ", "=", " ", 
   RowBox[{"OpenRead", "[", "\"\<Air Optical Constants2.dat\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{"DataFileHeader", "\[Equal]", 
  RowBox[{"Read", "[", 
   RowBox[{"MyStream", ",", " ", 
    RowBox[{"{", 
     RowBox[{
     "String", ",", " ", "String", ",", " ", "String", ",", " ", "String", 
      ",", "String", ",", " ", "String", ",", " ", "String"}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"MediumDispersionData", " ", "=", " ", 
   RowBox[{"ReadList", "[", 
    RowBox[{"MyStream", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Number", ",", " ", "Number", ",", " ", "Number"}], "}"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Close", "[", "MyStream", "]"}], ";"}]}], "Input"],

Cell["\<\
Create a pair of interpolating functions for the medium data.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"nMed", " ", "=", " ", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "MediumDispersionData", "]"}], ",", "2"}], 
      "]"}], "]"}], ",", " ", 
    RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"kMed", " ", "=", " ", 
  RowBox[{"Interpolation", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "MediumDispersionData", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "2"}], "}"}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nPlots", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"nMed", "[", "\[Lambda]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", " ", "200", ",", " ", "10000"}], "}"}], ",", 
     " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "0.01", "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "0.05", "}"}], "]"}]}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wavelength (nm)\>\"", ",", " ", "\"\<n (unitless)\>\"", ",", " ", 
        "\"\<n(\[Lambda])\>\"", ",", " ", "None"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"kPlots", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"kMed", "[", "\[Lambda]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "200", ",", " ", "10000"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wavelength (nm)\>\"", ",", " ", "\"\<k (unitless)\>\"", ",", " ", 
        "\"\<k(\[Lambda])\>\"", ",", " ", "None"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"GraphicsArray", "[", 
     RowBox[{"{", 
      RowBox[{"nPlots", ",", " ", "kPlots"}], "}"}], "]"}], ",", " ", 
    RowBox[{"DisplayFunction", "->", "$DisplayFunction"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}], ";"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Plot all of the interpolation functions to make sure all is well up to this \
point.  Examine the plots showing the fits to the data to make sure the \
interpolations are reasonable.\
\>", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"RealPartDispersion", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nScat", "[", "\[Lambda]", "]"}], ",", 
       RowBox[{"nMed", "[", "\[Lambda]", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "200", ",", "10000"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", "\"\<n (unitless)\>\"", ",", " ", 
        "\"\<n(\[Lambda]) for \\!\\(\\*\n\
StyleBox[\\\"scatterer\\\",\\nFontColor->RGBColor[1, 0, 0]]\\) and \\!\\(\\*\n\
StyleBox[\\\"medium\\\",\\nFontColor->RGBColor[0, 0, 1]]\\)\>\"", ",", " ", 
        "None"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ImaginaryPartDispersion", " ", "=", " ", 
    RowBox[{"LogPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"kScat", "[", "\[Lambda]", "]"}], ",", " ", 
        RowBox[{"kMed", "[", "\[Lambda]", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "200", ",", " ", "10000"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", " ", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], "}"}]}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\[Lambda] (nm)\>\"", ",", " ", "\"\<k  (unitless)\>\"", ",", 
         " ", "\"\<k(\[Lambda]) for \\!\\(\\*\n\
StyleBox[\\\"scatterer\\\",\\nFontColor->RGBColor[1, 0, 0]]\\) and \\!\\(\\*\n\
StyleBox[\\\"medium\\\",\\nFontColor->RGBColor[0, 0, 1]]\\)\>\"", ",", " ", 
         "None"}], "}"}]}], ",", " ", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"GraphicsArray", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"RealPartDispersion", ",", "ImaginaryPartDispersion"}], " ", 
       "}"}], ",", " ", 
      RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], "]"}], 
    ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}], ";"}]}], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Obtain dispersion data from previously saved \
interpolating functions.",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["\<\
If you have already saved the interpolating functions approximating the \
dispersion data these may be loaded here.  Don't forget to set the directory \
to that containing the interpolations file.\
\>", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<c:\\\\Art\\\\Notebooks\\\\Scatterometer\\\\Mie Theory\\\\Dispersion \
Data\>\"", "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nScat", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<HbIndexInterpolations.m\>\"", "]"}], 
    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kScat", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<HbIndexInterpolations.m\>\"", "]"}], 
    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nMed", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<H2OIndexInterpolations.m\>\"", "]"}], 
    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kMed", "  ", "=", " ", 
   RowBox[{
    RowBox[{"Get", "[", "\"\<H2OIndexInterpolations.m\>\"", "]"}], 
    "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nPlots", " ", "=", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"nScat", "[", "\[Lambda]", "]"}], ",", " ", 
       RowBox[{"nMed", "[", "\[Lambda]", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", " ", "400", ",", " ", "760"}], "}"}], ",", 
     " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "0.01", "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", " ", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "0.05", "}"}], "]"}]}], "}"}]}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wavelength (nm)\>\"", ",", " ", "\"\<n (unitless)\>\"", ",", " ", 
        "\"\<Plot of n vs. \[Lambda]\>\"", ",", " ", "None"}], "}"}]}], ",", 
     " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"kPlots", " ", "=", " ", 
   RowBox[{"LogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"kScat", "[", "\[Lambda]", "]"}], ",", " ", 
       RowBox[{"kMed", "[", "\[Lambda]", "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]", ",", "250", ",", " ", "1000"}], "}"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<wavelength (nm)\>\"", ",", " ", "\"\<n (unitless)\>\"", ",", " ", 
        "\"\<Plot of k vs. \[Lambda]\>\"", ",", " ", "None"}], "}"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"GraphicsArray", "[", 
     RowBox[{"{", 
      RowBox[{"nPlots", ",", " ", "kPlots"}], "}"}], "]"}], ",", " ", 
    RowBox[{"DisplayFunction", "->", "$DisplayFunction"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "900"}]}], "]"}], ";"}]}], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Now define the ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["and ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "n"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["coefficients and the spectral cross sections.  These are the same \
as those used in the monochromatic case except that the spectral nature of \
this calculation requires certain variables to be redefined as functions of \
\[Lambda].  Namely, the relative refractive index and the q parameter.  Also, \
the limit of the series that defines ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["a", "n"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" and ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["b", "n"], TraditionalForm]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" depends on q so it too is recast to produce the correct number of \
series terms for each wavelength. ",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"radius", " ", "=", " ", "1"}], " ", ";"}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"units", " ", "are", " ", "\[Mu]m"}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"nRel", "[", "\[Lambda]_", "]"}], " ", "=", " ", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nScat", "[", "\[Lambda]", "]"}], " ", "+", " ", 
       RowBox[{"I", " ", 
        RowBox[{"kScat", "[", "\[Lambda]", "]"}]}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nMed", "[", "\[Lambda]", "]"}], " ", "+", " ", 
       RowBox[{"I", " ", 
        RowBox[{"kMed", "[", "\[Lambda]", "]"}]}]}], ")"}]]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"qSpec", "[", "\[Lambda]_", "]"}], " ", "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Pi]"}], "\[Lambda]"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nMed", "[", "\[Lambda]", "]"}], " ", "+", " ", 
       RowBox[{"I", " ", 
        RowBox[{"kMed", "[", "\[Lambda]", "]"}]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"radius", " ", "*", " ", "1000"}], ")"}]}]}], " ", ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxTerm", "[", "\[Lambda]_", "]"}], ":=", 
   RowBox[{"Ceiling", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"qSpec", "[", "\[Lambda]", "]"}], "]"}], " ", "+", " ", 
     RowBox[{"4", " ", 
      RowBox[{"Re", "[", 
       SuperscriptBox[
        RowBox[{"qSpec", "[", "\[Lambda]", "]"}], 
        FractionBox["1", "3"]], " ", "]"}]}], "+", "2"}], "]"}]}], 
  " "}], "\[IndentingNewLine]"}], "Input"],

Cell["Now, set up the Mie coefficient functions.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aCoeff", "[", 
     RowBox[{"l_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
           RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}]}], " ", "-", 
       " ", 
       RowBox[{
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]Prime", " ", "[", " ", 
         RowBox[{"l", ",", 
          RowBox[{
           RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
           RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}]}]}], ")"}], 
     "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
        RowBox[{"\[Zeta]Prime", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
           RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}]}], " ", "-", 
       " ", 
       RowBox[{
        RowBox[{"\[Zeta]", "[", 
         RowBox[{"l", ",", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
        RowBox[{"\[Psi]Prime", "[", 
         RowBox[{"l", ",", " ", 
          RowBox[{
           RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
           RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}]}]}], "  ", 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bCoeff", "[", 
    RowBox[{"l_", ",", " ", "\[Lambda]_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
       RowBox[{"\[Psi]Prime", " ", "[", " ", 
        RowBox[{"l", ",", 
         RowBox[{
          RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}], " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}]}], " ", "-", " ", 
      RowBox[{
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}], " ", 
       RowBox[{"\[Psi]Prime", " ", "[", " ", 
        RowBox[{"l", ",", 
         RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"nRel", "[", "\[Lambda]", "]"}], 
       RowBox[{"\[Zeta]", "[", 
        RowBox[{"l", ",", 
         RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
       RowBox[{"\[Psi]Prime", "[", 
        RowBox[{"l", ",", 
         RowBox[{
          RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}]}], " ", "-", 
      " ", 
      RowBox[{
       RowBox[{"\[Zeta]Prime", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}], "]"}], " ", 
       RowBox[{"\[Psi]", "[", 
        RowBox[{"l", ",", " ", 
         RowBox[{
          RowBox[{"nRel", "[", "\[Lambda]", "]"}], " ", 
          RowBox[{"qSpec", "[", "\[Lambda]", "]"}]}]}], "]"}]}]}], ")"}]}]}], 
  ";"}]}], "Input"],

Cell["Calculate the cross sections.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CScat", "[", "\[Lambda]_", "]"}], ":=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Lambda]", "2"], 
      RowBox[{"2", " ", "\[Pi]", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nMed", "[", "\[Lambda]", "]"}], " ", "+", " ", 
            RowBox[{"I", " ", 
             RowBox[{"kMed", "[", "\[Lambda]", "]"}]}]}], ")"}], "]"}], ")"}],
         "2"]}]], " ", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"MaxTerm", "[", "\[Lambda]", "]"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            RowBox[{"aCoeff", "[", 
             RowBox[{"l", ",", " ", "\[Lambda]"}], "]"}], "]"}], ")"}], "2"], 
         "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Abs", "[", 
            RowBox[{"bCoeff", "[", 
             RowBox[{"l", ",", " ", "\[Lambda]"}], "]"}], "]"}], ")"}], 
          "2"]}], ")"}]}]}]}]}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CExt", "[", "\[Lambda]_", "]"}], ":=", " ", 
    RowBox[{
     FractionBox[
      SuperscriptBox["\[Lambda]", "2"], 
      RowBox[{"2", " ", "\[Pi]", 
       SuperscriptBox[
        RowBox[{"(", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nMed", "[", "\[Lambda]", "]"}], " ", "+", " ", 
            RowBox[{"I", " ", 
             RowBox[{"kMed", "[", "\[Lambda]", "]"}]}]}], ")"}], "]"}], ")"}],
         "2"]}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"l", "=", "1"}], 
       RowBox[{"MaxTerm", "[", "\[Lambda]", "]"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"Re", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"aCoeff", "[", 
           RowBox[{"l", ",", " ", "\[Lambda]"}], "]"}], "+", 
          RowBox[{"bCoeff", "[", 
           RowBox[{"l", ",", " ", "\[Lambda]"}], "]"}]}], ")"}], 
        "]"}]}]}]}]}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CAbs", "[", "\[Lambda]_", "]"}], ":=", 
   RowBox[{
    RowBox[{"CExt", "[", "\[Lambda]", "]"}], " ", "-", " ", 
    RowBox[{"CScat", "[", "\[Lambda]", "]"}]}]}], ";"}]}], "Input"],

Cell["Compiling these functions seems to speed things up a little.", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpeedyCScat", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Psi]", ",", " ", "_Real"}], "}"}], "}"}], ",", " ", 
     RowBox[{"CScat", "[", "\[Psi]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CScat", "[", "_", "]"}], ",", " ", "_Real"}], "}"}], "}"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpeedyCAbs", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Psi]", ",", " ", "_Real"}], "}"}], "}"}], ",", " ", 
     RowBox[{"CAbs", "[", "\[Psi]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CAbs", "[", "_", "]"}], ",", " ", "_Real"}], "}"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SpeedyCExt", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[Psi]", ",", " ", "_Real"}], "}"}], "}"}], ",", " ", 
     RowBox[{"CExt", "[", "\[Psi]", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CExt", "[", "_", "]"}], ",", " ", "_Real"}], "}"}], "}"}]}], 
    "]"}]}], ";"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot up the spectral cross sections.  The division by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["10", "6"], TraditionalForm]]],
 "gets us back to units of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Mu]m", "2"], TraditionalForm]]],
 ".  Note that these cells take a long time to evaluate."
}], "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "s"], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", 
        FractionBox[
         RowBox[{"SpeedyCScat", "[", "\[Lambda]", "]"}], 
         SuperscriptBox["10", "6"]]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\[Lambda]", ",", " ", "400", ",", " ", "1000", ",", " ", "1"}], 
       "}"}]}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "sPlot"], " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     SubscriptBox["\[Sigma]", "s"], ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", "  ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(s\)]\) (\!\(\*SuperscriptBox[\
\(\[Mu]m\), \(2\)]\))\>\"", ",", " ", "\"\<Scattering cross section\>\"", ",",
         " ", "None"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "a"], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", 
        FractionBox[
         RowBox[{"SpeedyCAbs", "[", "\[Lambda]", "]"}], 
         SuperscriptBox["10", "6"]]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", "400", ",", " ", "750", ",", " ", "1"}],
        "}"}]}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "aPlot"], " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     SubscriptBox["\[Sigma]", "a"], ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", "  ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\) (\!\(\*SuperscriptBox[\
\(\[Mu]m\), \(2\)]\))\>\"", ",", " ", "\"\<Absorption cross section\>\"", ",",
         " ", "None"}], "}"}]}], ",", " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Sigma]", "ext"], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", " ", 
        FractionBox[
         RowBox[{"SpeedyCExt", "[", "\[Lambda]", "]"}], 
         SuperscriptBox["10", "6"]]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
       "\[Lambda]", ",", " ", "200", ",", " ", "10000", ",", " ", "0.4"}], 
       "}"}]}], "]"}]}], ";"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["\[Sigma]", "extPlot"], " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     SubscriptBox["\[Sigma]", "ext"], ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"200", ",", " ", "10000"}], "}"}], ",", "All"}], "}"}]}], 
     ",", " ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(ext\)]\) \
(\!\(\*SuperscriptBox[\(\[Mu]m\), \(2\)]\))\>\"", ",", " ", 
        "\"\<Extinction cross section\>\"", ",", " ", "None"}], "}"}]}], ",", 
     " ", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot up the spectral efficiencies.", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "s"], " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Transpose", "[", 
       SubscriptBox["\[Sigma]", "s"], "]"}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["radius", "2"]}]}], "}"}]], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "sPlot"], " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     SubscriptBox["Q", "s"], ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", "0", ",", "0"}], "]"}]}], ",", " ", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}], ",", "  ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(s\)]\) (unitless)\>\""}], "}"}]}]}], 
    "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "a"], " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Transpose", "[", 
       SubscriptBox["\[Sigma]", "a"], "]"}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["radius", "2"]}]}], "}"}]], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "aPlot"], " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     SubscriptBox["Q", "a"], ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", "  ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(a\)]\) (unitless)\>\"", ",", " ", 
        "\"\<Absorption  efficiency\>\"", ",", " ", "None"}], "}"}]}], ",", 
     " ", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "ext"], " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"Transpose", "[", 
       SubscriptBox["\[Sigma]", "ext"], "]"}]}], 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"\[Pi]", " ", 
        SuperscriptBox["radius", "2"]}]}], "}"}]], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "extPlot"], " ", "=", " ", 
   RowBox[{"LogLinearListPlot", "[", 
    RowBox[{
     SubscriptBox["Q", "ext"], ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(ext\)]\) (unitless)\>\"", ",", " ", 
        "\"\<Extinction efficiency\>\"", ",", " ", "None"}], "}"}]}], ",", 
     " ", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Test", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1000", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           SubscriptBox["Q", "ext"], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ")"}], 
        RowBox[{"-", "1"}]]}], ",", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        SubscriptBox["Q", "ext"], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["Q", "extPlot2"], " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Test", ",", "  ", 
     RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"All", ",", " ", "All"}], "}"}]}], ",", " ", 
     RowBox[{"FrameLabel", "->", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Lambda] (nm)\>\"", ",", " ", 
        "\"\<\!\(\*SubscriptBox[\(Q\), \(ext\)]\) (unitless)\>\"", ",", " ", 
        "\"\<Extinction efficiency\>\"", ",", " ", "None"}], "}"}]}], ",", 
     " ", 
     RowBox[{"GridLines", "->", "Automatic"}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", " ", "450"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", " ", "1.25"}]}], "]"}]}], 
  ";"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create interpolations to the results and export them.", "Subsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[CellGroupData[{

Cell["\<\
Since the previous interpolating functions can take a long time to generate, \
here is some code to save them to file.  They can then be read in short order \
as compared to having to regenerate them.\
\>", "Subsubsection",
 FontColor->RGBColor[0, 0, 1]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HbScatCrossSection", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    SubscriptBox["\[Sigma]", "s"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HbAbsCrossSection", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    SubscriptBox["\[Sigma]", "a"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HbExtCrossSection", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    SubscriptBox["\[Sigma]", "ext"], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HbScatEfficiency", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    SubscriptBox["Q", "s"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HbAbsEfficiency", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    SubscriptBox["Q", "a"], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HbExtEfficiency", " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    SubscriptBox["Q", "ext"], "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "SetDirectory", "[", 
   "\"\<C:\\\\Art\\\\Notebooks\\\\Scatterometer\\\\Mie Theory\\\\Dispersion \
Data\>\"", "]"}], ";"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "HbO2Header", " ", "=", " ", 
   "\"\<Interpolations of \!\(\*SubscriptBox[\(\[Sigma]\), \(s\)]\), \
\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\), \!\(\*SubscriptBox[\(\[Sigma]\), \
\(ext\)]\), \!\(\*SubscriptBox[\(Q\), \(s\)]\), \!\(\*SubscriptBox[\(Q\), \(a\
\)]\), and \!\(\*SubscriptBox[\(Q\), \(ext\)]\) for oxygenated \
hemoglobin.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "HbHeader", " ", "=", " ", 
   "\"\<Interpolations of \!\(\*SubscriptBox[\(\[Sigma]\), \(s\)]\), \
\!\(\*SubscriptBox[\(\[Sigma]\), \(a\)]\), \!\(\*SubscriptBox[\(\[Sigma]\), \
\(ext\)]\), \!\(\*SubscriptBox[\(Q\), \(s\)]\), \!\(\*SubscriptBox[\(Q\), \(a\
\)]\), and \!\(\*SubscriptBox[\(Q\), \(ext\)]\) for deoxygenated \
hemoglobin.\>\""}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Put", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "HbHeader", ",", "HbScatCrossSection", ",", " ", "HbAbsCrossSection", ",",
      " ", "HbExtCrossSection", ",", "HbScatEfficiency", ",", " ", 
     "HbAbsEfficiency", ",", " ", "HbExtEfficiency"}], " ", "}"}], ",", " ", 
   "\"\<Hb XSections and Q Interpolations.m\>\""}], "]"}]], "Input"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.546774953887971*^9, 3.5467758712614417`*^9, 
  3.5478112490236654`*^9, 3.5478142303400373`*^9, 3.5478182327480106`*^9, 
  3.547819711374915*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1031, 576},
WindowMargins->{{Automatic, 40}, {Automatic, 64}},
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 371, 10, 32, "Input"],
Cell[953, 34, 559, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1549, 47, 45, 1, 65, "Section"],
Cell[1597, 50, 420, 10, 191, "Text"],
Cell[2020, 62, 1233, 25, 119, "Text"],
Cell[3256, 89, 288, 5, 47, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3581, 99, 50, 1, 65, "Section"],
Cell[3634, 102, 1037, 16, 101, "Text"],
Cell[CellGroupData[{
Cell[4696, 122, 244, 4, 31, "Input"],
Cell[4943, 128, 653, 10, 30, "Output"]
}, Open  ]],
Cell[5611, 141, 3041, 88, 132, "Input"],
Cell[8655, 231, 94, 1, 31, "Input"],
Cell[8752, 234, 99, 1, 29, "Text"],
Cell[8854, 237, 6816, 234, 279, "Input"],
Cell[CellGroupData[{
Cell[15695, 475, 5196, 178, 192, "Input"],
Cell[20894, 655, 737, 11, 30, "Output"],
Cell[21634, 668, 817, 13, 30, "Output"],
Cell[22454, 683, 848, 13, 30, "Output"],
Cell[23305, 698, 753, 11, 30, "Output"],
Cell[24061, 711, 849, 13, 30, "Output"],
Cell[24913, 726, 792, 13, 47, "Output"],
Cell[25708, 741, 752, 11, 30, "Output"],
Cell[26463, 754, 845, 13, 30, "Output"]
}, Open  ]],
Cell[27323, 770, 957, 17, 101, "Text"],
Cell[CellGroupData[{
Cell[28305, 791, 1084, 32, 152, "Input"],
Cell[CellGroupData[{
Cell[29414, 827, 994, 17, 23, "Print"],
Cell[30411, 846, 1010, 17, 23, "Print"],
Cell[31424, 865, 1142, 20, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[32593, 889, 1019, 21, 93, "Text"],
Cell[CellGroupData[{
Cell[33637, 914, 944, 28, 87, "Input"],
Cell[34584, 944, 1011, 16, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35644, 966, 63, 1, 65, "Section"],
Cell[35710, 969, 301, 6, 29, "Text"],
Cell[36014, 977, 317, 9, 31, "Input"],
Cell[36334, 988, 459, 8, 47, "Text"],
Cell[36796, 998, 2973, 91, 163, "Input"],
Cell[39772, 1091, 1314, 32, 83, "Text"],
Cell[41089, 1125, 691, 21, 70, "Input"],
Cell[CellGroupData[{
Cell[41805, 1150, 816, 19, 31, "Input"],
Cell[42624, 1171, 3477, 93, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46138, 1269, 771, 21, 31, "Input"],
Cell[46912, 1292, 2485, 68, 171, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49434, 1365, 741, 18, 31, "Input"],
Cell[50178, 1385, 2791, 76, 158, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53006, 1466, 667, 19, 31, "Input"],
Cell[53676, 1487, 2331, 64, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56044, 1556, 643, 17, 31, "Input"],
Cell[56690, 1575, 4066, 112, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60793, 1692, 599, 16, 31, "Input"],
Cell[61395, 1710, 4433, 119, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65865, 1834, 582, 16, 31, "Input"],
Cell[66450, 1852, 3601, 105, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70088, 1962, 585, 16, 31, "Input"],
Cell[70676, 1980, 4080, 118, 234, "Output"]
}, Open  ]],
Cell[74771, 2101, 604, 16, 31, "Input"],
Cell[75378, 2119, 672, 18, 31, "Input"],
Cell[76053, 2139, 496, 14, 31, "Input"],
Cell[CellGroupData[{
Cell[76574, 2157, 1117, 31, 52, "Input"],
Cell[77694, 2190, 3522, 71, 117, "Output"]
}, Open  ]],
Cell[81231, 2264, 540, 15, 31, "Input"],
Cell[81774, 2281, 545, 15, 31, "Input"],
Cell[82322, 2298, 556, 9, 52, "Input"],
Cell[82881, 2309, 766, 20, 31, "Input"],
Cell[83650, 2331, 544, 15, 31, "Input"],
Cell[CellGroupData[{
Cell[84219, 2350, 1458, 38, 52, "Input"],
Cell[85680, 2390, 3842, 73, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89559, 2468, 1395, 37, 52, "Input"],
Cell[90957, 2507, 4909, 103, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95903, 2615, 130, 3, 27, "Subsubsection"],
Cell[96036, 2620, 6912, 205, 312, "Input"],
Cell[102951, 2827, 89, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[103065, 2832, 982, 27, 52, "Input"],
Cell[104050, 2861, 4726, 98, 132, "Output"]
}, Open  ]],
Cell[108791, 2962, 245, 5, 29, "Text"],
Cell[109039, 2969, 2572, 81, 107, "Input"],
Cell[111614, 3052, 83, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[111722, 3057, 623, 19, 31, "Input"],
Cell[112348, 3078, 3120, 68, 132, "Output"]
}, Open  ]],
Cell[115483, 3149, 1033, 31, 47, "Text"],
Cell[116519, 3182, 1068, 32, 55, "Input"],
Cell[117590, 3216, 1422, 41, 55, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119061, 3263, 72, 1, 65, "Section"],
Cell[119136, 3266, 278, 6, 29, "Text"],
Cell[119417, 3274, 2630, 86, 154, "Input"],
Cell[122050, 3362, 99, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[122174, 3367, 773, 16, 76, "Input"],
Cell[CellGroupData[{
Cell[122972, 3387, 1422, 27, 62, "Print"],
Cell[124397, 3416, 1833, 34, 62, "Print"],
Cell[126233, 3452, 1809, 34, 62, "Print"],
Cell[128045, 3488, 1788, 34, 62, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[129882, 3528, 105, 1, 27, "Subsubsection"],
Cell[129990, 3531, 304, 6, 47, "Text"],
Cell[130297, 3539, 401, 8, 31, "Input"],
Cell[130701, 3549, 971, 24, 41, "Input"],
Cell[131675, 3575, 535, 12, 52, "Input"],
Cell[CellGroupData[{
Cell[132235, 3591, 280, 7, 31, "Input"],
Cell[132518, 3600, 2146, 41, 458, "Output"]
}, Open  ]],
Cell[134679, 3644, 1025, 25, 41, "Input"],
Cell[135707, 3671, 919, 23, 41, "Input"],
Cell[136629, 3696, 1194, 27, 41, "Input"],
Cell[137826, 3725, 129, 3, 29, "Text"],
Cell[137958, 3730, 1413, 37, 41, "Input"],
Cell[139374, 3769, 1307, 35, 52, "Input"],
Cell[140684, 3806, 498, 12, 31, "Input"],
Cell[141185, 3820, 92, 1, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[141326, 3827, 70, 1, 65, "Section"],
Cell[141399, 3830, 185, 4, 29, "Text"],
Cell[141587, 3836, 550, 18, 124, "Input"],
Cell[142140, 3856, 97, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[142262, 3861, 478, 10, 31, "Input"],
Cell[142743, 3873, 1384, 23, 62, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144164, 3901, 140, 4, 27, "Subsubsection"],
Cell[144307, 3907, 252, 5, 29, "Text"],
Cell[144562, 3914, 401, 8, 31, "Input"],
Cell[144966, 3924, 1065, 26, 41, "Input"],
Cell[146034, 3952, 1059, 26, 41, "Input"],
Cell[147096, 3980, 1064, 25, 41, "Input"],
Cell[148163, 4007, 129, 3, 29, "Text"],
Cell[148295, 4012, 1310, 35, 52, "Input"],
Cell[149608, 4049, 556, 13, 52, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150201, 4067, 144, 4, 27, "Subsubsection"],
Cell[150348, 4073, 305, 6, 47, "Text"],
Cell[150656, 4081, 530, 11, 31, "Input"],
Cell[151189, 4094, 549, 11, 31, "Input"],
Cell[151741, 4107, 1125, 26, 41, "Input"],
Cell[152869, 4135, 1169, 27, 41, "Input"],
Cell[154041, 4164, 1079, 25, 41, "Input"],
Cell[155123, 4191, 129, 3, 29, "Text"],
Cell[155255, 4196, 1276, 34, 52, "Input"],
Cell[CellGroupData[{
Cell[156556, 4234, 554, 12, 52, "Input"],
Cell[157113, 4248, 686, 13, 21, "Message"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157860, 4268, 73, 1, 65, "Section"],
Cell[157936, 4271, 305, 9, 29, "Text"],
Cell[158244, 4282, 2453, 75, 105, "Input"],
Cell[CellGroupData[{
Cell[160722, 4361, 309, 7, 31, "Input"],
Cell[161034, 4370, 618, 9, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161689, 4384, 107, 1, 27, "Subsubsection"],
Cell[161799, 4387, 726, 15, 52, "Input"],
Cell[162528, 4404, 1198, 28, 68, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[163775, 4438, 64, 1, 65, "Section"],
Cell[163842, 4441, 188, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[164055, 4448, 483, 12, 70, "Input"],
Cell[164541, 4462, 238, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164816, 4470, 125, 2, 31, "Input"],
Cell[164944, 4474, 759, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165740, 4490, 467, 13, 48, "Input"],
Cell[166210, 4505, 2002, 39, 124, "Output"]
}, Open  ]],
Cell[168227, 4547, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[168344, 4552, 97, 1, 27, "Subsubsection"],
Cell[168444, 4555, 535, 11, 31, "Input"],
Cell[168982, 4568, 334, 8, 31, "Input"],
Cell[169319, 4578, 1229, 28, 68, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[170597, 4612, 83, 1, 65, "Section"],
Cell[170683, 4615, 397, 7, 47, "Text"],
Cell[171083, 4624, 1952, 62, 128, "Input"],
Cell[173038, 4688, 169, 3, 31, "Input"],
Cell[173210, 4693, 321, 7, 31, "Input"],
Cell[173534, 4702, 1377, 39, 40, "Input"],
Cell[174914, 4743, 1877, 49, 40, "Input"],
Cell[176794, 4794, 280, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[177099, 4803, 392, 11, 31, "Input"],
Cell[177494, 4816, 741, 14, 48, "Output"]
}, Open  ]],
Cell[178250, 4833, 645, 17, 67, "Text"],
Cell[178898, 4852, 2232, 69, 254, "Input"],
Cell[CellGroupData[{
Cell[181155, 4925, 89, 1, 36, "Subsection"],
Cell[CellGroupData[{
Cell[181269, 4930, 106, 1, 27, "Subsubsection"],
Cell[CellGroupData[{
Cell[181400, 4935, 788, 19, 52, "Input"],
Cell[182191, 4956, 12671, 267, 208, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194899, 5228, 741, 18, 52, "Input"],
Cell[195643, 5248, 24528, 486, 373, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220208, 5739, 747, 18, 52, "Input"],
Cell[220958, 5759, 26439, 529, 368, "Output"]
}, Open  ]],
Cell[247412, 6291, 137, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[247574, 6299, 1590, 40, 72, "Input"],
Cell[249167, 6341, 28198, 525, 348, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277414, 6872, 101, 1, 27, "Subsubsection"],
Cell[277518, 6875, 575, 10, 65, "Text"],
Cell[278096, 6887, 83, 1, 31, "Input"],
Cell[278182, 6890, 1760, 49, 72, "Input"],
Cell[CellGroupData[{
Cell[279967, 6943, 156, 3, 31, "Input"],
Cell[280126, 6948, 545, 7, 30, "Output"]
}, Open  ]],
Cell[280686, 6958, 155, 3, 31, "Input"],
Cell[280844, 6963, 850, 21, 52, "Input"],
Cell[CellGroupData[{
Cell[281719, 6988, 1014, 20, 47, "Input"],
Cell[282736, 7010, 18626, 317, 515, "Output"]
}, Open  ]],
Cell[301377, 7330, 248, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[301650, 7344, 649, 16, 47, "Input"],
Cell[302302, 7362, 21376, 363, 515, "Output"]
}, Open  ]],
Cell[323693, 7728, 250, 10, 32, "Text"],
Cell[CellGroupData[{
Cell[323968, 7742, 653, 16, 47, "Input"],
Cell[324624, 7760, 19788, 337, 515, "Output"]
}, Open  ]],
Cell[344427, 8100, 137, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[344589, 8108, 1624, 41, 92, "Input"],
Cell[346216, 8151, 57128, 951, 533, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[403393, 9108, 105, 1, 27, "Subsubsection"],
Cell[403501, 9111, 320, 6, 70, "Text"],
Cell[CellGroupData[{
Cell[403846, 9121, 1796, 50, 70, "Input"],
Cell[405645, 9173, 586, 11, 70, "Message"]
}, Open  ]],
Cell[406246, 9187, 603, 12, 70, "Input"],
Cell[406852, 9201, 1552, 42, 70, "Input"],
Cell[408407, 9245, 249, 10, 70, "Text"],
Cell[CellGroupData[{
Cell[408681, 9259, 1185, 33, 70, "Input"],
Cell[409869, 9294, 826, 15, 70, "Message"],
Cell[410698, 9311, 824, 15, 70, "Message"],
Cell[411525, 9328, 824, 15, 70, "Message"],
Cell[412352, 9345, 899, 16, 70, "Message"],
Cell[413254, 9363, 951, 16, 70, "Message"],
Cell[414208, 9381, 953, 16, 70, "Message"],
Cell[415164, 9399, 951, 16, 70, "Message"],
Cell[416118, 9417, 899, 16, 70, "Message"],
Cell[417020, 9435, 817, 15, 70, "Message"],
Cell[417840, 9452, 819, 15, 70, "Message"],
Cell[418662, 9469, 819, 15, 70, "Message"],
Cell[419484, 9486, 897, 16, 70, "Message"],
Cell[420384, 9504, 1060, 18, 70, "Message"],
Cell[421447, 9524, 930, 16, 70, "Message"],
Cell[422380, 9542, 928, 16, 70, "Message"],
Cell[423311, 9560, 901, 16, 70, "Message"],
Cell[424215, 9578, 493, 8, 70, "Output"]
}, Open  ]],
Cell[424723, 9589, 223, 5, 70, "Input"],
Cell[424949, 9596, 248, 10, 70, "Text"],
Cell[CellGroupData[{
Cell[425222, 9610, 1182, 33, 70, "Input"],
Cell[426407, 9645, 815, 15, 70, "Message"],
Cell[427225, 9662, 817, 15, 70, "Message"],
Cell[428045, 9679, 817, 15, 70, "Message"],
Cell[428865, 9696, 893, 16, 70, "Message"],
Cell[429761, 9714, 945, 16, 70, "Message"],
Cell[430709, 9732, 947, 16, 70, "Message"],
Cell[431659, 9750, 947, 16, 70, "Message"],
Cell[432609, 9768, 893, 16, 70, "Message"],
Cell[433505, 9786, 813, 15, 70, "Message"],
Cell[434321, 9803, 811, 15, 70, "Message"],
Cell[435135, 9820, 813, 15, 70, "Message"],
Cell[435951, 9837, 891, 16, 70, "Message"],
Cell[436845, 9855, 1054, 18, 70, "Message"],
Cell[437902, 9875, 924, 16, 70, "Message"],
Cell[438829, 9893, 924, 16, 70, "Message"],
Cell[439756, 9911, 895, 16, 70, "Message"],
Cell[440654, 9929, 500, 8, 70, "Output"]
}, Open  ]],
Cell[441169, 9940, 223, 5, 70, "Input"],
Cell[441395, 9947, 250, 10, 70, "Text"],
Cell[CellGroupData[{
Cell[441670, 9961, 1189, 33, 70, "Input"],
Cell[442862, 9996, 818, 15, 70, "Message"],
Cell[443683, 10013, 816, 15, 70, "Message"],
Cell[444502, 10030, 818, 15, 70, "Message"],
Cell[445323, 10047, 893, 16, 70, "Message"],
Cell[446219, 10065, 947, 16, 70, "Message"],
Cell[447169, 10083, 947, 16, 70, "Message"],
Cell[448119, 10101, 947, 16, 70, "Message"],
Cell[449069, 10119, 893, 16, 70, "Message"],
Cell[449965, 10137, 813, 15, 70, "Message"],
Cell[450781, 10154, 813, 15, 70, "Message"],
Cell[451597, 10171, 813, 15, 70, "Message"],
Cell[452413, 10188, 889, 16, 70, "Message"],
Cell[453305, 10206, 1054, 18, 70, "Message"],
Cell[454362, 10226, 1054, 18, 70, "Message"],
Cell[455419, 10246, 924, 16, 70, "Message"],
Cell[456346, 10264, 893, 16, 70, "Message"],
Cell[457242, 10282, 504, 8, 70, "Output"]
}, Open  ]],
Cell[457761, 10293, 224, 5, 70, "Input"],
Cell[457988, 10300, 137, 4, 70, "Text"],
Cell[458128, 10306, 1825, 47, 70, "Input"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[460014, 10360, 114, 3, 65, "Section"],
Cell[460131, 10365, 135, 2, 29, "Text"],
Cell[460269, 10369, 622, 17, 49, "Input"],
Cell[460894, 10388, 87, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[461006, 10393, 1369, 29, 100, "Input"],
Cell[462378, 10424, 9299, 160, 499, "Output"]
}, Open  ]],
Cell[471692, 10587, 121, 2, 31, "Input"],
Cell[471816, 10591, 94, 1, 31, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[471947, 10597, 43, 1, 65, "Section"],
Cell[471993, 10600, 650, 10, 83, "Text"],
Cell[472646, 10612, 1930, 60, 105, "Input"],
Cell[474579, 10674, 2567, 78, 128, "Input"],
Cell[477149, 10754, 390, 12, 29, "Text"],
Cell[477542, 10768, 2347, 69, 174, "Input"],
Cell[479892, 10839, 1069, 19, 92, "Input"],
Cell[480964, 10860, 461, 8, 52, "Input"],
Cell[481428, 10870, 229, 5, 29, "Text"],
Cell[481660, 10877, 83, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[481768, 10882, 1043, 22, 52, "Input"],
Cell[482814, 10906, 680, 10, 30, "Output"],
Cell[483497, 10918, 689, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[484223, 10934, 1495, 42, 126, "Input"],
Cell[485721, 10978, 473, 9, 30, "Output"],
Cell[486197, 10989, 496, 10, 33, "Output"],
Cell[486696, 11001, 491, 10, 30, "Output"]
}, Open  ]],
Cell[487202, 11014, 329, 7, 72, "Input"],
Cell[CellGroupData[{
Cell[487556, 11025, 83, 1, 27, "Subsubsection"],
Cell[487642, 11028, 84, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[487751, 11033, 2730, 70, 92, "Input"],
Cell[490484, 11105, 800, 14, 21, "Message"]
}, Open  ]],
Cell[491299, 11122, 878, 13, 101, "Text"],
Cell[CellGroupData[{
Cell[492202, 11139, 296, 6, 31, "Input"],
Cell[492501, 11147, 4666, 126, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497204, 11278, 193, 4, 31, "Input"],
Cell[497400, 11284, 4578, 126, 149, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502015, 11415, 254, 5, 31, "Input"],
Cell[502272, 11422, 593, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[502902, 11437, 740, 17, 49, "Input"],
Cell[503645, 11456, 6001, 143, 226, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509683, 11604, 684, 17, 49, "Input"],
Cell[510370, 11623, 6256, 145, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516663, 11773, 2192, 41, 76, "Input"],
Cell[518858, 11816, 3340, 52, 117, "Message"],
Cell[522201, 11870, 3632, 68, 117, "Message"],
Cell[525836, 11940, 58886, 946, 397, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[584759, 12891, 355, 7, 31, "Input"],
Cell[585117, 12900, 6133, 90, 115, "Message"],
Cell[591253, 12992, 19705, 325, 122, "Output"]
}, Open  ]],
Cell[610973, 13320, 523, 13, 31, "Input"],
Cell[611499, 13335, 139, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[611663, 13343, 1034, 26, 76, "Input"],
Cell[612700, 13371, 452, 10, 42, "Message"],
Cell[613155, 13383, 452, 10, 42, "Message"],
Cell[613610, 13395, 452, 10, 42, "Message"],
Cell[614065, 13407, 530, 11, 21, "Message"],
Cell[614598, 13420, 693, 13, 56, "Message"],
Cell[615294, 13435, 693, 13, 56, "Message"],
Cell[615990, 13450, 559, 14, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616586, 13469, 307, 6, 31, "Input"],
Cell[616896, 13477, 533, 14, 417, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617466, 13496, 479, 12, 31, "Input"],
Cell[617948, 13510, 553, 15, 373, "Output"]
}, Open  ]],
Cell[618516, 13528, 148, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[618689, 13536, 1150, 27, 76, "Input"],
Cell[619842, 13565, 3153, 48, 131, "Message"],
Cell[622998, 13615, 3541, 66, 107, "Message"],
Cell[626542, 13683, 124320, 2063, 417, "Output"]
}, Open  ]],
Cell[750877, 15749, 297, 7, 31, "Input"],
Cell[751177, 15758, 443, 11, 31, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[751669, 15775, 80, 1, 65, "Section"],
Cell[751752, 15778, 502, 13, 47, "Text"],
Cell[752257, 15793, 2567, 78, 128, "Input"],
Cell[754827, 15873, 130, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[754982, 15880, 242, 7, 31, "Input"],
Cell[755227, 15889, 921, 22, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[756185, 15916, 70, 1, 27, "Subsubsection"],
Cell[756258, 15919, 3146, 111, 186, "Text"],
Cell[759407, 16032, 4251, 131, 336, "Input"],
Cell[763661, 16165, 1774, 48, 52, "Input"],
Cell[CellGroupData[{
Cell[765460, 16217, 232, 7, 31, "Input"],
Cell[765695, 16226, 995, 24, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766727, 16255, 272, 7, 49, "Input"],
Cell[767002, 16264, 1104, 25, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768143, 16294, 125, 2, 31, "Input"],
Cell[768271, 16298, 79, 1, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[768411, 16306, 48, 1, 65, "Section"],
Cell[CellGroupData[{
Cell[768484, 16311, 417, 8, 53, "Subsection"],
Cell[768904, 16321, 709, 11, 83, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769650, 16337, 92, 2, 36, "Subsection"],
Cell[769745, 16341, 154, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[769924, 16348, 6894, 211, 735, "Input"],
Cell[776821, 16561, 329, 4, 30, "Output"],
Cell[777153, 16567, 328, 4, 30, "Output"],
Cell[777484, 16573, 321, 4, 30, "Output"],
Cell[777808, 16579, 328, 4, 30, "Output"],
Cell[778139, 16585, 328, 4, 30, "Output"],
Cell[778470, 16591, 321, 4, 30, "Output"],
Cell[778794, 16597, 423, 6, 30, "Output"],
Cell[779220, 16605, 423, 6, 30, "Output"],
Cell[779646, 16613, 331, 4, 30, "Output"],
Cell[779980, 16619, 414, 6, 30, "Output"],
Cell[780397, 16627, 412, 6, 30, "Output"],
Cell[780812, 16635, 338, 4, 30, "Output"],
Cell[781153, 16641, 339, 4, 30, "Output"],
Cell[781495, 16647, 320, 4, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[781864, 16657, 98, 2, 36, "Subsection"],
Cell[781965, 16661, 9096, 288, 198, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791098, 16954, 114, 2, 36, "Subsection"],
Cell[791215, 16958, 2297, 71, 166, "Input"],
Cell[793515, 17031, 787, 24, 146, "Input"],
Cell[CellGroupData[{
Cell[794327, 17059, 1242, 29, 72, "Input"],
Cell[795572, 17090, 79, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[795700, 17097, 114, 2, 70, "Subsection"],
Cell[795817, 17101, 277, 3, 70, "Text"],
Cell[796097, 17106, 1825, 57, 70, "Input"],
Cell[CellGroupData[{
Cell[797947, 17167, 163, 3, 70, "Input"],
Cell[798113, 17172, 4160, 119, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[802322, 17297, 206, 5, 70, "Subsection"],
Cell[CellGroupData[{
Cell[802553, 17306, 3015, 88, 70, "Input"],
Cell[805571, 17396, 160, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[805768, 17404, 850, 22, 70, "Input"],
Cell[806621, 17428, 159, 3, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[806829, 17437, 172, 6, 70, "Subsection"],
Cell[807004, 17445, 388, 5, 70, "Text"],
Cell[CellGroupData[{
Cell[807417, 17454, 1008, 26, 70, "Input"],
Cell[808428, 17482, 546, 9, 70, "Message"],
Cell[808977, 17493, 546, 9, 70, "Message"],
Cell[809526, 17504, 546, 9, 70, "Message"],
Cell[810075, 17515, 552, 10, 70, "Message"],
Cell[810630, 17527, 161, 3, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810828, 17535, 558, 15, 70, "Input"],
Cell[811389, 17552, 103, 1, 70, "Output"]
}, Open  ]],
Cell[811507, 17556, 266, 8, 70, "Input"],
Cell[811776, 17566, 153, 5, 70, "Text"],
Cell[811932, 17573, 1621, 38, 70, "Input"],
Cell[813556, 17613, 217, 5, 70, "Text"],
Cell[813776, 17620, 2730, 67, 70, "Input"],
Cell[816509, 17689, 685, 20, 70, "Input"],
Cell[CellGroupData[{
Cell[817219, 17713, 2008, 53, 70, "Input"],
Cell[819230, 17768, 5623, 82, 70, "Message"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[824902, 17856, 116, 2, 70, "Subsection"],
Cell[825021, 17860, 512, 15, 70, "Input"],
Cell[825536, 17877, 413, 11, 70, "Input"],
Cell[825952, 17890, 1075, 25, 70, "Input"],
Cell[827030, 17917, 192, 5, 70, "Text"],
Cell[827225, 17924, 2269, 57, 70, "Input"],
Cell[829497, 17983, 272, 6, 70, "Text"],
Cell[829772, 17991, 1092, 29, 70, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[830913, 18026, 75, 1, 70, "Section"],
Cell[830991, 18029, 1144, 15, 70, "Subsection"],
Cell[CellGroupData[{
Cell[832160, 18048, 138, 2, 70, "Subsection"],
Cell[CellGroupData[{
Cell[832323, 18054, 495, 8, 70, "Subsubsection"],
Cell[832821, 18064, 171, 5, 70, "Input"],
Cell[832995, 18071, 54, 0, 70, "Text"],
Cell[833052, 18073, 759, 21, 70, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[833848, 18099, 749, 11, 70, "Subsubsection"],
Cell[834600, 18112, 821, 23, 70, "Input"],
Cell[835424, 18137, 52, 0, 70, "Text"],
Cell[835479, 18139, 2215, 56, 70, "Input"],
Cell[837697, 18197, 56, 0, 70, "Text"],
Cell[837756, 18199, 769, 21, 70, "Input"],
Cell[838528, 18222, 85, 2, 70, "Text"],
Cell[838616, 18226, 757, 20, 70, "Input"],
Cell[839376, 18248, 2213, 56, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[841626, 18309, 246, 5, 70, "Subsubsection"],
Cell[841875, 18316, 2896, 70, 70, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[844820, 18392, 175, 3, 70, "Subsection"],
Cell[CellGroupData[{
Cell[845020, 18399, 260, 5, 70, "Subsubsection"],
Cell[845283, 18406, 171, 5, 70, "Input"],
Cell[845457, 18413, 440, 11, 70, "Input"],
Cell[845900, 18426, 440, 11, 70, "Input"],
Cell[846343, 18439, 2463, 63, 70, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[848855, 18508, 1197, 35, 70, "Subsection"],
Cell[850055, 18545, 1667, 49, 70, "Input"],
Cell[851725, 18596, 58, 0, 70, "Text"],
Cell[851786, 18598, 3710, 101, 70, "Input"],
Cell[855499, 18701, 45, 0, 70, "Text"],
Cell[855547, 18703, 2593, 79, 70, "Input"],
Cell[858143, 18784, 76, 0, 70, "Text"],
Cell[858222, 18786, 1303, 39, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[859562, 18830, 367, 11, 70, "Subsection"],
Cell[859932, 18843, 506, 15, 70, "Input"],
Cell[860441, 18860, 875, 20, 70, "Input"],
Cell[861319, 18882, 496, 14, 70, "Input"],
Cell[861818, 18898, 870, 20, 70, "Input"],
Cell[862691, 18920, 510, 15, 70, "Input"],
Cell[863204, 18937, 885, 23, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[864126, 18965, 87, 1, 70, "Subsection"],
Cell[864216, 18968, 375, 12, 70, "Input"],
Cell[864594, 18982, 746, 19, 70, "Input"],
Cell[865343, 19003, 375, 12, 70, "Input"],
Cell[865721, 19017, 818, 20, 70, "Input"],
Cell[866542, 19039, 379, 12, 70, "Input"],
Cell[866924, 19053, 704, 17, 70, "Input"],
Cell[867631, 19072, 549, 17, 70, "Input"],
Cell[868183, 19091, 802, 20, 70, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[869022, 19116, 106, 1, 70, "Subsection"],
Cell[CellGroupData[{
Cell[869153, 19121, 264, 5, 70, "Subsubsection"],
Cell[869420, 19128, 502, 12, 70, "Input"],
Cell[869925, 19142, 475, 12, 70, "Input"],
Cell[870403, 19156, 171, 5, 70, "Input"],
Cell[870577, 19163, 795, 16, 70, "Input"],
Cell[CellGroupData[{
Cell[871397, 19183, 370, 8, 70, "Input"],
Cell[871770, 19193, 201, 3, 70, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
